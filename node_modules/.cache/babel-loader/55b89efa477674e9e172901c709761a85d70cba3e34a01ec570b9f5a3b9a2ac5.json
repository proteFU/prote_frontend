{"ast":null,"code":"/**\n * anime.js - ESM\n * @version v4.0.2\n * @author Julian Garnier\n * @license MIT\n * @copyright (c) 2025 Julian Garnier\n * @see https://animejs.com\n */\n\n/**\n * @typedef {Object} DefaultsParams\n * @property {Number|String} [id]\n * @property {PercentageKeyframes|DurationKeyframes} [keyframes]\n * @property {EasingParam} [playbackEase]\n * @property {Number} [playbackRate]\n * @property {Number} [frameRate]\n * @property {Number|Boolean} [loop]\n * @property {Boolean} [reversed]\n * @property {Boolean} [alternate]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number|FunctionValue} [duration]\n * @property {Number|FunctionValue} [delay]\n * @property {Number} [loopDelay]\n * @property {EasingParam} [ease]\n * @property {'none'|'replace'|'blend'|compositionTypes} [composition]\n * @property {(v: any) => any} [modifier]\n * @property {(tickable: Tickable) => void} [onBegin]\n * @property {(tickable: Tickable) => void} [onBeforeUpdate]\n * @property {(tickable: Tickable) => void} [onUpdate]\n * @property {(tickable: Tickable) => void} [onLoop]\n * @property {(tickable: Tickable) => void} [onPause]\n * @property {(tickable: Tickable) => void} [onComplete]\n * @property {(renderable: Renderable) => void} [onRender]\n */\n\n/** @typedef {JSAnimation|Timeline} Renderable */\n/** @typedef {Timer|Renderable} Tickable */\n/** @typedef {Timer&JSAnimation&Timeline} CallbackArgument */\n/** @typedef {Animatable|Tickable|Draggable|ScrollObserver|Scope} Revertible */\n\n/**\n * @typedef {Object} DraggableAxisParam\n * @property {String} [mapTo]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [snap]\n */\n\n/**\n * @typedef {Object} DraggableCursorParams\n * @property {String} [onHover]\n * @property {String} [onGrab]\n */\n\n/**\n * @typedef {Object} DraggableParams\n * @property {DOMTargetSelector} [trigger]\n * @property {DOMTargetSelector|Array<Number>|((draggable: Draggable) => DOMTargetSelector|Array<Number>)} [container]\n * @property {Boolean|DraggableAxisParam} [x]\n * @property {Boolean|DraggableAxisParam} [y]\n * @property {TweenModifier} [modifier]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [snap]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [containerPadding]\n * @property {Number|((draggable: Draggable) => Number)} [containerFriction]\n * @property {Number|((draggable: Draggable) => Number)} [releaseContainerFriction]\n * @property {Number|((draggable: Draggable) => Number)} [dragSpeed]\n * @property {Number|((draggable: Draggable) => Number)} [scrollSpeed]\n * @property {Number|((draggable: Draggable) => Number)} [scrollThreshold]\n * @property {Number|((draggable: Draggable) => Number)} [minVelocity]\n * @property {Number|((draggable: Draggable) => Number)} [maxVelocity]\n * @property {Number|((draggable: Draggable) => Number)} [velocityMultiplier]\n * @property {Number} [releaseMass]\n * @property {Number} [releaseStiffness]\n * @property {Number} [releaseDamping]\n * @property {Boolean} [releaseDamping]\n * @property {EasingParam} [releaseEase]\n * @property {Boolean|DraggableCursorParams|((draggable: Draggable) => Boolean|DraggableCursorParams)} [cursor]\n * @property {Callback<Draggable>} [onGrab]\n * @property {Callback<Draggable>} [onDrag]\n * @property {Callback<Draggable>} [onRelease]\n * @property {Callback<Draggable>} [onUpdate]\n * @property {Callback<Draggable>} [onSettle]\n * @property {Callback<Draggable>} [onSnap]\n * @property {Callback<Draggable>} [onResize]\n * @property {Callback<Draggable>} [onAfterResize]\n */\n\n/**\n * @typedef {SVGGeometryElement & {\n *   setAttribute(name: 'draw', value: `${number} ${number}`): void;\n *   draw: `${number} ${number}`;\n * }} DrawableSVGGeometry\n */\n\n/**\n * @callback EasingFunction\n * @param {Number} time\n * @return {Number}\n */\n\n/**\n * @typedef {('linear'|'linear(x1, x2 25%, x3)'|'in'|'out'|'inOut'|'inQuad'|'outQuad'|'inOutQuad'|'inCubic'|'outCubic'|'inOutCubic'|'inQuart'|'outQuart'|'inOutQuart'|'inQuint'|'outQuint'|'inOutQuint'|'inSine'|'outSine'|'inOutSine'|'inCirc'|'outCirc'|'inOutCirc'|'inExpo'|'outExpo'|'inOutExpo'|'inBounce'|'outBounce'|'inOutBounce'|'inBack'|'outBack'|'inOutBack'|'inElastic'|'outElastic'|'inOutElastic'|'irregular'|'cubicBezier'|'steps'|'in(p = 1.675)'|'out(p = 1.675)'|'inOut(p = 1.675)'|'inBack(overshoot = 1.70158)'|'outBack(overshoot = 1.70158)'|'inOutBack(overshoot = 1.70158)'|'inElastic(amplitude = 1, period = .3)'|'outElastic(amplitude = 1, period = .3)'|'inOutElastic(amplitude = 1, period = .3)'|'irregular(length = 10, randomness = 1)'|'cubicBezier(x1, y1, x2, y2)'|'steps(steps = 10)')} EaseStringParamNames\n */\n\n// A hack to get both ease names suggestions AND allow any strings\n// https://github.com/microsoft/TypeScript/issues/29729#issuecomment-460346421\n/** @typedef {(String & {})|EaseStringParamNames|EasingFunction|Spring} EasingParam */\n\n/** @typedef {HTMLElement|SVGElement} DOMTarget */\n/** @typedef {Record<String, any>} JSTarget */\n/** @typedef {DOMTarget|JSTarget} Target */\n/** @typedef {Target|NodeList|String} TargetSelector */\n/** @typedef {DOMTarget|NodeList|String} DOMTargetSelector */\n/** @typedef {Array.<DOMTargetSelector>|DOMTargetSelector} DOMTargetsParam */\n/** @typedef {Array.<DOMTarget>} DOMTargetsArray */\n/** @typedef {Array.<JSTarget>|JSTarget} JSTargetsParam */\n/** @typedef {Array.<JSTarget>} JSTargetsArray */\n/** @typedef {Array.<TargetSelector>|TargetSelector} TargetsParam */\n/** @typedef {Array.<Target>} TargetsArray */\n\n/**\n * @callback FunctionValue\n * @param {Target} target - The animated target\n * @param {Number} index - The target index\n * @param {Number} length - The total number of animated targets\n * @return {Number|String|TweenObjectValue|Array.<Number|String|TweenObjectValue>}\n */\n\n/**\n * @callback TweenModifier\n * @param {Number} value - The animated value\n * @return {Number|String}\n */\n\n/** @typedef {[Number, Number, Number, Number]} ColorArray */\n\n/**\n * @template T\n * @callback Callback\n * @param {T} self - Returns itself\n * @param {PointerEvent} [e]\n * @return {*}\n */\n\n/**\n * @template {object} T\n * @typedef {Object} TickableCallbacks\n * @property {Callback<T>} [onBegin]\n * @property {Callback<T>} [onBeforeUpdate]\n * @property {Callback<T>} [onUpdate]\n * @property {Callback<T>} [onLoop]\n * @property {Callback<T>} [onPause]\n * @property {Callback<T>} [onComplete]\n */\n\n/**\n * @template {object} T\n * @typedef {Object} RenderableCallbacks\n * @property {Callback<T>} [onRender]\n */\n\n/**\n * @typedef {Object} Tween\n * @property {Number} id\n * @property {JSAnimation} parent\n * @property {String} property\n * @property {Target} target\n * @property {String|Number} _value\n * @property {Function|null} _func\n * @property {EasingFunction} _ease\n * @property {Array.<Number>} _fromNumbers\n * @property {Array.<Number>} _toNumbers\n * @property {Array.<String>} _strings\n * @property {Number} _fromNumber\n * @property {Number} _toNumber\n * @property {Array.<Number>} _numbers\n * @property {Number} _number\n * @property {String} _unit\n * @property {TweenModifier} _modifier\n * @property {Number} _currentTime\n * @property {Number} _delay\n * @property {Number} _updateDuration\n * @property {Number} _startTime\n * @property {Number} _changeDuration\n * @property {Number} _absoluteStartTime\n * @property {tweenTypes} _tweenType\n * @property {valueTypes} _valueType\n * @property {Number} _composition\n * @property {Number} _isOverlapped\n * @property {Number} _isOverridden\n * @property {Number} _renderTransforms\n * @property {Tween} _prevRep\n * @property {Tween} _nextRep\n * @property {Tween} _prevAdd\n * @property {Tween} _nextAdd\n * @property {Tween} _prev\n * @property {Tween} _next\n */\n\n/**\n * @typedef TweenDecomposedValue\n * @property {Number} t - Type\n * @property {Number} n - Single number value\n * @property {String} u - Value unit\n * @property {String} o - Value operator\n * @property {Array.<Number>} d - Array of Numbers (in case of complex value type)\n * @property {Array.<String>} s - Strings (in case of complex value type)\n */\n\n/** @typedef {{_head: null|Tween, _tail: null|Tween}} TweenPropertySiblings */\n/** @typedef {Record<String, TweenPropertySiblings>} TweenLookups */\n/** @typedef {WeakMap.<Target, TweenLookups>} TweenReplaceLookups */\n/** @typedef {Map.<Target, TweenLookups>} TweenAdditiveLookups */\n\n/**\n * @typedef {Object} TimerOptions\n * @property {Number|String} [id]\n * @property {TweenParamValue} [duration]\n * @property {TweenParamValue} [delay]\n * @property {Number} [loopDelay]\n * @property {Boolean} [reversed]\n * @property {Boolean} [alternate]\n * @property {Boolean|Number} [loop]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number} [frameRate]\n * @property {Number} [playbackRate]\n */\n\n/**\n\n/**\n * @typedef {TimerOptions & TickableCallbacks<Timer>} TimerParams\n */\n\n/**\n * @typedef {Number|String|FunctionValue} TweenParamValue\n */\n\n/**\n * @typedef {TweenParamValue|[TweenParamValue, TweenParamValue]} TweenPropValue\n */\n\n/**\n * @typedef {(String & {})|'none'|'replace'|'blend'|compositionTypes} TweenComposition\n */\n\n/**\n * @typedef {Object} TweenParamsOptions\n * @property {TweenParamValue} [duration]\n * @property {TweenParamValue} [delay]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n */\n\n/**\n * @typedef {Object} TweenValues\n * @property {TweenParamValue} [from]\n * @property {TweenPropValue} [to]\n * @property {TweenPropValue} [fromTo]\n */\n\n/**\n * @typedef {TweenParamsOptions & TweenValues} TweenKeyValue\n */\n\n/**\n * @typedef {Array.<TweenKeyValue|TweenPropValue>} ArraySyntaxValue\n */\n\n/**\n * @typedef {TweenParamValue|ArraySyntaxValue|TweenKeyValue} TweenOptions\n */\n\n/**\n * @typedef {Partial<{to: TweenParamValue|Array.<TweenParamValue>; from: TweenParamValue|Array.<TweenParamValue>; fromTo: TweenParamValue|Array.<TweenParamValue>;}>} TweenObjectValue\n */\n\n/**\n * @typedef {Object} PercentageKeyframeOptions\n * @property {EasingParam} [ease]\n */\n\n/**\n * @typedef {Record<String, TweenParamValue>} PercentageKeyframeParams\n */\n\n/**\n * @typedef {Record<String, PercentageKeyframeParams & PercentageKeyframeOptions>} PercentageKeyframes\n */\n\n/**\n * @typedef {Array<Record<String, TweenOptions | TweenModifier | boolean> & TweenParamsOptions>} DurationKeyframes\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {PercentageKeyframes|DurationKeyframes} [keyframes]\n * @property {EasingParam} [playbackEase]\n */\n\n// TODO: Currently setting TweenModifier to the intersected Record<> makes the FunctionValue type target param any if only one parameter is set\n/**\n * @typedef {Record<String, TweenOptions | Callback<JSAnimation> | TweenModifier | boolean | PercentageKeyframes | DurationKeyframes | ScrollObserver> & TimerOptions & AnimationOptions & TweenParamsOptions & TickableCallbacks<JSAnimation> & RenderableCallbacks<JSAnimation>} AnimationParams\n */\n\n/**\n * @typedef {Object} TimelineOptions\n * @property {DefaultsParams} [defaults]\n * @property {EasingParam} [playbackEase]\n */\n\n/**\n * @typedef {TimerOptions & TimelineOptions & TickableCallbacks<Timeline> & RenderableCallbacks<Timeline>} TimelineParams\n */\n\n/**\n * @callback AnimatablePropertySetter\n * @param  {Number|Array.<Number>} to\n * @param  {Number} [duration]\n * @param  {EasingParam} [ease]\n * @return {AnimatableObject}\n */\n\n/**\n * @callback AnimatablePropertyGetter\n * @return {Number|Array.<Number>}\n */\n\n/**\n * @typedef {AnimatablePropertySetter & AnimatablePropertyGetter} AnimatableProperty\n */\n\n/**\n * @typedef {Animatable & Record<String, AnimatableProperty>} AnimatableObject\n */\n\n/**\n * @typedef {Object} AnimatablePropertyParamsOptions\n * @property {String} [unit]\n * @property {TweenParamValue} [duration]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n */\n\n/**\n * @typedef {Record<String, TweenParamValue | EasingParam | TweenModifier | TweenComposition | AnimatablePropertyParamsOptions> & AnimatablePropertyParamsOptions} AnimatableParams\n */\n\n// Environments\n\n// TODO: Do we need to check if we're running inside a worker ?\nconst isBrowser = typeof window !== 'undefined';\n\n/** @type {Object|Null} */\nconst win = isBrowser ? window : null;\n\n/** @type {Document} */\nconst doc = isBrowser ? document : null;\n\n// Enums\n\n/** @enum {Number} */\nconst tweenTypes = {\n  OBJECT: 0,\n  ATTRIBUTE: 1,\n  CSS: 2,\n  TRANSFORM: 3,\n  CSS_VAR: 4\n};\n\n/** @enum {Number} */\nconst valueTypes = {\n  NUMBER: 0,\n  UNIT: 1,\n  COLOR: 2,\n  COMPLEX: 3\n};\n\n/** @enum {Number} */\nconst tickModes = {\n  NONE: 0,\n  AUTO: 1,\n  FORCE: 2\n};\n\n/** @enum {Number} */\nconst compositionTypes = {\n  replace: 0,\n  none: 1,\n  blend: 2\n};\n\n// Cache symbols\n\nconst isRegisteredTargetSymbol = Symbol();\nconst isDomSymbol = Symbol();\nconst isSvgSymbol = Symbol();\nconst transformsSymbol = Symbol();\nconst morphPointsSymbol = Symbol();\nconst proxyTargetSymbol = Symbol();\n\n// Numbers\n\nconst minValue = 1e-11;\nconst maxValue = 1e12;\nconst K = 1e3;\nconst maxFps = 120;\n\n// Strings\n\nconst emptyString = '';\nconst shortTransforms = new Map();\nshortTransforms.set('x', 'translateX');\nshortTransforms.set('y', 'translateY');\nshortTransforms.set('z', 'translateZ');\nconst validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\nconst transformsFragmentStrings = validTransforms.reduce((a, v) => ({\n  ...a,\n  [v]: v + '('\n}), {});\n\n// Functions\n\n/** @return {void} */\nconst noop = () => {};\n\n// Regex\n\nconst hexTestRgx = /(^#([\\da-f]{3}){1,2}$)|(^#([\\da-f]{4}){1,2}$)/i;\nconst rgbExecRgx = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i;\nconst rgbaExecRgx = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)\\s*\\)/i;\nconst hslExecRgx = /hsl\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*\\)/i;\nconst hslaExecRgx = /hsla\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)\\s*\\)/i;\n// export const digitWithExponentRgx = /[-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?/g;\nconst digitWithExponentRgx = /[-+]?\\d*\\.?\\d+(?:e[-+]?\\d)?/gi;\n// export const unitsExecRgx = /^([-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)+([a-z]+|%)$/i;\nconst unitsExecRgx = /^([-+]?\\d*\\.?\\d+(?:e[-+]?\\d+)?)([a-z]+|%)$/i;\nconst lowerCaseRgx = /([a-z])([A-Z])/g;\nconst transformsExecRgx = /(\\w+)(\\([^)]+\\)+)/g; // Match inline transforms with cacl() values, returns the value wrapped in ()\nconst relativeValuesExecRgx = /(\\*=|\\+=|-=)/;\n\n/** @type {DefaultsParams} */\nconst defaults = {\n  id: null,\n  keyframes: null,\n  playbackEase: null,\n  playbackRate: 1,\n  frameRate: maxFps,\n  loop: 0,\n  reversed: false,\n  alternate: false,\n  autoplay: true,\n  duration: K,\n  delay: 0,\n  loopDelay: 0,\n  ease: 'out(2)',\n  composition: compositionTypes.replace,\n  modifier: v => v,\n  onBegin: noop,\n  onBeforeUpdate: noop,\n  onUpdate: noop,\n  onLoop: noop,\n  onPause: noop,\n  onComplete: noop,\n  onRender: noop\n};\nconst globals = {\n  /** @type {DefaultsParams} */\n  defaults,\n  /** @type {Document|DOMTarget} */\n  root: doc,\n  /** @type {Scope} */\n  scope: null,\n  /** @type {Number} */\n  precision: 4,\n  /** @type {Number} */\n  timeScale: 1,\n  /** @type {Number} */\n  tickThreshold: 200\n};\nconst globalVersions = {\n  version: '4.0.2',\n  engine: null\n};\nif (isBrowser) {\n  if (!win.AnimeJS) win.AnimeJS = [];\n  win.AnimeJS.push(globalVersions);\n}\n\n// Strings\n\n/**\n * @param  {String} str\n * @return {String}\n */\nconst toLowerCase = str => str.replace(lowerCaseRgx, '$1-$2').toLowerCase();\n\n/**\n * Prioritize this method instead of regex when possible\n * @param  {String} str\n * @param  {String} sub\n * @return {Boolean}\n */\nconst stringStartsWith = (str, sub) => str.indexOf(sub) === 0;\n\n// Time\n// Note: Date.now is used instead of performance.now since it is precise enough for timings calculations, performs slightly faster and works in Node.js environement.\nconst now = Date.now;\n\n// Types checkers\n\nconst isArr = Array.isArray;\n/**@param {any} a @return {a is Record<String, any>} */\nconst isObj = a => a && a.constructor === Object;\n/**@param {any} a @return {a is Number} */\nconst isNum = a => typeof a === 'number' && !isNaN(a);\n/**@param {any} a @return {a is String} */\nconst isStr = a => typeof a === 'string';\n/**@param {any} a @return {a is Function} */\nconst isFnc = a => typeof a === 'function';\n/**@param {any} a @return {a is undefined} */\nconst isUnd = a => typeof a === 'undefined';\n/**@param {any} a @return {a is null | undefined} */\nconst isNil = a => isUnd(a) || a === null;\n/**@param {any} a @return {a is SVGElement} */\nconst isSvg = a => isBrowser && a instanceof SVGElement;\n/**@param {any} a @return {Boolean} */\nconst isHex = a => hexTestRgx.test(a);\n/**@param {any} a @return {Boolean} */\nconst isRgb = a => stringStartsWith(a, 'rgb');\n/**@param {any} a @return {Boolean} */\nconst isHsl = a => stringStartsWith(a, 'hsl');\n/**@param {any} a @return {Boolean} */\nconst isCol = a => isHex(a) || isRgb(a) || isHsl(a);\n/**@param {any} a @return {Boolean} */\nconst isKey = a => !globals.defaults.hasOwnProperty(a);\n\n// Number\n\n/**\n * @param  {Number|String} str\n * @return {Number}\n */\nconst parseNumber = str => isStr(str) ? parseFloat(/** @type {String} */str) : (/** @type {Number} */str);\n\n// Math\n\nconst pow = Math.pow;\nconst sqrt = Math.sqrt;\nconst sin = Math.sin;\nconst cos = Math.cos;\nconst abs = Math.abs;\nconst exp = Math.exp;\nconst ceil = Math.ceil;\nconst floor = Math.floor;\nconst asin = Math.asin;\nconst max = Math.max;\nconst atan2 = Math.atan2;\nconst PI = Math.PI;\nconst _round = Math.round;\n\n/**\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nconst clamp = (v, min, max) => v < min ? min : v > max ? max : v;\nconst powCache = {};\n\n/**\n * @param  {Number} v\n * @param  {Number} decimalLength\n * @return {Number}\n */\nconst round = (v, decimalLength) => {\n  if (decimalLength < 0) return v;\n  if (!decimalLength) return _round(v);\n  let p = powCache[decimalLength];\n  if (!p) p = powCache[decimalLength] = 10 ** decimalLength;\n  return _round(v * p) / p;\n};\n\n/**\n * @param  {Number} v\n * @param  {Number|Array<Number>} increment\n * @return {Number}\n */\nconst snap = (v, increment) => isArr(increment) ? increment.reduce((closest, cv) => abs(cv - v) < abs(closest - v) ? cv : closest) : increment ? _round(v / increment) * increment : v;\n\n/**\n * @param  {Number} start\n * @param  {Number} end\n * @param  {Number} progress\n * @return {Number}\n */\nconst interpolate = (start, end, progress) => start + (end - start) * progress;\n\n/**\n * @param  {Number} v\n * @return {Number}\n */\nconst clampInfinity = v => v === Infinity ? maxValue : v === -Infinity ? -1e12 : v;\n\n/**\n * @param  {Number} v\n * @return {Number}\n */\nconst normalizeTime = v => v <= minValue ? minValue : clampInfinity(round(v, 11));\n\n// Arrays\n\n/**\n * @template T\n * @param {T[]} a\n * @return {T[]}\n */\nconst cloneArray = a => isArr(a) ? [...a] : a;\n\n// Objects\n\n/**\n * @template T\n * @template U\n * @param {T} o1\n * @param {U} o2\n * @return {T & U}\n */\nconst mergeObjects = (o1, o2) => {\n  const merged = /** @type {T & U} */{\n    ...o1\n  };\n  for (let p in o2) {\n    const o1p = /** @type {T & U} */o1[p];\n    merged[p] = isUnd(o1p) ? /** @type {T & U} */o2[p] : o1p;\n  }\n  return merged;\n};\n\n// Linked lists\n\n/**\n * @param {Object} parent\n * @param {Function} callback\n * @param {Boolean} [reverse]\n * @param {String} [prevProp]\n * @param {String} [nextProp]\n * @return {void}\n */\nconst forEachChildren = (parent, callback, reverse, prevProp = '_prev', nextProp = '_next') => {\n  let next = parent._head;\n  let adjustedNextProp = nextProp;\n  if (reverse) {\n    next = parent._tail;\n    adjustedNextProp = prevProp;\n  }\n  while (next) {\n    const currentNext = next[adjustedNextProp];\n    callback(next);\n    next = currentNext;\n  }\n};\n\n/**\n * @param  {Object} parent\n * @param  {Object} child\n * @param  {String} [prevProp]\n * @param  {String} [nextProp]\n * @return {void}\n */\nconst removeChild = (parent, child, prevProp = '_prev', nextProp = '_next') => {\n  const prev = child[prevProp];\n  const next = child[nextProp];\n  prev ? prev[nextProp] = next : parent._head = next;\n  next ? next[prevProp] = prev : parent._tail = prev;\n  child[prevProp] = null;\n  child[nextProp] = null;\n};\n\n/**\n * @param  {Object} parent\n * @param  {Object} child\n * @param  {Function} [sortMethod]\n * @param  {String} prevProp\n * @param  {String} nextProp\n * @return {void}\n */\nconst addChild = (parent, child, sortMethod, prevProp = '_prev', nextProp = '_next') => {\n  let prev = parent._tail;\n  while (prev && sortMethod && sortMethod(prev, child)) prev = prev[prevProp];\n  const next = prev ? prev[nextProp] : parent._head;\n  prev ? prev[nextProp] = child : parent._head = child;\n  next ? next[prevProp] = child : parent._tail = child;\n  child[prevProp] = prev;\n  child[nextProp] = next;\n};\n\n/*\n * Base class to control framerate and playback rate.\n * Inherited by Engine, Timer, Animation and Timeline.\n */\nclass Clock {\n  /** @param {Number} [initTime] */\n  constructor(initTime = 0) {\n    /** @type {Number} */\n    this.deltaTime = 0;\n    /** @type {Number} */\n    this._currentTime = initTime;\n    /** @type {Number} */\n    this._elapsedTime = initTime;\n    /** @type {Number} */\n    this._startTime = initTime;\n    /** @type {Number} */\n    this._lastTime = initTime;\n    /** @type {Number} */\n    this._scheduledTime = 0;\n    /** @type {Number} */\n    this._frameDuration = round(K / maxFps, 0);\n    /** @type {Number} */\n    this._fps = maxFps;\n    /** @type {Number} */\n    this._speed = 1;\n    /** @type {Boolean} */\n    this._hasChildren = false;\n    /** @type {Tickable|Tween} */\n    this._head = null;\n    /** @type {Tickable|Tween} */\n    this._tail = null;\n  }\n  get fps() {\n    return this._fps;\n  }\n  set fps(frameRate) {\n    const previousFrameDuration = this._frameDuration;\n    const fr = +frameRate;\n    const fps = fr < minValue ? minValue : fr;\n    const frameDuration = round(K / fps, 0);\n    this._fps = fps;\n    this._frameDuration = frameDuration;\n    this._scheduledTime += frameDuration - previousFrameDuration;\n  }\n  get speed() {\n    return this._speed;\n  }\n  set speed(playbackRate) {\n    const pbr = +playbackRate;\n    this._speed = pbr < minValue ? minValue : pbr;\n  }\n\n  /**\n   * @param  {Number} time\n   * @return {tickModes}\n   */\n  requestTick(time) {\n    const scheduledTime = this._scheduledTime;\n    const elapsedTime = this._elapsedTime;\n    this._elapsedTime += time - elapsedTime;\n    // If the elapsed time is lower than the scheduled time\n    // this means not enough time has passed to hit one frameDuration\n    // so skip that frame\n    if (elapsedTime < scheduledTime) return tickModes.NONE;\n    const frameDuration = this._frameDuration;\n    const frameDelta = elapsedTime - scheduledTime;\n    // Ensures that _scheduledTime progresses in steps of at least 1 frameDuration.\n    // Skips ahead if the actual elapsed time is higher.\n    this._scheduledTime += frameDelta < frameDuration ? frameDuration : frameDelta;\n    return tickModes.AUTO;\n  }\n\n  /**\n   * @param  {Number} time\n   * @return {Number}\n   */\n  computeDeltaTime(time) {\n    const delta = time - this._lastTime;\n    this.deltaTime = delta;\n    this._lastTime = time;\n    return delta;\n  }\n}\n\n/**\n * @param  {Tickable} tickable\n * @param  {Number} time\n * @param  {Number} muteCallbacks\n * @param  {Number} internalRender\n * @param  {tickModes} tickMode\n * @return {Number}\n */\nconst render = (tickable, time, muteCallbacks, internalRender, tickMode) => {\n  const parent = tickable.parent;\n  const duration = tickable.duration;\n  const completed = tickable.completed;\n  const iterationDuration = tickable.iterationDuration;\n  const iterationCount = tickable.iterationCount;\n  const _currentIteration = tickable._currentIteration;\n  const _loopDelay = tickable._loopDelay;\n  const _reversed = tickable._reversed;\n  const _alternate = tickable._alternate;\n  const _hasChildren = tickable._hasChildren;\n  const tickableDelay = tickable._delay;\n  const tickablePrevAbsoluteTime = tickable._currentTime; // TODO: rename ._currentTime to ._absoluteCurrentTime\n\n  const tickableEndTime = tickableDelay + iterationDuration;\n  const tickableAbsoluteTime = time - tickableDelay;\n  const tickablePrevTime = clamp(tickablePrevAbsoluteTime, -tickableDelay, duration);\n  const tickableCurrentTime = clamp(tickableAbsoluteTime, -tickableDelay, duration);\n  const deltaTime = tickableAbsoluteTime - tickablePrevAbsoluteTime;\n  const isCurrentTimeAboveZero = tickableCurrentTime > 0;\n  const isCurrentTimeEqualOrAboveDuration = tickableCurrentTime >= duration;\n  const isSetter = duration <= minValue;\n  const forcedTick = tickMode === tickModes.FORCE;\n  let isOdd = 0;\n  let iterationElapsedTime = tickableAbsoluteTime;\n  // Render checks\n  // Used to also check if the children have rendered in order to trigger the onRender callback on the parent timer\n  let hasRendered = 0;\n\n  // Execute the \"expensive\" iterations calculations only when necessary\n  if (iterationCount > 1) {\n    // bitwise NOT operator seems to be generally faster than Math.floor() across browsers\n    const currentIteration = ~~(tickableCurrentTime / (iterationDuration + (isCurrentTimeEqualOrAboveDuration ? 0 : _loopDelay)));\n    tickable._currentIteration = clamp(currentIteration, 0, iterationCount);\n    // Prevent the iteration count to go above the max iterations when reaching the end of the animation\n    if (isCurrentTimeEqualOrAboveDuration) tickable._currentIteration--;\n    isOdd = tickable._currentIteration % 2;\n    iterationElapsedTime = tickableCurrentTime % (iterationDuration + _loopDelay) || 0;\n  }\n\n  // Checks if exactly one of _reversed and (_alternate && isOdd) is true\n  const isReversed = _reversed ^ (_alternate && isOdd);\n  const _ease = /** @type {Renderable} */tickable._ease;\n  let iterationTime = isCurrentTimeEqualOrAboveDuration ? isReversed ? 0 : duration : isReversed ? iterationDuration - iterationElapsedTime : iterationElapsedTime;\n  if (_ease) iterationTime = iterationDuration * _ease(iterationTime / iterationDuration) || 0;\n  const isRunningBackwards = (parent ? parent.backwards : tickableAbsoluteTime < tickablePrevAbsoluteTime) ? !isReversed : !!isReversed;\n  tickable._currentTime = tickableAbsoluteTime;\n  tickable._iterationTime = iterationTime;\n  tickable.backwards = isRunningBackwards;\n  if (isCurrentTimeAboveZero && !tickable.began) {\n    tickable.began = true;\n    if (!muteCallbacks && !(parent && (isRunningBackwards || !parent.began))) {\n      tickable.onBegin(/** @type {CallbackArgument} */tickable);\n    }\n  } else if (tickableAbsoluteTime <= 0) {\n    tickable.began = false;\n  }\n\n  // Only triggers onLoop for tickable without children, otherwise call the the onLoop callback in the tick function\n  // Make sure to trigger the onLoop before rendering to allow .refresh() to pickup the current values\n  if (!muteCallbacks && !_hasChildren && isCurrentTimeAboveZero && tickable._currentIteration !== _currentIteration) {\n    tickable.onLoop(/** @type {CallbackArgument} */tickable);\n  }\n  if (forcedTick || tickMode === tickModes.AUTO && (time >= tickableDelay && time <= tickableEndTime ||\n  // Normal render\n  time <= tickableDelay && tickablePrevTime > tickableDelay ||\n  // Playhead is before the animation start time so make sure the animation is at its initial state\n  time >= tickableEndTime && tickablePrevTime !== duration // Playhead is after the animation end time so make sure the animation is at its end state\n  ) || iterationTime >= tickableEndTime && tickablePrevTime !== duration || iterationTime <= tickableDelay && tickablePrevTime > 0 || time <= tickablePrevTime && tickablePrevTime === duration && completed ||\n  // Force a render if a seek occurs on an completed animation\n  isCurrentTimeEqualOrAboveDuration && !completed && isSetter // This prevents 0 duration tickables to be skipped\n  ) {\n    if (isCurrentTimeAboveZero) {\n      // Trigger onUpdate callback before rendering\n      tickable.computeDeltaTime(tickablePrevTime);\n      if (!muteCallbacks) tickable.onBeforeUpdate(/** @type {CallbackArgument} */tickable);\n    }\n\n    // Start tweens rendering\n    if (!_hasChildren) {\n      // Time has jumped more than globals.tickThreshold so consider this tick manual\n      const forcedRender = forcedTick || (isRunningBackwards ? deltaTime * -1 : deltaTime) >= globals.tickThreshold;\n      const absoluteTime = tickable._offset + (parent ? parent._offset : 0) + tickableDelay + iterationTime;\n\n      // Only Animation can have tweens, Timer returns undefined\n      let tween = /** @type {Tween} */ /** @type {JSAnimation} */tickable._head;\n      let tweenTarget;\n      let tweenStyle;\n      let tweenTargetTransforms;\n      let tweenTargetTransformsProperties;\n      let tweenTransformsNeedUpdate = 0;\n      while (tween) {\n        const tweenComposition = tween._composition;\n        const tweenCurrentTime = tween._currentTime;\n        const tweenChangeDuration = tween._changeDuration;\n        const tweenAbsEndTime = tween._absoluteStartTime + tween._changeDuration;\n        const tweenNextRep = tween._nextRep;\n        const tweenPrevRep = tween._prevRep;\n        const tweenHasComposition = tweenComposition !== compositionTypes.none;\n        if ((forcedRender || (tweenCurrentTime !== tweenChangeDuration || absoluteTime <= tweenAbsEndTime + (tweenNextRep ? tweenNextRep._delay : 0)) && (tweenCurrentTime !== 0 || absoluteTime >= tween._absoluteStartTime)) && (!tweenHasComposition || !tween._isOverridden && (!tween._isOverlapped || absoluteTime <= tweenAbsEndTime) && (!tweenNextRep || tweenNextRep._isOverridden || absoluteTime <= tweenNextRep._absoluteStartTime) && (!tweenPrevRep || tweenPrevRep._isOverridden || absoluteTime >= tweenPrevRep._absoluteStartTime + tweenPrevRep._changeDuration + tween._delay))) {\n          const tweenNewTime = tween._currentTime = clamp(iterationTime - tween._startTime, 0, tweenChangeDuration);\n          const tweenProgress = tween._ease(tweenNewTime / tween._updateDuration);\n          const tweenModifier = tween._modifier;\n          const tweenValueType = tween._valueType;\n          const tweenType = tween._tweenType;\n          const tweenIsObject = tweenType === tweenTypes.OBJECT;\n          const tweenIsNumber = tweenValueType === valueTypes.NUMBER;\n          // Only round the in-between frames values if the final value is a string\n          const tweenPrecision = tweenIsNumber && tweenIsObject || tweenProgress === 0 || tweenProgress === 1 ? -1 : globals.precision;\n\n          // Recompose tween value\n          /** @type {String|Number} */\n          let value;\n          /** @type {Number} */\n          let number;\n          if (tweenIsNumber) {\n            value = number = /** @type {Number} */tweenModifier(round(interpolate(tween._fromNumber, tween._toNumber, tweenProgress), tweenPrecision));\n          } else if (tweenValueType === valueTypes.UNIT) {\n            // Rounding the values speed up string composition\n            number = /** @type {Number} */tweenModifier(round(interpolate(tween._fromNumber, tween._toNumber, tweenProgress), tweenPrecision));\n            value = `${number}${tween._unit}`;\n          } else if (tweenValueType === valueTypes.COLOR) {\n            const fn = tween._fromNumbers;\n            const tn = tween._toNumbers;\n            const r = round(clamp(/** @type {Number} */tweenModifier(interpolate(fn[0], tn[0], tweenProgress)), 0, 255), 0);\n            const g = round(clamp(/** @type {Number} */tweenModifier(interpolate(fn[1], tn[1], tweenProgress)), 0, 255), 0);\n            const b = round(clamp(/** @type {Number} */tweenModifier(interpolate(fn[2], tn[2], tweenProgress)), 0, 255), 0);\n            const a = clamp(/** @type {Number} */tweenModifier(round(interpolate(fn[3], tn[3], tweenProgress), tweenPrecision)), 0, 1);\n            value = `rgba(${r},${g},${b},${a})`;\n            if (tweenHasComposition) {\n              const ns = tween._numbers;\n              ns[0] = r;\n              ns[1] = g;\n              ns[2] = b;\n              ns[3] = a;\n            }\n          } else if (tweenValueType === valueTypes.COMPLEX) {\n            value = tween._strings[0];\n            for (let j = 0, l = tween._toNumbers.length; j < l; j++) {\n              const n = /** @type {Number} */tweenModifier(round(interpolate(tween._fromNumbers[j], tween._toNumbers[j], tweenProgress), tweenPrecision));\n              const s = tween._strings[j + 1];\n              value += `${s ? n + s : n}`;\n              if (tweenHasComposition) {\n                tween._numbers[j] = n;\n              }\n            }\n          }\n\n          // For additive tweens and Animatables\n          if (tweenHasComposition) {\n            tween._number = number;\n          }\n          if (!internalRender && tweenComposition !== compositionTypes.blend) {\n            const tweenProperty = tween.property;\n            tweenTarget = tween.target;\n            if (tweenIsObject) {\n              tweenTarget[tweenProperty] = value;\n            } else if (tweenType === tweenTypes.ATTRIBUTE) {\n              /** @type {DOMTarget} */tweenTarget.setAttribute(tweenProperty, /** @type {String} */value);\n            } else {\n              tweenStyle = /** @type {DOMTarget} */tweenTarget.style;\n              if (tweenType === tweenTypes.TRANSFORM) {\n                if (tweenTarget !== tweenTargetTransforms) {\n                  tweenTargetTransforms = tweenTarget;\n                  // NOTE: Referencing the cachedTransforms in the tween property directly can be a little bit faster but appears to increase memory usage.\n                  tweenTargetTransformsProperties = tweenTarget[transformsSymbol];\n                }\n                tweenTargetTransformsProperties[tweenProperty] = value;\n                tweenTransformsNeedUpdate = 1;\n              } else if (tweenType === tweenTypes.CSS) {\n                tweenStyle[tweenProperty] = value;\n              } else if (tweenType === tweenTypes.CSS_VAR) {\n                tweenStyle.setProperty(tweenProperty, /** @type {String} */value);\n              }\n            }\n            if (isCurrentTimeAboveZero) hasRendered = 1;\n          } else {\n            // Used for composing timeline tweens without having to do a real render\n            tween._value = value;\n          }\n        }\n\n        // NOTE: Possible improvement: Use translate(x,y) / translate3d(x,y,z) syntax\n        // to reduce memory usage on string composition\n        if (tweenTransformsNeedUpdate && tween._renderTransforms) {\n          let str = emptyString;\n          for (let key in tweenTargetTransformsProperties) {\n            str += `${transformsFragmentStrings[key]}${tweenTargetTransformsProperties[key]}) `;\n          }\n          tweenStyle.transform = str;\n          tweenTransformsNeedUpdate = 0;\n        }\n        tween = tween._next;\n      }\n      if (!muteCallbacks && hasRendered) {\n        /** @type {JSAnimation} */tickable.onRender(/** @type {JSAnimation} */tickable);\n      }\n    }\n    if (!muteCallbacks && isCurrentTimeAboveZero) {\n      tickable.onUpdate(/** @type {CallbackArgument} */tickable);\n    }\n  }\n\n  // End tweens rendering\n\n  // Handle setters on timeline differently and allow re-trigering the onComplete callback when seeking backwards\n  if (parent && isSetter) {\n    if (!muteCallbacks && (parent.began && !isRunningBackwards && tickableAbsoluteTime >= duration && !completed || isRunningBackwards && tickableAbsoluteTime <= minValue && completed)) {\n      tickable.onComplete(/** @type {CallbackArgument} */tickable);\n      tickable.completed = !isRunningBackwards;\n    }\n    // If currentTime is both above 0 and at least equals to duration, handles normal onComplete or infinite loops\n  } else if (isCurrentTimeAboveZero && isCurrentTimeEqualOrAboveDuration) {\n    if (iterationCount === Infinity) {\n      // Offset the tickable _startTime with its duration to reset _currentTime to 0 and continue the infinite timer\n      tickable._startTime += tickable.duration;\n    } else if (tickable._currentIteration >= iterationCount - 1) {\n      // By setting paused to true, we tell the engine loop to not render this tickable and removes it from the list on the next tick\n      tickable.paused = true;\n      if (!completed && !_hasChildren) {\n        // If the tickable has children, triggers onComplete() only when all children have completed in the tick function\n        tickable.completed = true;\n        if (!muteCallbacks && !(parent && (isRunningBackwards || !parent.began))) {\n          tickable.onComplete(/** @type {CallbackArgument} */tickable);\n          tickable._resolve(/** @type {CallbackArgument} */tickable);\n        }\n      }\n    }\n    // Otherwise set the completed flag to false\n  } else {\n    tickable.completed = false;\n  }\n\n  // NOTE: hasRendered * direction (negative for backwards) this way we can remove the tickable.backwards property completly ?\n  return hasRendered;\n};\n\n/**\n * @param  {Tickable} tickable\n * @param  {Number} time\n * @param  {Number} muteCallbacks\n * @param  {Number} internalRender\n * @param  {Number} tickMode\n * @return {void}\n */\nconst tick = (tickable, time, muteCallbacks, internalRender, tickMode) => {\n  const _currentIteration = tickable._currentIteration;\n  render(tickable, time, muteCallbacks, internalRender, tickMode);\n  if (tickable._hasChildren) {\n    const tl = /** @type {Timeline} */tickable;\n    const tlIsRunningBackwards = tl.backwards;\n    const tlChildrenTime = internalRender ? time : tl._iterationTime;\n    const tlCildrenTickTime = now();\n    let tlChildrenHasRendered = 0;\n    let tlChildrenHaveCompleted = true;\n\n    // If the timeline has looped forward, we need to manually triggers children skipped callbacks\n    if (!internalRender && tl._currentIteration !== _currentIteration) {\n      const tlIterationDuration = tl.iterationDuration;\n      forEachChildren(tl, (/** @type {JSAnimation} */child) => {\n        if (!tlIsRunningBackwards) {\n          // Force an internal render to trigger the callbacks if the child has not completed on loop\n          if (!child.completed && !child.backwards && child._currentTime < child.iterationDuration) {\n            render(child, tlIterationDuration, muteCallbacks, 1, tickModes.FORCE);\n          }\n          // Reset their began and completed flags to allow retrigering callbacks on the next iteration\n          child.began = false;\n          child.completed = false;\n        } else {\n          const childDuration = child.duration;\n          const childStartTime = child._offset + child._delay;\n          const childEndTime = childStartTime + childDuration;\n          // Triggers the onComplete callback on reverse for children on the edges of the timeline\n          if (!muteCallbacks && childDuration <= minValue && (!childStartTime || childEndTime === tlIterationDuration)) {\n            child.onComplete(child);\n          }\n        }\n      });\n      if (!muteCallbacks) tl.onLoop(/** @type {CallbackArgument} */tl);\n    }\n    forEachChildren(tl, (/** @type {JSAnimation} */child) => {\n      const childTime = round((tlChildrenTime - child._offset) * child._speed, 12); // Rounding is needed when using seconds\n      const childTickMode = child._fps < tl._fps ? child.requestTick(tlCildrenTickTime) : tickMode;\n      tlChildrenHasRendered += render(child, childTime, muteCallbacks, internalRender, childTickMode);\n      if (!child.completed && tlChildrenHaveCompleted) tlChildrenHaveCompleted = false;\n    }, tlIsRunningBackwards);\n\n    // Renders on timeline are triggered by its children so it needs to be set after rendering the children\n    if (!muteCallbacks && tlChildrenHasRendered) tl.onRender(/** @type {CallbackArgument} */tl);\n\n    // Triggers the timeline onComplete() once all chindren all completed and the current time has reached the end\n    if (tlChildrenHaveCompleted && tl._currentTime >= tl.duration) {\n      // Make sure the paused flag is false in case it has been skipped in the render function\n      tl.paused = true;\n      if (!tl.completed) {\n        tl.completed = true;\n        if (!muteCallbacks) {\n          tl.onComplete(/** @type {CallbackArgument} */tl);\n          tl._resolve(/** @type {CallbackArgument} */tl);\n        }\n      }\n    }\n  }\n};\nconst additive = {\n  animation: null,\n  update: noop\n};\n\n/**\n * @typedef AdditiveAnimation\n * @property {Number} duration\n * @property {Number} _offset\n * @property {Number} _delay\n * @property {Tween} _head\n * @property {Tween} _tail\n */\n\n/**\n * @param  {TweenAdditiveLookups} lookups\n * @return {AdditiveAnimation}\n */\nconst addAdditiveAnimation = lookups => {\n  let animation = additive.animation;\n  if (!animation) {\n    animation = {\n      duration: minValue,\n      computeDeltaTime: noop,\n      _offset: 0,\n      _delay: 0,\n      _head: null,\n      _tail: null\n    };\n    additive.animation = animation;\n    additive.update = () => {\n      lookups.forEach(propertyAnimation => {\n        for (let propertyName in propertyAnimation) {\n          const tweens = propertyAnimation[propertyName];\n          const lookupTween = tweens._head;\n          if (lookupTween) {\n            const valueType = lookupTween._valueType;\n            const additiveValues = valueType === valueTypes.COMPLEX || valueType === valueTypes.COLOR ? cloneArray(lookupTween._fromNumbers) : null;\n            let additiveValue = lookupTween._fromNumber;\n            let tween = tweens._tail;\n            while (tween && tween !== lookupTween) {\n              if (additiveValues) {\n                for (let i = 0, l = tween._numbers.length; i < l; i++) additiveValues[i] += tween._numbers[i];\n              } else {\n                additiveValue += tween._number;\n              }\n              tween = tween._prevAdd;\n            }\n            lookupTween._toNumber = additiveValue;\n            lookupTween._toNumbers = additiveValues;\n          }\n        }\n      });\n      // TODO: Avoid polymorphism here, idealy the additive animation should be a regular animation with a higher priority in the render loop\n      render(animation, 1, 1, 0, tickModes.FORCE);\n    };\n  }\n  return animation;\n};\nconst engineTickMethod = isBrowser ? requestAnimationFrame : setImmediate;\nconst engineCancelMethod = isBrowser ? cancelAnimationFrame : clearImmediate;\nclass Engine extends Clock {\n  /** @param {Number} [initTime] */\n  constructor(initTime) {\n    super(initTime);\n    this.useDefaultMainLoop = true;\n    this.pauseOnDocumentHidden = true;\n    /** @type {DefaultsParams} */\n    this.defaults = defaults;\n    this.paused = isBrowser && doc.hidden ? true : false;\n    /** @type {Number|NodeJS.Immediate} */\n    this.reqId = null;\n  }\n  update() {\n    const time = this._currentTime = now();\n    if (this.requestTick(time)) {\n      this.computeDeltaTime(time);\n      const engineSpeed = this._speed;\n      const engineFps = this._fps;\n      let activeTickable = /** @type {Tickable} */this._head;\n      while (activeTickable) {\n        const nextTickable = activeTickable._next;\n        if (!activeTickable.paused) {\n          tick(activeTickable, (time - activeTickable._startTime) * activeTickable._speed * engineSpeed, 0,\n          // !muteCallbacks\n          0,\n          // !internalRender\n          activeTickable._fps < engineFps ? activeTickable.requestTick(time) : tickModes.AUTO);\n        } else {\n          removeChild(this, activeTickable);\n          this._hasChildren = !!this._tail;\n          activeTickable._running = false;\n          if (activeTickable.completed && !activeTickable._cancelled) {\n            activeTickable.cancel();\n          }\n        }\n        activeTickable = nextTickable;\n      }\n      additive.update();\n    }\n  }\n  wake() {\n    if (this.useDefaultMainLoop && !this.reqId && !this.paused) {\n      this.reqId = engineTickMethod(tickEngine);\n    }\n    return this;\n  }\n  pause() {\n    this.paused = true;\n    return killEngine();\n  }\n  resume() {\n    if (!this.paused) return;\n    this.paused = false;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.resetTime());\n    return this.wake();\n  }\n\n  // Getter and setter for speed\n  get speed() {\n    return this._speed * (globals.timeScale === 1 ? 1 : K);\n  }\n  set speed(playbackRate) {\n    this._speed = playbackRate * globals.timeScale;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.speed = child._speed);\n  }\n\n  // Getter and setter for timeUnit\n  get timeUnit() {\n    return globals.timeScale === 1 ? 'ms' : 's';\n  }\n  set timeUnit(unit) {\n    const secondsScale = 0.001;\n    const isSecond = unit === 's';\n    const newScale = isSecond ? secondsScale : 1;\n    if (globals.timeScale !== newScale) {\n      globals.timeScale = newScale;\n      globals.tickThreshold = 200 * newScale;\n      const scaleFactor = isSecond ? secondsScale : K;\n      /** @type {Number} */\n      this.defaults.duration *= scaleFactor;\n      this._speed *= scaleFactor;\n    }\n  }\n\n  // Getter and setter for precision\n  get precision() {\n    return globals.precision;\n  }\n  set precision(precision) {\n    globals.precision = precision;\n  }\n}\nconst engine = /*#__PURE__*/(() => {\n  const engine = new Engine(now());\n  if (isBrowser) {\n    globalVersions.engine = engine;\n    doc.addEventListener('visibilitychange', () => {\n      if (!engine.pauseOnDocumentHidden) return;\n      doc.hidden ? engine.pause() : engine.resume();\n    });\n  }\n  return engine;\n})();\nconst tickEngine = () => {\n  if (engine._head) {\n    engine.reqId = engineTickMethod(tickEngine);\n    engine.update();\n  } else {\n    engine.reqId = 0;\n  }\n};\nconst killEngine = () => {\n  engineCancelMethod(/** @type {NodeJS.Immediate & Number} */engine.reqId);\n  engine.reqId = 0;\n  return engine;\n};\n\n/**\n * @param  {DOMTarget} target\n * @param  {String} propName\n * @param  {Object} animationInlineStyles\n * @return {String}\n */\nconst parseInlineTransforms = (target, propName, animationInlineStyles) => {\n  const inlineTransforms = target.style.transform;\n  let inlinedStylesPropertyValue;\n  if (inlineTransforms) {\n    const cachedTransforms = target[transformsSymbol];\n    let t;\n    while (t = transformsExecRgx.exec(inlineTransforms)) {\n      const inlinePropertyName = t[1];\n      // const inlinePropertyValue = t[2];\n      const inlinePropertyValue = t[2].slice(1, -1);\n      cachedTransforms[inlinePropertyName] = inlinePropertyValue;\n      if (inlinePropertyName === propName) {\n        inlinedStylesPropertyValue = inlinePropertyValue;\n        // Store the new parsed inline styles if animationInlineStyles is provided\n        if (animationInlineStyles) {\n          animationInlineStyles[propName] = inlinePropertyValue;\n        }\n      }\n    }\n  }\n  return inlineTransforms && !isUnd(inlinedStylesPropertyValue) ? inlinedStylesPropertyValue : stringStartsWith(propName, 'scale') ? '1' : stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew') ? '0deg' : '0px';\n};\n\n/**\n * @param  {DOMTargetsParam|TargetsParam} v\n * @return {NodeList|HTMLCollection}\n */\nfunction getNodeList(v) {\n  const n = isStr(v) ? globals.root.querySelectorAll(v) : v;\n  if (n instanceof NodeList || n instanceof HTMLCollection) return n;\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction parseTargets(targets) {\n  if (isNil(targets)) return /** @type {TargetsArray} */[];\n  if (isArr(targets)) {\n    const flattened = targets.flat(Infinity);\n    /** @type {TargetsArray} */\n    const parsed = [];\n    for (let i = 0, l = flattened.length; i < l; i++) {\n      const item = flattened[i];\n      if (!isNil(item)) {\n        const nodeList = getNodeList(item);\n        if (nodeList) {\n          for (let j = 0, jl = nodeList.length; j < jl; j++) {\n            const subItem = nodeList[j];\n            if (!isNil(subItem)) {\n              let isDuplicate = false;\n              for (let k = 0, kl = parsed.length; k < kl; k++) {\n                if (parsed[k] === subItem) {\n                  isDuplicate = true;\n                  break;\n                }\n              }\n              if (!isDuplicate) {\n                parsed.push(subItem);\n              }\n            }\n          }\n        } else {\n          let isDuplicate = false;\n          for (let j = 0, jl = parsed.length; j < jl; j++) {\n            if (parsed[j] === item) {\n              isDuplicate = true;\n              break;\n            }\n          }\n          if (!isDuplicate) {\n            parsed.push(item);\n          }\n        }\n      }\n    }\n    return parsed;\n  }\n  if (!isBrowser) return /** @type {JSTargetsArray} */[targets];\n  const nodeList = getNodeList(targets);\n  if (nodeList) return /** @type {DOMTargetsArray} */Array.from(nodeList);\n  return /** @type {TargetsArray} */[targets];\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction registerTargets(targets) {\n  const parsedTargetsArray = parseTargets(targets);\n  const parsedTargetsLength = parsedTargetsArray.length;\n  if (parsedTargetsLength) {\n    for (let i = 0; i < parsedTargetsLength; i++) {\n      const target = parsedTargetsArray[i];\n      if (!target[isRegisteredTargetSymbol]) {\n        target[isRegisteredTargetSymbol] = true;\n        const isSvgType = isSvg(target);\n        const isDom = /** @type {DOMTarget} */target.nodeType || isSvgType;\n        if (isDom) {\n          target[isDomSymbol] = true;\n          target[isSvgSymbol] = isSvgType;\n          target[transformsSymbol] = {};\n        }\n      }\n    }\n  }\n  return parsedTargetsArray;\n}\n\n/**\n * @param  {TargetsParam} path\n * @return {SVGGeometryElement|undefined}\n */\nconst getPath = path => {\n  const parsedTargets = parseTargets(path);\n  const $parsedSvg = /** @type {SVGGeometryElement} */parsedTargets[0];\n  if (!$parsedSvg || !isSvg($parsedSvg)) return;\n  return $parsedSvg;\n};\n\n/**\n * @param  {TargetsParam} path2\n * @param  {Number} [precision]\n * @return {FunctionValue}\n */\nconst morphTo = (path2, precision = .33) => $path1 => {\n  const $path2 = /** @type {SVGGeometryElement} */getPath(path2);\n  if (!$path2) return;\n  const isPath = $path1.tagName === 'path';\n  const separator = isPath ? ' ' : ',';\n  const previousPoints = $path1[morphPointsSymbol];\n  if (previousPoints) $path1.setAttribute(isPath ? 'd' : 'points', previousPoints);\n  let v1 = '',\n    v2 = '';\n  if (!precision) {\n    v1 = $path1.getAttribute(isPath ? 'd' : 'points');\n    v2 = $path2.getAttribute(isPath ? 'd' : 'points');\n  } else {\n    const length1 = /** @type {SVGGeometryElement} */$path1.getTotalLength();\n    const length2 = $path2.getTotalLength();\n    const maxPoints = Math.max(Math.ceil(length1 * precision), Math.ceil(length2 * precision));\n    for (let i = 0; i < maxPoints; i++) {\n      const t = i / (maxPoints - 1);\n      const pointOnPath1 = /** @type {SVGGeometryElement} */$path1.getPointAtLength(length1 * t);\n      const pointOnPath2 = $path2.getPointAtLength(length2 * t);\n      const prefix = isPath ? i === 0 ? 'M' : 'L' : '';\n      v1 += prefix + round(pointOnPath1.x, 3) + separator + pointOnPath1.y + ' ';\n      v2 += prefix + round(pointOnPath2.x, 3) + separator + pointOnPath2.y + ' ';\n    }\n  }\n  $path1[morphPointsSymbol] = v2;\n  return [v1, v2];\n};\n\n/**\n * @param {SVGGeometryElement} [$el]\n * @return {Number}\n */\nconst getScaleFactor = $el => {\n  let scaleFactor = 1;\n  if ($el && $el.getCTM) {\n    const ctm = $el.getCTM();\n    if (ctm) {\n      const scaleX = sqrt(ctm.a * ctm.a + ctm.b * ctm.b);\n      const scaleY = sqrt(ctm.c * ctm.c + ctm.d * ctm.d);\n      scaleFactor = (scaleX + scaleY) / 2;\n    }\n  }\n  return scaleFactor;\n};\n\n/**\n * Creates a proxy that wraps an SVGGeometryElement and adds drawing functionality.\n * @param {SVGGeometryElement} $el - The SVG element to transform into a drawable\n * @param {number} start - Starting position (0-1)\n * @param {number} end - Ending position (0-1)\n * @return {DrawableSVGGeometry} - Returns a proxy that preserves the original element's type with additional 'draw' attribute functionality\n */\nconst createDrawableProxy = ($el, start, end) => {\n  const pathLength = K;\n  const computedStyles = getComputedStyle($el);\n  const strokeLineCap = computedStyles.strokeLinecap;\n  // @ts-ignore\n  const $scalled = computedStyles.vectorEffect === 'non-scaling-stroke' ? $el : null;\n  let currentCap = strokeLineCap;\n  const proxy = new Proxy($el, {\n    get(target, property) {\n      const value = target[property];\n      if (property === proxyTargetSymbol) return target;\n      if (property === 'setAttribute') {\n        return (...args) => {\n          if (args[0] === 'draw') {\n            const value = args[1];\n            const values = value.split(' ');\n            const v1 = +values[0];\n            const v2 = +values[1];\n            // TOTO: Benchmark if performing two slices is more performant than one split\n            // const spaceIndex = value.indexOf(' ');\n            // const v1 = round(+value.slice(0, spaceIndex), precision);\n            // const v2 = round(+value.slice(spaceIndex + 1), precision);\n            const scaleFactor = getScaleFactor($scalled);\n            const os = v1 * -1e3 * scaleFactor;\n            const d1 = v2 * pathLength * scaleFactor + os;\n            const d2 = pathLength * scaleFactor + (v1 === 0 && v2 === 1 || v1 === 1 && v2 === 0 ? 0 : 10 * scaleFactor) - d1;\n            if (strokeLineCap !== 'butt') {\n              const newCap = v1 === v2 ? 'butt' : strokeLineCap;\n              if (currentCap !== newCap) {\n                target.style.strokeLinecap = `${newCap}`;\n                currentCap = newCap;\n              }\n            }\n            target.setAttribute('stroke-dashoffset', `${os}`);\n            target.setAttribute('stroke-dasharray', `${d1} ${d2}`);\n          }\n          return Reflect.apply(value, target, args);\n        };\n      }\n      if (isFnc(value)) {\n        return (...args) => Reflect.apply(value, target, args);\n      } else {\n        return value;\n      }\n    }\n  });\n  if ($el.getAttribute('pathLength') !== `${pathLength}`) {\n    $el.setAttribute('pathLength', `${pathLength}`);\n    proxy.setAttribute('draw', `${start} ${end}`);\n  }\n  return /** @type {DrawableSVGGeometry} */proxy;\n};\n\n/**\n * Creates drawable proxies for multiple SVG elements.\n * @param {TargetsParam} selector - CSS selector, SVG element, or array of elements and selectors\n * @param {number} [start=0] - Starting position (0-1)\n * @param {number} [end=0] - Ending position (0-1)\n * @return {Array<DrawableSVGGeometry>} - Array of proxied elements with drawing functionality\n */\nconst createDrawable = (selector, start = 0, end = 0) => {\n  const els = parseTargets(selector);\n  return els.map($el => createDrawableProxy(/** @type {SVGGeometryElement} */$el, start, end));\n};\n\n// Motion path animation\n\n/**\n * @param {SVGGeometryElement} $path\n * @param {Number} progress\n * @param {Number}lookup\n * @return {DOMPoint}\n */\nconst getPathPoint = ($path, progress, lookup = 0) => {\n  return $path.getPointAtLength(progress + lookup >= 1 ? progress + lookup : 0);\n};\n\n/**\n * @param {SVGGeometryElement} $path\n * @param {String} pathProperty\n * @return {FunctionValue}\n */\nconst getPathProgess = ($path, pathProperty) => {\n  return $el => {\n    const totalLength = +$path.getTotalLength();\n    const inSvg = $el[isSvgSymbol];\n    const ctm = $path.getCTM();\n    /** @type {TweenObjectValue} */\n    return {\n      from: 0,\n      to: totalLength,\n      /** @type {TweenModifier} */\n      modifier: progress => {\n        if (pathProperty === 'a') {\n          const p0 = getPathPoint($path, progress, -1);\n          const p1 = getPathPoint($path, progress, 1);\n          return atan2(p1.y - p0.y, p1.x - p0.x) * 180 / PI;\n        } else {\n          const p = getPathPoint($path, progress, 0);\n          return pathProperty === 'x' ? inSvg || !ctm ? p.x : p.x * ctm.a + p.y * ctm.c + ctm.e : inSvg || !ctm ? p.y : p.x * ctm.b + p.y * ctm.d + ctm.f;\n        }\n      }\n    };\n  };\n};\n\n/**\n * @param {TargetsParam} path\n */\nconst createMotionPath = path => {\n  const $path = getPath(path);\n  if (!$path) return;\n  return {\n    translateX: getPathProgess($path, 'x'),\n    translateY: getPathProgess($path, 'y'),\n    rotate: getPathProgess($path, 'a')\n  };\n};\n\n// Check for valid SVG attribute\n\nconst cssReservedProperties = ['opacity', 'rotate', 'overflow', 'color'];\n\n/**\n * @param  {Target} el\n * @param  {String} propertyName\n * @return {Boolean}\n */\nconst isValidSVGAttribute = (el, propertyName) => {\n  // Return early and use CSS opacity animation instead (already better default values (opacity: 1 instead of 0)) and rotate should be considered a transform\n  if (cssReservedProperties.includes(propertyName)) return false;\n  if (el.getAttribute(propertyName) || propertyName in el) {\n    if (propertyName === 'scale') {\n      // Scale\n      const elParentNode = /** @type {SVGGeometryElement} */ /** @type {DOMTarget} */el.parentNode;\n      // Only consider scale as a valid SVG attribute on filter element\n      return elParentNode && elParentNode.tagName === 'filter';\n    }\n    return true;\n  }\n};\nconst svg = {\n  morphTo,\n  createMotionPath,\n  createDrawable\n};\n\n/**\n * RGB / RGBA Color value string -> RGBA values array\n * @param  {String} rgbValue\n * @return {ColorArray}\n */\nconst rgbToRgba = rgbValue => {\n  const rgba = rgbExecRgx.exec(rgbValue) || rgbaExecRgx.exec(rgbValue);\n  const a = !isUnd(rgba[4]) ? +rgba[4] : 1;\n  return [+rgba[1], +rgba[2], +rgba[3], a];\n};\n\n/**\n * HEX3 / HEX3A / HEX6 / HEX6A Color value string -> RGBA values array\n * @param  {String} hexValue\n * @return {ColorArray}\n */\nconst hexToRgba = hexValue => {\n  const hexLength = hexValue.length;\n  const isShort = hexLength === 4 || hexLength === 5;\n  return [+('0x' + hexValue[1] + hexValue[isShort ? 1 : 2]), +('0x' + hexValue[isShort ? 2 : 3] + hexValue[isShort ? 2 : 4]), +('0x' + hexValue[isShort ? 3 : 5] + hexValue[isShort ? 3 : 6]), hexLength === 5 || hexLength === 9 ? +(+('0x' + hexValue[isShort ? 4 : 7] + hexValue[isShort ? 4 : 8]) / 255).toFixed(3) : 1];\n};\n\n/**\n * @param  {Number} p\n * @param  {Number} q\n * @param  {Number} t\n * @return {Number}\n */\nconst hue2rgb = (p, q, t) => {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  return t < 1 / 6 ? p + (q - p) * 6 * t : t < 1 / 2 ? q : t < 2 / 3 ? p + (q - p) * (2 / 3 - t) * 6 : p;\n};\n\n/**\n * HSL / HSLA Color value string -> RGBA values array\n * @param  {String} hslValue\n * @return {ColorArray}\n */\nconst hslToRgba = hslValue => {\n  const hsla = hslExecRgx.exec(hslValue) || hslaExecRgx.exec(hslValue);\n  const h = +hsla[1] / 360;\n  const s = +hsla[2] / 100;\n  const l = +hsla[3] / 100;\n  const a = !isUnd(hsla[4]) ? +hsla[4] : 1;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < .5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = round(hue2rgb(p, q, h + 1 / 3) * 255, 0);\n    g = round(hue2rgb(p, q, h) * 255, 0);\n    b = round(hue2rgb(p, q, h - 1 / 3) * 255, 0);\n  }\n  return [r, g, b, a];\n};\n\n/**\n * All in one color converter that converts a color string value into an array of RGBA values\n * @param  {String} colorString\n * @return {ColorArray}\n */\nconst convertColorStringValuesToRgbaArray = colorString => {\n  return isRgb(colorString) ? rgbToRgba(colorString) : isHex(colorString) ? hexToRgba(colorString) : isHsl(colorString) ? hslToRgba(colorString) : [0, 0, 0, 1];\n};\n\n/**\n * @template T, D\n * @param {T|undefined} targetValue\n * @param {D} defaultValue\n * @return {T|D}\n */\nconst setValue = (targetValue, defaultValue) => {\n  return isUnd(targetValue) ? defaultValue : targetValue;\n};\n\n/**\n * @param  {TweenPropValue} value\n * @param  {Target} target\n * @param  {Number} index\n * @param  {Number} total\n * @param  {Object} [store]\n * @return {any}\n */\nconst getFunctionValue = (value, target, index, total, store) => {\n  if (isFnc(value)) {\n    const func = () => {\n      const computed = /** @type {Function} */value(target, index, total);\n      // Fallback to 0 if the function returns undefined / NaN / null / false / 0\n      return !isNaN(+computed) ? +computed : computed || 0;\n    };\n    if (store) {\n      store.func = func;\n    }\n    return func();\n  } else {\n    return value;\n  }\n};\n\n/**\n * @param  {Target} target\n * @param  {String} prop\n * @return {tweenTypes}\n */\nconst getTweenType = (target, prop) => {\n  return !target[isDomSymbol] ? tweenTypes.OBJECT :\n  // Handle SVG attributes\n  target[isSvgSymbol] && isValidSVGAttribute(target, prop) ? tweenTypes.ATTRIBUTE :\n  // Handle CSS Transform properties differently than CSS to allow individual animations\n  validTransforms.includes(prop) || shortTransforms.get(prop) ? tweenTypes.TRANSFORM :\n  // CSS variables\n  stringStartsWith(prop, '--') ? tweenTypes.CSS_VAR :\n  // All other CSS properties\n  prop in /** @type {DOMTarget} */target.style ? tweenTypes.CSS :\n  // Handle other DOM Attributes\n  prop in target ? tweenTypes.OBJECT : tweenTypes.ATTRIBUTE;\n};\n\n/**\n * @param  {DOMTarget} target\n * @param  {String} propName\n * @param  {Object} animationInlineStyles\n * @return {String}\n */\nconst getCSSValue = (target, propName, animationInlineStyles) => {\n  const inlineStyles = target.style[propName];\n  if (inlineStyles && animationInlineStyles) {\n    animationInlineStyles[propName] = inlineStyles;\n  }\n  const value = inlineStyles || getComputedStyle(target[proxyTargetSymbol] || target).getPropertyValue(propName);\n  return value === 'auto' ? '0' : value;\n};\n\n/**\n * @param {Target} target\n * @param {String} propName\n * @param {tweenTypes} [tweenType]\n * @param {Object|void} [animationInlineStyles]\n * @return {String|Number}\n */\nconst getOriginalAnimatableValue = (target, propName, tweenType, animationInlineStyles) => {\n  const type = !isUnd(tweenType) ? tweenType : getTweenType(target, propName);\n  return type === tweenTypes.OBJECT ? target[propName] || 0 : type === tweenTypes.ATTRIBUTE ? /** @type {DOMTarget} */target.getAttribute(propName) : type === tweenTypes.TRANSFORM ? parseInlineTransforms(/** @type {DOMTarget} */target, propName, animationInlineStyles) : type === tweenTypes.CSS_VAR ? getCSSValue(/** @type {DOMTarget} */target, propName, animationInlineStyles).trimStart() : getCSSValue(/** @type {DOMTarget} */target, propName, animationInlineStyles);\n};\n\n/**\n * @param  {Number} x\n * @param  {Number} y\n * @param  {String} operator\n * @return {Number}\n */\nconst getRelativeValue = (x, y, operator) => {\n  return operator === '-' ? x - y : operator === '+' ? x + y : x * y;\n};\n\n/** @return {TweenDecomposedValue} */\nconst createDecomposedValueTargetObject = () => {\n  return {\n    /** @type {valueTypes} */\n    t: valueTypes.NUMBER,\n    n: 0,\n    u: null,\n    o: null,\n    d: null,\n    s: null\n  };\n};\n\n/**\n * @param  {String|Number} rawValue\n * @param  {TweenDecomposedValue} targetObject\n * @return {TweenDecomposedValue}\n */\nconst decomposeRawValue = (rawValue, targetObject) => {\n  /** @type {valueTypes} */\n  targetObject.t = valueTypes.NUMBER;\n  targetObject.n = 0;\n  targetObject.u = null;\n  targetObject.o = null;\n  targetObject.d = null;\n  targetObject.s = null;\n  if (!rawValue) return targetObject;\n  const num = +rawValue;\n  if (!isNaN(num)) {\n    // It's a number\n    targetObject.n = num;\n    return targetObject;\n  } else {\n    // let str = /** @type {String} */(rawValue).trim();\n    let str = /** @type {String} */rawValue;\n    // Parsing operators (+=, -=, *=) manually is much faster than using regex here\n    if (str[1] === '=') {\n      targetObject.o = str[0];\n      str = str.slice(2);\n    }\n    // Skip exec regex if the value type is complex or color to avoid long regex backtracking\n    const unitMatch = str.includes(' ') ? false : unitsExecRgx.exec(str);\n    if (unitMatch) {\n      // Has a number and a unit\n      targetObject.t = valueTypes.UNIT;\n      targetObject.n = +unitMatch[1];\n      targetObject.u = unitMatch[2];\n      return targetObject;\n    } else if (targetObject.o) {\n      // Has an operator (+=, -=, *=)\n      targetObject.n = +str;\n      return targetObject;\n    } else if (isCol(str)) {\n      // Is a color\n      targetObject.t = valueTypes.COLOR;\n      targetObject.d = convertColorStringValuesToRgbaArray(str);\n      return targetObject;\n    } else {\n      // Is a more complex string (generally svg coords, calc() or filters CSS values)\n      const matchedNumbers = str.match(digitWithExponentRgx);\n      targetObject.t = valueTypes.COMPLEX;\n      targetObject.d = matchedNumbers ? matchedNumbers.map(Number) : [];\n      targetObject.s = str.split(digitWithExponentRgx) || [];\n      return targetObject;\n    }\n  }\n};\n\n/**\n * @param  {Tween} tween\n * @param  {TweenDecomposedValue} targetObject\n * @return {TweenDecomposedValue}\n */\nconst decomposeTweenValue = (tween, targetObject) => {\n  targetObject.t = tween._valueType;\n  targetObject.n = tween._toNumber;\n  targetObject.u = tween._unit;\n  targetObject.o = null;\n  targetObject.d = cloneArray(tween._toNumbers);\n  targetObject.s = cloneArray(tween._strings);\n  return targetObject;\n};\nconst decomposedOriginalValue = createDecomposedValueTargetObject();\nconst lookups = {\n  /** @type {TweenReplaceLookups} */\n  _rep: new WeakMap(),\n  /** @type {TweenAdditiveLookups} */\n  _add: new Map()\n};\n\n/**\n * @param  {Target} target\n * @param  {String} property\n * @param  {String} lookup\n * @return {TweenPropertySiblings}\n */\nconst getTweenSiblings = (target, property, lookup = '_rep') => {\n  const lookupMap = lookups[lookup];\n  let targetLookup = lookupMap.get(target);\n  if (!targetLookup) {\n    targetLookup = {};\n    lookupMap.set(target, targetLookup);\n  }\n  return targetLookup[property] ? targetLookup[property] : targetLookup[property] = {\n    _head: null,\n    _tail: null\n  };\n};\n\n/**\n * @param  {Tween} p\n * @param  {Tween} c\n * @return {Number|Boolean}\n */\nconst addTweenSortMethod = (p, c) => {\n  return p._isOverridden || p._absoluteStartTime > c._absoluteStartTime;\n};\n\n/**\n * @param {Tween} tween\n */\nconst overrideTween = tween => {\n  tween._isOverlapped = 1;\n  tween._isOverridden = 1;\n  tween._changeDuration = minValue;\n  tween._currentTime = minValue;\n};\n\n/**\n * @param  {Tween} tween\n * @param  {TweenPropertySiblings} siblings\n * @return {Tween}\n */\nconst composeTween = (tween, siblings) => {\n  const tweenCompositionType = tween._composition;\n\n  // Handle replaced tweens\n\n  if (tweenCompositionType === compositionTypes.replace) {\n    const tweenAbsStartTime = tween._absoluteStartTime;\n    addChild(siblings, tween, addTweenSortMethod, '_prevRep', '_nextRep');\n    const prevSibling = tween._prevRep;\n\n    // Update the previous siblings for composition replace tweens\n\n    if (prevSibling) {\n      const prevParent = prevSibling.parent;\n      const prevAbsEndTime = prevSibling._absoluteStartTime + prevSibling._changeDuration;\n\n      // Handle looped animations tween\n\n      if (\n      // Check if the previous tween is from a different animation\n      tween.parent.id !== prevParent.id &&\n      // Check if the animation has loops\n      prevParent.iterationCount > 1 &&\n      // Check if _absoluteChangeEndTime of last loop overlaps the current tween\n      prevAbsEndTime + (prevParent.duration - prevParent.iterationDuration) > tweenAbsStartTime) {\n        // TODO: Find a way to only override the iterations overlapping with the tween\n        overrideTween(prevSibling);\n        let prevPrevSibling = prevSibling._prevRep;\n\n        // If the tween was part of a set of keyframes, override its siblings\n        while (prevPrevSibling && prevPrevSibling.parent.id === prevParent.id) {\n          overrideTween(prevPrevSibling);\n          prevPrevSibling = prevPrevSibling._prevRep;\n        }\n      }\n      const absoluteUpdateStartTime = tweenAbsStartTime - tween._delay;\n      if (prevAbsEndTime > absoluteUpdateStartTime) {\n        const prevChangeStartTime = prevSibling._startTime;\n        const prevTLOffset = prevAbsEndTime - (prevChangeStartTime + prevSibling._updateDuration);\n        prevSibling._changeDuration = absoluteUpdateStartTime - prevTLOffset - prevChangeStartTime;\n        prevSibling._currentTime = prevSibling._changeDuration;\n        prevSibling._isOverlapped = 1;\n        if (prevSibling._changeDuration < minValue) {\n          overrideTween(prevSibling);\n        }\n      }\n\n      // Pause (and cancel) the parent if it only contains overlapped tweens\n\n      let pausePrevParentAnimation = true;\n      forEachChildren(prevParent, (/** @type Tween */t) => {\n        if (!t._isOverlapped) pausePrevParentAnimation = false;\n      });\n      if (pausePrevParentAnimation) {\n        const prevParentTL = prevParent.parent;\n        if (prevParentTL) {\n          let pausePrevParentTL = true;\n          forEachChildren(prevParentTL, (/** @type JSAnimation */a) => {\n            if (a !== prevParent) {\n              forEachChildren(a, (/** @type Tween */t) => {\n                if (!t._isOverlapped) pausePrevParentTL = false;\n              });\n            }\n          });\n          if (pausePrevParentTL) {\n            prevParentTL.cancel();\n          }\n        } else {\n          prevParent.cancel();\n          // Previously, calling .cancel() on a timeline child would affect the render order of other children\n          // Worked around this by marking it as .completed and using .pause() for safe removal in the engine loop\n          // This is no longer needed since timeline tween composition is now handled separatly\n          // Keeping this here for reference\n          // prevParent.completed = true;\n          // prevParent.pause();\n        }\n      }\n    }\n\n    // let nextSibling = tween._nextRep;\n\n    // // All the next siblings are automatically overridden\n\n    // if (nextSibling && nextSibling._absoluteStartTime >= tweenAbsStartTime) {\n    //   while (nextSibling) {\n    //     overrideTween(nextSibling);\n    //     nextSibling = nextSibling._nextRep;\n    //   }\n    // }\n\n    // if (nextSibling && nextSibling._absoluteStartTime < tweenAbsStartTime) {\n    //   while (nextSibling) {\n    //     overrideTween(nextSibling);\n    //     console.log(tween.id, nextSibling.id);\n    //     nextSibling = nextSibling._nextRep;\n    //   }\n    // }\n\n    // Handle additive tweens composition\n  } else if (tweenCompositionType === compositionTypes.blend) {\n    const additiveTweenSiblings = getTweenSiblings(tween.target, tween.property, '_add');\n    const additiveAnimation = addAdditiveAnimation(lookups._add);\n    let lookupTween = additiveTweenSiblings._head;\n    if (!lookupTween) {\n      lookupTween = {\n        ...tween\n      };\n      lookupTween._composition = compositionTypes.replace;\n      lookupTween._updateDuration = minValue;\n      lookupTween._startTime = 0;\n      lookupTween._numbers = cloneArray(tween._fromNumbers);\n      lookupTween._number = 0;\n      lookupTween._next = null;\n      lookupTween._prev = null;\n      addChild(additiveTweenSiblings, lookupTween);\n      addChild(additiveAnimation, lookupTween);\n    }\n\n    // Convert the values of TO to FROM and set TO to 0\n\n    const toNumber = tween._toNumber;\n    tween._fromNumber = lookupTween._fromNumber - toNumber;\n    tween._toNumber = 0;\n    tween._numbers = cloneArray(tween._fromNumbers);\n    tween._number = 0;\n    lookupTween._fromNumber = toNumber;\n    if (tween._toNumbers) {\n      const toNumbers = cloneArray(tween._toNumbers);\n      if (toNumbers) {\n        toNumbers.forEach((value, i) => {\n          tween._fromNumbers[i] = lookupTween._fromNumbers[i] - value;\n          tween._toNumbers[i] = 0;\n        });\n      }\n      lookupTween._fromNumbers = toNumbers;\n    }\n    addChild(additiveTweenSiblings, tween, null, '_prevAdd', '_nextAdd');\n  }\n  return tween;\n};\n\n/**\n * @param  {Tween} tween\n * @return {Tween}\n */\nconst removeTweenSliblings = tween => {\n  const tweenComposition = tween._composition;\n  if (tweenComposition !== compositionTypes.none) {\n    const tweenTarget = tween.target;\n    const tweenProperty = tween.property;\n    const replaceTweensLookup = lookups._rep;\n    const replaceTargetProps = replaceTweensLookup.get(tweenTarget);\n    const tweenReplaceSiblings = replaceTargetProps[tweenProperty];\n    removeChild(tweenReplaceSiblings, tween, '_prevRep', '_nextRep');\n    if (tweenComposition === compositionTypes.blend) {\n      const addTweensLookup = lookups._add;\n      const addTargetProps = addTweensLookup.get(tweenTarget);\n      if (!addTargetProps) return;\n      const additiveTweenSiblings = addTargetProps[tweenProperty];\n      const additiveAnimation = additive.animation;\n      removeChild(additiveTweenSiblings, tween, '_prevAdd', '_nextAdd');\n      // If only one tween is left in the additive lookup, it's the tween lookup\n      const lookupTween = additiveTweenSiblings._head;\n      if (lookupTween && lookupTween === additiveTweenSiblings._tail) {\n        removeChild(additiveTweenSiblings, lookupTween, '_prevAdd', '_nextAdd');\n        removeChild(additiveAnimation, lookupTween);\n        let shouldClean = true;\n        for (let prop in addTargetProps) {\n          if (addTargetProps[prop]._head) {\n            shouldClean = false;\n            break;\n          }\n        }\n        if (shouldClean) {\n          addTweensLookup.delete(tweenTarget);\n        }\n      }\n    }\n  }\n  return tween;\n};\n\n/**\n * @param  {Timer} timer\n * @return {Timer}\n */\nconst resetTimerProperties = timer => {\n  timer.paused = true;\n  timer.began = false;\n  timer.completed = false;\n  return timer;\n};\n\n/**\n * @param  {Timer} timer\n * @return {Timer}\n */\nconst reviveTimer = timer => {\n  if (!timer._cancelled) return timer;\n  if (timer._hasChildren) {\n    forEachChildren(timer, reviveTimer);\n  } else {\n    forEachChildren(timer, (/** @type {Tween} tween*/tween) => {\n      if (tween._composition !== compositionTypes.none) {\n        composeTween(tween, getTweenSiblings(tween.target, tween.property));\n      }\n    });\n  }\n  timer._cancelled = 0;\n  return timer;\n};\nlet timerId = 0;\n\n/**\n * Base class used to create Timers, Animations and Timelines\n */\nclass Timer extends Clock {\n  /**\n   * @param {TimerParams} [parameters]\n   * @param {Timeline} [parent]\n   * @param {Number} [parentPosition]\n   */\n  constructor(parameters = {}, parent = null, parentPosition = 0) {\n    super(0);\n    const {\n      id,\n      delay,\n      duration,\n      reversed,\n      alternate,\n      loop,\n      loopDelay,\n      autoplay,\n      frameRate,\n      playbackRate,\n      onComplete,\n      onLoop,\n      onPause,\n      onBegin,\n      onBeforeUpdate,\n      onUpdate\n    } = parameters;\n    if (globals.scope) globals.scope.revertibles.push(this);\n    const timerInitTime = parent ? 0 : engine._elapsedTime;\n    const timerDefaults = parent ? parent.defaults : globals.defaults;\n    const timerDelay = /** @type {Number} */isFnc(delay) || isUnd(delay) ? timerDefaults.delay : +delay;\n    const timerDuration = isFnc(duration) || isUnd(duration) ? Infinity : +duration;\n    const timerLoop = setValue(loop, timerDefaults.loop);\n    const timerLoopDelay = setValue(loopDelay, timerDefaults.loopDelay);\n    const timerIterationCount = timerLoop === true || timerLoop === Infinity || /** @type {Number} */timerLoop < 0 ? Infinity : /** @type {Number} */timerLoop + 1;\n    let offsetPosition = 0;\n    if (parent) {\n      offsetPosition = parentPosition;\n    } else {\n      let startTime = now();\n      // Make sure to tick the engine once if suspended to avoid big gaps with the following offsetPosition calculation\n      if (engine.paused) {\n        engine.requestTick(startTime);\n        startTime = engine._elapsedTime;\n      }\n      offsetPosition = startTime - engine._startTime;\n    }\n\n    // Timer's parameters\n    this.id = !isUnd(id) ? id : ++timerId;\n    /** @type {Timeline} */\n    this.parent = parent;\n    // Total duration of the timer\n    this.duration = clampInfinity((timerDuration + timerLoopDelay) * timerIterationCount - timerLoopDelay) || minValue;\n    /** @type {Boolean} */\n    this.backwards = false;\n    /** @type {Boolean} */\n    this.paused = true;\n    /** @type {Boolean} */\n    this.began = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Callback<this>} */\n    this.onBegin = onBegin || timerDefaults.onBegin;\n    /** @type {Callback<this>} */\n    this.onBeforeUpdate = onBeforeUpdate || timerDefaults.onBeforeUpdate;\n    /** @type {Callback<this>} */\n    this.onUpdate = onUpdate || timerDefaults.onUpdate;\n    /** @type {Callback<this>} */\n    this.onLoop = onLoop || timerDefaults.onLoop;\n    /** @type {Callback<this>} */\n    this.onPause = onPause || timerDefaults.onPause;\n    /** @type {Callback<this>} */\n    this.onComplete = onComplete || timerDefaults.onComplete;\n    /** @type {Number} */\n    this.iterationDuration = timerDuration; // Duration of one loop\n    /** @type {Number} */\n    this.iterationCount = timerIterationCount; // Number of loops\n    /** @type {Boolean|ScrollObserver} */\n    this._autoplay = parent ? false : setValue(autoplay, timerDefaults.autoplay);\n    /** @type {Number} */\n    this._offset = offsetPosition;\n    /** @type {Number} */\n    this._delay = timerDelay;\n    /** @type {Number} */\n    this._loopDelay = timerLoopDelay;\n    /** @type {Number} */\n    this._iterationTime = 0;\n    /** @type {Number} */\n    this._currentIteration = 0; // Current loop index\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Boolean} */\n    this._running = false;\n    /** @type {Number} */\n    this._reversed = +setValue(reversed, timerDefaults.reversed);\n    /** @type {Number} */\n    this._reverse = this._reversed;\n    /** @type {Number} */\n    this._cancelled = 0;\n    /** @type {Boolean} */\n    this._alternate = setValue(alternate, timerDefaults.alternate);\n    /** @type {Renderable} */\n    this._prev = null;\n    /** @type {Renderable} */\n    this._next = null;\n\n    // Clock's parameters\n    /** @type {Number} */\n    this._elapsedTime = timerInitTime;\n    /** @type {Number} */\n    this._startTime = timerInitTime;\n    /** @type {Number} */\n    this._lastTime = timerInitTime;\n    /** @type {Number} */\n    this._fps = setValue(frameRate, timerDefaults.frameRate);\n    /** @type {Number} */\n    this._speed = setValue(playbackRate, timerDefaults.playbackRate);\n  }\n  get cancelled() {\n    return !!this._cancelled;\n  }\n\n  /** @param {Boolean} cancelled  */\n  set cancelled(cancelled) {\n    cancelled ? this.cancel() : this.reset(1).play();\n  }\n  get currentTime() {\n    return clamp(round(this._currentTime, globals.precision), -this._delay, this.duration);\n  }\n\n  /** @param {Number} time  */\n  set currentTime(time) {\n    const paused = this.paused;\n    // Pausing the timer is necessary to avoid time jumps on a running instance\n    this.pause().seek(+time);\n    if (!paused) this.resume();\n  }\n  get iterationCurrentTime() {\n    return round(this._iterationTime, globals.precision);\n  }\n\n  /** @param {Number} time  */\n  set iterationCurrentTime(time) {\n    this.currentTime = this.iterationDuration * this._currentIteration + time;\n  }\n  get progress() {\n    return clamp(round(this._currentTime / this.duration, 5), 0, 1);\n  }\n\n  /** @param {Number} progress  */\n  set progress(progress) {\n    this.currentTime = this.duration * progress;\n  }\n  get iterationProgress() {\n    return clamp(round(this._iterationTime / this.iterationDuration, 5), 0, 1);\n  }\n\n  /** @param {Number} progress  */\n  set iterationProgress(progress) {\n    const iterationDuration = this.iterationDuration;\n    this.currentTime = iterationDuration * this._currentIteration + iterationDuration * progress;\n  }\n  get currentIteration() {\n    return this._currentIteration;\n  }\n\n  /** @param {Number} iterationCount  */\n  set currentIteration(iterationCount) {\n    this.currentTime = this.iterationDuration * clamp(+iterationCount, 0, this.iterationCount - 1);\n  }\n  get reversed() {\n    return !!this._reversed;\n  }\n\n  /** @param {Boolean} reverse  */\n  set reversed(reverse) {\n    reverse ? this.reverse() : this.play();\n  }\n  get speed() {\n    return super.speed;\n  }\n\n  /** @param {Number} playbackRate  */\n  set speed(playbackRate) {\n    super.speed = playbackRate;\n    this.resetTime();\n  }\n\n  /**\n   * @param  {Number} internalRender\n   * @return {this}\n   */\n  reset(internalRender = 0) {\n    // If cancelled, revive the timer before rendering in order to have propertly composed tweens siblings\n    reviveTimer(this);\n    if (this._reversed && !this._reverse) this.reversed = false;\n    // Rendering before updating the completed flag to prevent skips and to make sure the properties are not overridden\n    // Setting the iterationTime at the end to force the rendering to happend backwards, otherwise calling .reset() on Timelines might not render children in the right order\n    // NOTE: This is only required for Timelines and might be better to move to the Timeline class?\n    this._iterationTime = this.iterationDuration;\n    // Set tickMode to tickModes.FORCE to force rendering\n    tick(this, 0, 1, internalRender, tickModes.FORCE);\n    // Reset timer properties after revive / render to make sure the props are not updated again\n    resetTimerProperties(this);\n    // Also reset children properties\n    if (this._hasChildren) {\n      forEachChildren(this, resetTimerProperties);\n    }\n    return this;\n  }\n\n  /**\n   * @param  {Number} internalRender\n   * @return {this}\n   */\n  init(internalRender = 0) {\n    this.fps = this._fps;\n    this.speed = this._speed;\n    // Manually calling .init() on timelines should render all children intial state\n    // Forces all children to render once then render to 0 when reseted\n    if (!internalRender && this._hasChildren) {\n      tick(this, this.duration, 1, internalRender, tickModes.FORCE);\n    }\n    this.reset(internalRender);\n    // Make sure to set autoplay to false to child timers so it doesn't attempt to autoplay / link\n    const autoplay = this._autoplay;\n    if (autoplay === true) {\n      this.resume();\n    } else if (autoplay && !isUnd(/** @type {ScrollObserver} */autoplay.linked)) {\n      /** @type {ScrollObserver} */autoplay.link(this);\n    }\n    return this;\n  }\n\n  /** @return {this} */\n  resetTime() {\n    const timeScale = 1 / (this._speed * engine._speed);\n    this._startTime = now() - (this._currentTime + this._delay) * timeScale;\n    return this;\n  }\n\n  /** @return {this} */\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    this.onPause(this);\n    return this;\n  }\n\n  /** @return {this} */\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // We can safely imediatly render a timer that has no duration and no children\n    if (this.duration <= minValue && !this._hasChildren) {\n      tick(this, minValue, 0, 0, tickModes.FORCE);\n    } else {\n      if (!this._running) {\n        addChild(engine, this);\n        engine._hasChildren = true;\n        this._running = true;\n      }\n      this.resetTime();\n      // Forces the timer to advance by at least one frame when the next tick occurs\n      this._startTime -= 12;\n      engine.wake();\n    }\n    return this;\n  }\n\n  /** @return {this} */\n  restart() {\n    return this.reset(0).resume();\n  }\n\n  /**\n   * @param  {Number} time\n   * @param  {Boolean|Number} [muteCallbacks]\n   * @param  {Boolean|Number} [internalRender]\n   * @return {this}\n   */\n  seek(time, muteCallbacks = 0, internalRender = 0) {\n    // Recompose the tween siblings in case the timer has been cancelled\n    reviveTimer(this);\n    // If you seek a completed animation, otherwise the next play will starts at 0\n    this.completed = false;\n    const isPaused = this.paused;\n    this.paused = true;\n    // timer, time, muteCallbacks, internalRender, tickMode\n    tick(this, time + this._delay, ~~muteCallbacks, ~~internalRender, tickModes.AUTO);\n    return isPaused ? this : this.resume();\n  }\n\n  /** @return {this} */\n  alternate() {\n    const reversed = this._reversed;\n    const count = this.iterationCount;\n    const duration = this.iterationDuration;\n    // Calculate the maximum iterations possible given the iteration duration\n    const iterations = count === Infinity ? floor(maxValue / duration) : count;\n    this._reversed = +(this._alternate && !(iterations % 2) ? reversed : !reversed);\n    if (count === Infinity) {\n      // Handle infinite loops to loop on themself\n      this.iterationProgress = this._reversed ? 1 - this.iterationProgress : this.iterationProgress;\n    } else {\n      this.seek(duration * iterations - this._currentTime);\n    }\n    this.resetTime();\n    return this;\n  }\n\n  /** @return {this} */\n  play() {\n    if (this._reversed) this.alternate();\n    return this.resume();\n  }\n\n  /** @return {this} */\n  reverse() {\n    if (!this._reversed) this.alternate();\n    return this.resume();\n  }\n\n  // TODO: Move all the animation / tweens / children related code to Animation / Timeline\n\n  /** @return {this} */\n  cancel() {\n    if (this._hasChildren) {\n      forEachChildren(this, (/** @type {Renderable} */child) => child.cancel(), true);\n    } else {\n      forEachChildren(this, removeTweenSliblings);\n    }\n    this._cancelled = 1;\n    // Pausing the timer removes it from the engine\n    return this.pause();\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    const normlizedDuration = normalizeTime(newDuration);\n    if (currentDuration === normlizedDuration) return this;\n    const timeScale = newDuration / currentDuration;\n    const isSetter = newDuration <= minValue;\n    this.duration = isSetter ? minValue : normlizedDuration;\n    this.iterationDuration = isSetter ? minValue : normalizeTime(this.iterationDuration * timeScale);\n    this._offset *= timeScale;\n    this._delay *= timeScale;\n    this._loopDelay *= timeScale;\n    return this;\n  }\n\n  /**\n    * Cancels the timer by seeking it back to 0 and reverting the attached scroller if necessary\n    * @return {this}\n    */\n  revert() {\n    tick(this, 0, 1, 0, tickModes.AUTO);\n    const ap = /** @type {ScrollObserver} */this._autoplay;\n    if (ap && ap.linked && ap.linked === this) ap.revert();\n    return this.cancel();\n  }\n\n  /**\n    * Imediatly completes the timer, cancels it and triggers the onComplete callback\n    * @return {this}\n    */\n  complete() {\n    return this.seek(this.duration).cancel();\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      // this.then = null prevents infinite recursion if returned by an async function\n      // https://github.com/juliangarnierorg/anime-beta/issues/26\n      this.then = null;\n      callback(this);\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      // Make sure to resolve imediatly if the timer has already completed\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n}\n\n/**\n * @param {TimerParams} [parameters]\n * @return {Timer}\n */\nconst createTimer = parameters => new Timer(parameters, null, 0).init();\n\n/** @type {EasingFunction} */\nconst none = t => t;\n\n// Cubic Bezier solver adapted from https://github.com/gre/bezier-ease © Gaëtan Renaudeau\n\n/**\n * @param  {Number} aT\n * @param  {Number} aA1\n * @param  {Number} aA2\n * @return {Number}\n */\nconst calcBezier = (aT, aA1, aA2) => (((1 - 3 * aA2 + 3 * aA1) * aT + (3 * aA2 - 6 * aA1)) * aT + 3 * aA1) * aT;\n\n/**\n * @param  {Number} aX\n * @param  {Number} mX1\n * @param  {Number} mX2\n * @return {Number}\n */\nconst binarySubdivide = (aX, mX1, mX2) => {\n  let aA = 0,\n    aB = 1,\n    currentX,\n    currentT,\n    i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (abs(currentX) > .0000001 && ++i < 100);\n  return currentT;\n};\n\n/**\n * @param  {Number} [mX1]\n * @param  {Number} [mY1]\n * @param  {Number} [mX2]\n * @param  {Number} [mY2]\n * @return {EasingFunction}\n */\n\nconst cubicBezier = (mX1 = 0.5, mY1 = 0.0, mX2 = 0.5, mY2 = 1.0) => mX1 === mY1 && mX2 === mY2 ? none : t => t === 0 || t === 1 ? t : calcBezier(binarySubdivide(t, mX1, mX2), mY1, mY2);\n\n/**\n * Steps ease implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n * Only covers 'end' and 'start' jumpterms\n * @param  {Number} steps\n * @param  {Boolean} [fromStart]\n * @return {EasingFunction}\n */\nconst steps = (steps = 10, fromStart) => {\n  const roundMethod = fromStart ? ceil : floor;\n  return t => roundMethod(clamp(t, 0, 1) * steps) * (1 / steps);\n};\n\n/**\n * Without parameters, the linear function creates a non-eased transition.\n * Parameters, if used, creates a piecewise linear easing by interpolating linearly between the specified points.\n * @param  {...String|Number} [args] - Points\n * @return {EasingFunction}\n */\nconst linear = (...args) => {\n  const argsLength = args.length;\n  if (!argsLength) return none;\n  const totalPoints = argsLength - 1;\n  const firstArg = args[0];\n  const lastArg = args[totalPoints];\n  const xPoints = [0];\n  const yPoints = [parseNumber(firstArg)];\n  for (let i = 1; i < totalPoints; i++) {\n    const arg = args[i];\n    const splitValue = isStr(arg) ? /** @type {String} */arg.trim().split(' ') : [arg];\n    const value = splitValue[0];\n    const percent = splitValue[1];\n    xPoints.push(!isUnd(percent) ? parseNumber(percent) / 100 : i / totalPoints);\n    yPoints.push(parseNumber(value));\n  }\n  yPoints.push(parseNumber(lastArg));\n  xPoints.push(1);\n  return function easeLinear(t) {\n    for (let i = 1, l = xPoints.length; i < l; i++) {\n      const currentX = xPoints[i];\n      if (t <= currentX) {\n        const prevX = xPoints[i - 1];\n        const prevY = yPoints[i - 1];\n        return prevY + (yPoints[i] - prevY) * (t - prevX) / (currentX - prevX);\n      }\n    }\n    return yPoints[yPoints.length - 1];\n  };\n};\n\n/**\n * Generate random steps\n * @param  {Number} [length] - The number of steps\n * @param  {Number} [randomness] - How strong the randomness is\n * @return {EasingFunction}\n */\nconst irregular = (length = 10, randomness = 1) => {\n  const values = [0];\n  const total = length - 1;\n  for (let i = 1; i < total; i++) {\n    const previousValue = values[i - 1];\n    const spacing = i / total;\n    const segmentEnd = (i + 1) / total;\n    const randomVariation = spacing + (segmentEnd - spacing) * Math.random();\n    // Mix the even spacing and random variation based on the randomness parameter\n    const randomValue = spacing * (1 - randomness) + randomVariation * randomness;\n    values.push(clamp(randomValue, previousValue, 1));\n  }\n  values.push(1);\n  return linear(...values);\n};\n\n// Easing functions adapted from http://www.robertpenner.com/ease © Robert Penner\n\n/**\n * @callback PowerEasing\n * @param {Number|String} [power=1.675]\n * @return {EasingFunction}\n */\n\n/**\n * @callback BackEasing\n * @param {Number|String} [overshoot=1.70158]\n * @return {EasingFunction}\n */\n\n/**\n * @callback ElasticEasing\n * @param {Number|String} [amplitude=1]\n * @param {Number|String} [period=.3]\n * @return {EasingFunction}\n */\n\n/**\n * @callback EaseFactory\n * @param {Number|String} [paramA]\n * @param {Number|String} [paramB]\n * @return {EasingFunction|Number}\n */\n\n/** @typedef {PowerEasing|BackEasing|ElasticEasing} EasesFactory */\n\nconst halfPI = PI / 2;\nconst doublePI = PI * 2;\n/** @type {PowerEasing} */\nconst easeInPower = (p = 1.68) => t => pow(t, +p);\n\n/** @type {Record<String, EasesFactory|EasingFunction>} */\nconst easeInFunctions = {\n  [emptyString]: easeInPower,\n  Quad: easeInPower(2),\n  Cubic: easeInPower(3),\n  Quart: easeInPower(4),\n  Quint: easeInPower(5),\n  /** @type {EasingFunction} */\n  Sine: t => 1 - cos(t * halfPI),\n  /** @type {EasingFunction} */\n  Circ: t => 1 - sqrt(1 - t * t),\n  /** @type {EasingFunction} */\n  Expo: t => t ? pow(2, 10 * t - 10) : 0,\n  /** @type {EasingFunction} */\n  Bounce: t => {\n    let pow2,\n      b = 4;\n    while (t < ((pow2 = pow(2, --b)) - 1) / 11);\n    return 1 / pow(4, 3 - b) - 7.5625 * pow((pow2 * 3 - 2) / 22 - t, 2);\n  },\n  /** @type {BackEasing} */\n  Back: (overshoot = 1.70158) => t => (+overshoot + 1) * t * t * t - +overshoot * t * t,\n  /** @type {ElasticEasing} */\n  Elastic: (amplitude = 1, period = .3) => {\n    const a = clamp(+amplitude, 1, 10);\n    const p = clamp(+period, minValue, 2);\n    const s = p / doublePI * asin(1 / a);\n    const e = doublePI / p;\n    return t => t === 0 || t === 1 ? t : -a * pow(2, -10 * (1 - t)) * sin((1 - t - s) * e);\n  }\n};\n\n/**\n * @callback EaseType\n * @param {EasingFunction} Ease\n * @return {EasingFunction}\n */\n\n/** @type {Record<String, EaseType>} */\nconst easeTypes = {\n  in: easeIn => t => easeIn(t),\n  out: easeIn => t => 1 - easeIn(1 - t),\n  inOut: easeIn => t => t < .5 ? easeIn(t * 2) / 2 : 1 - easeIn(t * -2 + 2) / 2,\n  outIn: easeIn => t => t < .5 ? (1 - easeIn(1 - t * 2)) / 2 : (easeIn(t * 2 - 1) + 1) / 2\n};\n\n/**\n * @param  {String} string\n * @param  {Record<String, EasesFactory|EasingFunction>} easesFunctions\n * @param  {Object} easesLookups\n * @return {EasingFunction}\n */\nconst parseEaseString = (string, easesFunctions, easesLookups) => {\n  if (easesLookups[string]) return easesLookups[string];\n  if (string.indexOf('(') <= -1) {\n    const hasParams = easeTypes[string] || string.includes('Back') || string.includes('Elastic');\n    const parsedFn = /** @type {EasingFunction} */hasParams ? /** @type {EasesFactory} */easesFunctions[string]() : easesFunctions[string];\n    return parsedFn ? easesLookups[string] = parsedFn : none;\n  } else {\n    const split = string.slice(0, -1).split('(');\n    const parsedFn = /** @type {EasesFactory} */easesFunctions[split[0]];\n    return parsedFn ? easesLookups[string] = parsedFn(...split[1].split(',')) : none;\n  }\n};\n\n/**\n * @typedef  {Object} EasesFunctions\n * @property {typeof linear} linear\n * @property {typeof irregular} irregular\n * @property {typeof steps} steps\n * @property {typeof cubicBezier} cubicBezier\n * @property {PowerEasing} in\n * @property {PowerEasing} out\n * @property {PowerEasing} inOut\n * @property {PowerEasing} outIn\n * @property {EasingFunction} inQuad\n * @property {EasingFunction} outQuad\n * @property {EasingFunction} inOutQuad\n * @property {EasingFunction} outInQuad\n * @property {EasingFunction} inCubic\n * @property {EasingFunction} outCubic\n * @property {EasingFunction} inOutCubic\n * @property {EasingFunction} outInCubic\n * @property {EasingFunction} inQuart\n * @property {EasingFunction} outQuart\n * @property {EasingFunction} inOutQuart\n * @property {EasingFunction} outInQuart\n * @property {EasingFunction} inQuint\n * @property {EasingFunction} outQuint\n * @property {EasingFunction} inOutQuint\n * @property {EasingFunction} outInQuint\n * @property {EasingFunction} inSine\n * @property {EasingFunction} outSine\n * @property {EasingFunction} inOutSine\n * @property {EasingFunction} outInSine\n * @property {EasingFunction} inCirc\n * @property {EasingFunction} outCirc\n * @property {EasingFunction} inOutCirc\n * @property {EasingFunction} outInCirc\n * @property {EasingFunction} inExpo\n * @property {EasingFunction} outExpo\n * @property {EasingFunction} inOutExpo\n * @property {EasingFunction} outInExpo\n * @property {EasingFunction} inBounce\n * @property {EasingFunction} outBounce\n * @property {EasingFunction} inOutBounce\n * @property {EasingFunction} outInBounce\n * @property {BackEasing} inBack\n * @property {BackEasing} outBack\n * @property {BackEasing} inOutBack\n * @property {BackEasing} outInBack\n * @property {ElasticEasing} inElastic\n * @property {ElasticEasing} outElastic\n * @property {ElasticEasing} inOutElastic\n * @property {ElasticEasing} outInElastic\n */\n\nconst eases = /*#__PURE__*/(() => {\n  const list = {\n    linear,\n    irregular,\n    steps,\n    cubicBezier\n  };\n  for (let type in easeTypes) {\n    for (let name in easeInFunctions) {\n      const easeIn = easeInFunctions[name];\n      const easeType = easeTypes[type];\n      list[type + name] = /** @type {EasesFactory|EasingFunction} */\n      name === emptyString || name === 'Back' || name === 'Elastic' ? (a, b) => easeType(/** @type {EasesFactory} */easeIn(a, b)) : easeType(/** @type {EasingFunction} */easeIn);\n    }\n  }\n  return /** @type {EasesFunctions} */list;\n})();\n\n/** @type {Record<String, EasingFunction>} */\nconst JSEasesLookups = {\n  linear: none\n};\n\n/**\n * @param  {EasingParam} ease\n * @return {EasingFunction}\n */\nconst parseEasings = ease => isFnc(ease) ? ease : isStr(ease) ? parseEaseString(/** @type {String} */ease, eases, JSEasesLookups) : none;\nconst propertyNamesCache = {};\n\n/**\n * @param  {String} propertyName\n * @param  {Target} target\n * @param  {tweenTypes} tweenType\n * @return {String}\n */\nconst sanitizePropertyName = (propertyName, target, tweenType) => {\n  if (tweenType === tweenTypes.TRANSFORM) {\n    const t = shortTransforms.get(propertyName);\n    return t ? t : propertyName;\n  } else if (tweenType === tweenTypes.CSS ||\n  // Handle special cases where properties like \"strokeDashoffset\" needs to be set as \"stroke-dashoffset\"\n  // but properties like \"baseFrequency\" should stay in lowerCamelCase\n  tweenType === tweenTypes.ATTRIBUTE && isSvg(target) && propertyName in /** @type {DOMTarget} */target.style) {\n    const cachedPropertyName = propertyNamesCache[propertyName];\n    if (cachedPropertyName) {\n      return cachedPropertyName;\n    } else {\n      const lowerCaseName = propertyName ? toLowerCase(propertyName) : propertyName;\n      propertyNamesCache[propertyName] = lowerCaseName;\n      return lowerCaseName;\n    }\n  } else {\n    return propertyName;\n  }\n};\nconst angleUnitsMap = {\n  'deg': 1,\n  'rad': 180 / PI,\n  'turn': 360\n};\nconst convertedValuesCache = {};\n\n/**\n * @param  {DOMTarget} el\n * @param  {TweenDecomposedValue} decomposedValue\n * @param  {String} unit\n * @param  {Boolean} [force]\n * @return {TweenDecomposedValue}\n */\nconst convertValueUnit = (el, decomposedValue, unit, force = false) => {\n  const currentUnit = decomposedValue.u;\n  const currentNumber = decomposedValue.n;\n  if (decomposedValue.t === valueTypes.UNIT && currentUnit === unit) {\n    // TODO: Check if checking against the same unit string is necessary\n    return decomposedValue;\n  }\n  const cachedKey = currentNumber + currentUnit + unit;\n  const cached = convertedValuesCache[cachedKey];\n  if (!isUnd(cached) && !force) {\n    decomposedValue.n = cached;\n  } else {\n    let convertedValue;\n    if (currentUnit in angleUnitsMap) {\n      convertedValue = currentNumber * angleUnitsMap[currentUnit] / angleUnitsMap[unit];\n    } else {\n      const baseline = 100;\n      const tempEl = /** @type {DOMTarget} */el.cloneNode();\n      const parentNode = el.parentNode;\n      const parentEl = parentNode && parentNode !== doc ? parentNode : doc.body;\n      parentEl.appendChild(tempEl);\n      const elStyle = tempEl.style;\n      elStyle.width = baseline + currentUnit;\n      const currentUnitWidth = /** @type {HTMLElement} */tempEl.offsetWidth || baseline;\n      elStyle.width = baseline + unit;\n      const newUnitWidth = /** @type {HTMLElement} */tempEl.offsetWidth || baseline;\n      const factor = currentUnitWidth / newUnitWidth;\n      parentEl.removeChild(tempEl);\n      convertedValue = factor * currentNumber;\n    }\n    decomposedValue.n = convertedValue;\n    convertedValuesCache[cachedKey] = convertedValue;\n  }\n  decomposedValue.t === valueTypes.UNIT;\n  decomposedValue.u = unit;\n  return decomposedValue;\n};\n\n/**\n * @template {Renderable} T\n * @param {T} renderable\n * @return {T}\n */\nconst cleanInlineStyles = renderable => {\n  // Allow cleanInlineStyles() to be called on timelines\n  if (renderable._hasChildren) {\n    forEachChildren(renderable, cleanInlineStyles, true);\n  } else {\n    const animation = /** @type {JSAnimation} */renderable;\n    animation.pause();\n    forEachChildren(animation, (/** @type {Tween} */tween) => {\n      const tweenProperty = tween.property;\n      const tweenTarget = tween.target;\n      if (tweenTarget[isDomSymbol]) {\n        const targetStyle = /** @type {DOMTarget} */tweenTarget.style;\n        const originalInlinedValue = animation._inlineStyles[tweenProperty];\n        if (tween._tweenType === tweenTypes.TRANSFORM) {\n          const cachedTransforms = tweenTarget[transformsSymbol];\n          if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n            delete cachedTransforms[tweenProperty];\n          } else {\n            cachedTransforms[tweenProperty] = originalInlinedValue;\n          }\n          if (tween._renderTransforms) {\n            if (!Object.keys(cachedTransforms).length) {\n              targetStyle.removeProperty('transform');\n            } else {\n              let str = emptyString;\n              for (let key in cachedTransforms) {\n                str += transformsFragmentStrings[key] + cachedTransforms[key] + ') ';\n              }\n              targetStyle.transform = str;\n            }\n          }\n        } else {\n          if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n            targetStyle.removeProperty(tweenProperty);\n          } else {\n            targetStyle[tweenProperty] = originalInlinedValue;\n          }\n        }\n        if (animation._tail === tween) {\n          animation.targets.forEach(t => {\n            if (t.getAttribute && t.getAttribute('style') === emptyString) {\n              t.removeAttribute('style');\n            }\n          });\n        }\n      }\n    });\n  }\n  return renderable;\n};\n\n// Defines decomposed values target objects only once and mutate their properties later to avoid GC\n// TODO: Maybe move the objects creation to values.js and use the decompose function to create the base object\nconst fromTargetObject = createDecomposedValueTargetObject();\nconst toTargetObject = createDecomposedValueTargetObject();\nconst toFunctionStore = {\n  func: null\n};\nconst keyframesTargetArray = [null];\nconst fastSetValuesArray = [null, null];\n/** @type {TweenKeyValue} */\nconst keyObjectTarget = {\n  to: null\n};\nlet tweenId = 0;\nlet keyframes;\n/** @type {TweenParamsOptions & TweenValues} */\nlet key;\n\n/**\n * @param {DurationKeyframes | PercentageKeyframes} keyframes\n * @param {AnimationParams} parameters\n * @return {AnimationParams}\n */\nconst generateKeyframes = (keyframes, parameters) => {\n  /** @type {AnimationParams} */\n  const properties = {};\n  if (isArr(keyframes)) {\n    const propertyNames = [].concat(... /** @type {DurationKeyframes} */keyframes.map(key => Object.keys(key))).filter(isKey);\n    for (let i = 0, l = propertyNames.length; i < l; i++) {\n      const propName = propertyNames[i];\n      const propArray = /** @type {DurationKeyframes} */keyframes.map(key => {\n        /** @type {TweenKeyValue} */\n        const newKey = {};\n        for (let p in key) {\n          const keyValue = /** @type {TweenPropValue} */key[p];\n          if (isKey(p)) {\n            if (p === propName) {\n              newKey.to = keyValue;\n            }\n          } else {\n            newKey[p] = keyValue;\n          }\n        }\n        return newKey;\n      });\n      properties[propName] = /** @type {ArraySyntaxValue} */propArray;\n    }\n  } else {\n    const totalDuration = /** @type {Number} */setValue(parameters.duration, globals.defaults.duration);\n    const keys = Object.keys(keyframes).map(key => {\n      return {\n        o: parseFloat(key) / 100,\n        p: keyframes[key]\n      };\n    }).sort((a, b) => a.o - b.o);\n    keys.forEach(key => {\n      const offset = key.o;\n      const prop = key.p;\n      for (let name in prop) {\n        if (isKey(name)) {\n          let propArray = /** @type {Array} */properties[name];\n          if (!propArray) propArray = properties[name] = [];\n          const duration = offset * totalDuration;\n          let length = propArray.length;\n          let prevKey = propArray[length - 1];\n          const keyObj = {\n            to: prop[name]\n          };\n          let durProgress = 0;\n          for (let i = 0; i < length; i++) {\n            durProgress += propArray[i].duration;\n          }\n          if (length === 1) {\n            keyObj.from = prevKey.to;\n          }\n          if (prop.ease) {\n            keyObj.ease = prop.ease;\n          }\n          keyObj.duration = duration - (length ? durProgress : 0);\n          propArray.push(keyObj);\n        }\n      }\n      return key;\n    });\n    for (let name in properties) {\n      const propArray = /** @type {Array} */properties[name];\n      let prevEase;\n      // let durProgress = 0\n      for (let i = 0, l = propArray.length; i < l; i++) {\n        const prop = propArray[i];\n        // Emulate WAPPI easing parameter position\n        const currentEase = prop.ease;\n        prop.ease = prevEase ? prevEase : undefined;\n        prevEase = currentEase;\n        // durProgress += prop.duration;\n        // if (i === l - 1 && durProgress !== totalDuration) {\n        //   propArray.push({ from: prop.to, ease: prop.ease, duration: totalDuration - durProgress })\n        // }\n      }\n      if (!propArray[0].duration) {\n        propArray.shift();\n      }\n    }\n  }\n  return properties;\n};\nclass JSAnimation extends Timer {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimationParams} parameters\n   * @param {Timeline} [parent]\n   * @param {Number} [parentPosition]\n   * @param {Boolean} [fastSet=false]\n   * @param {Number} [index=0]\n   * @param {Number} [length=0]\n   */\n  constructor(targets, parameters, parent, parentPosition, fastSet = false, index = 0, length = 0) {\n    super(/** @type {TimerParams&AnimationParams} */parameters, parent, parentPosition);\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n\n    // If the parameters object contains a \"keyframes\" property, convert all the keyframes values to regular properties\n\n    const kfParams = /** @type {AnimationParams} */parameters.keyframes;\n    const params = /** @type {AnimationParams} */kfParams ? mergeObjects(generateKeyframes(/** @type {DurationKeyframes} */kfParams, parameters), parameters) : parameters;\n    const {\n      delay,\n      duration,\n      ease,\n      playbackEase,\n      modifier,\n      composition,\n      onRender\n    } = params;\n    const animDefaults = parent ? parent.defaults : globals.defaults;\n    const animaPlaybackEase = setValue(playbackEase, animDefaults.playbackEase);\n    const animEase = animaPlaybackEase ? parseEasings(animaPlaybackEase) : null;\n    const hasSpring = !isUnd(ease) && !isUnd(/** @type {Spring} */ease.ease);\n    const tEasing = hasSpring ? /** @type {Spring} */ease.ease : setValue(ease, animEase ? 'linear' : animDefaults.ease);\n    const tDuration = hasSpring ? /** @type {Spring} */ease.duration : setValue(duration, animDefaults.duration);\n    const tDelay = setValue(delay, animDefaults.delay);\n    const tModifier = modifier || animDefaults.modifier;\n    // If no composition is defined and the targets length is high (>= 1000) set the composition to 'none' (0) for faster tween creation\n    const tComposition = isUnd(composition) && targetsLength >= K ? compositionTypes.none : !isUnd(composition) ? composition : animDefaults.composition;\n    // TODO: Do not create an empty object until we know the animation will generate inline styles\n    const animInlineStyles = {};\n    // const absoluteOffsetTime = this._offset;\n    const absoluteOffsetTime = this._offset + (parent ? parent._offset : 0);\n    let iterationDuration = NaN;\n    let iterationDelay = NaN;\n    let animationAnimationLength = 0;\n    let shouldTriggerRender = 0;\n    for (let targetIndex = 0; targetIndex < targetsLength; targetIndex++) {\n      const target = parsedTargets[targetIndex];\n      const ti = index || targetIndex;\n      const tl = length || targetsLength;\n      let lastTransformGroupIndex = NaN;\n      let lastTransformGroupLength = NaN;\n      for (let p in params) {\n        if (isKey(p)) {\n          const tweenType = getTweenType(target, p);\n          const propName = sanitizePropertyName(p, target, tweenType);\n          let propValue = params[p];\n          const isPropValueArray = isArr(propValue);\n          if (fastSet && !isPropValueArray) {\n            fastSetValuesArray[0] = propValue;\n            fastSetValuesArray[1] = propValue;\n            propValue = fastSetValuesArray;\n          }\n\n          // TODO: Allow nested keyframes inside ObjectValue value (prop: { to: [.5, 1, .75, 2, 3] })\n          // Normalize property values to valid keyframe syntax:\n          // [x, y] to [{to: [x, y]}] or {to: x} to [{to: x}] or keep keys syntax [{}, {}, {}...]\n          // const keyframes = isArr(propValue) ? propValue.length === 2 && !isObj(propValue[0]) ? [{ to: propValue }] : propValue : [propValue];\n          if (isPropValueArray) {\n            const arrayLength = /** @type {Array} */propValue.length;\n            const isNotObjectValue = !isObj(propValue[0]);\n            // Convert [x, y] to [{to: [x, y]}]\n            if (arrayLength === 2 && isNotObjectValue) {\n              keyObjectTarget.to = /** @type {TweenParamValue} */ /** @type {unknown} */propValue;\n              keyframesTargetArray[0] = keyObjectTarget;\n              keyframes = keyframesTargetArray;\n              // Convert [x, y, z] to [[x, y], z]\n            } else if (arrayLength > 2 && isNotObjectValue) {\n              keyframes = [];\n              /** @type {Array.<Number>} */\n              propValue.forEach((v, i) => {\n                if (!i) {\n                  fastSetValuesArray[0] = v;\n                } else if (i === 1) {\n                  fastSetValuesArray[1] = v;\n                  keyframes.push(fastSetValuesArray);\n                } else {\n                  keyframes.push(v);\n                }\n              });\n            } else {\n              keyframes = /** @type {Array.<TweenKeyValue>} */propValue;\n            }\n          } else {\n            keyframesTargetArray[0] = propValue;\n            keyframes = keyframesTargetArray;\n          }\n          let siblings = null;\n          let prevTween = null;\n          let firstTweenChangeStartTime = NaN;\n          let lastTweenChangeEndTime = 0;\n          let tweenIndex = 0;\n          for (let l = keyframes.length; tweenIndex < l; tweenIndex++) {\n            const keyframe = keyframes[tweenIndex];\n            if (isObj(keyframe)) {\n              key = keyframe;\n            } else {\n              keyObjectTarget.to = /** @type {TweenParamValue} */keyframe;\n              key = keyObjectTarget;\n            }\n            toFunctionStore.func = null;\n            const computedToValue = getFunctionValue(key.to, target, ti, tl, toFunctionStore);\n            let tweenToValue;\n            // Allows function based values to return an object syntax value ({to: v})\n            if (isObj(computedToValue) && !isUnd(computedToValue.to)) {\n              key = computedToValue;\n              tweenToValue = computedToValue.to;\n            } else {\n              tweenToValue = computedToValue;\n            }\n            const tweenFromValue = getFunctionValue(key.from, target, ti, tl);\n            const keyEasing = key.ease;\n            const hasSpring = !isUnd(keyEasing) && !isUnd(/** @type {Spring} */keyEasing.ease);\n            // Easing are treated differently and don't accept function based value to prevent having to pass a function wrapper that returns an other function all the time\n            const tweenEasing = hasSpring ? /** @type {Spring} */keyEasing.ease : keyEasing || tEasing;\n            // Calculate default individual keyframe duration by dividing the tl of keyframes\n            const tweenDuration = hasSpring ? /** @type {Spring} */keyEasing.duration : getFunctionValue(setValue(key.duration, l > 1 ? getFunctionValue(tDuration, target, ti, tl) / l : tDuration), target, ti, tl);\n            // Default delay value should only be applied to the first tween\n            const tweenDelay = getFunctionValue(setValue(key.delay, !tweenIndex ? tDelay : 0), target, ti, tl);\n            const computedComposition = getFunctionValue(setValue(key.composition, tComposition), target, ti, tl);\n            const tweenComposition = isNum(computedComposition) ? computedComposition : compositionTypes[computedComposition];\n            // Modifiers are treated differently and don't accept function based value to prevent having to pass a function wrapper\n            const tweenModifier = key.modifier || tModifier;\n            const hasFromvalue = !isUnd(tweenFromValue);\n            const hasToValue = !isUnd(tweenToValue);\n            const isFromToArray = isArr(tweenToValue);\n            const isFromToValue = isFromToArray || hasFromvalue && hasToValue;\n            const tweenStartTime = prevTween ? lastTweenChangeEndTime + tweenDelay : tweenDelay;\n            const absoluteStartTime = absoluteOffsetTime + tweenStartTime;\n\n            // Force a onRender callback if the animation contains at least one from value and autoplay is set to false\n            if (!shouldTriggerRender && (hasFromvalue || isFromToArray)) shouldTriggerRender = 1;\n            let prevSibling = prevTween;\n            if (tweenComposition !== compositionTypes.none) {\n              if (!siblings) siblings = getTweenSiblings(target, propName);\n              let nextSibling = siblings._head;\n              // Iterate trough all the next siblings until we find a sibling with an equal or inferior start time\n              while (nextSibling && !nextSibling._isOverridden && nextSibling._absoluteStartTime <= absoluteStartTime) {\n                prevSibling = nextSibling;\n                nextSibling = nextSibling._nextRep;\n                // Overrides all the next siblings if the next sibling starts at the same time of after as the new tween start time\n                if (nextSibling && nextSibling._absoluteStartTime >= absoluteStartTime) {\n                  while (nextSibling) {\n                    overrideTween(nextSibling);\n                    // This will ends both the current while loop and the upper one once all the next sibllings have been overriden\n                    nextSibling = nextSibling._nextRep;\n                  }\n                }\n              }\n            }\n\n            // Decompose values\n            if (isFromToValue) {\n              decomposeRawValue(isFromToArray ? getFunctionValue(tweenToValue[0], target, ti, tl) : tweenFromValue, fromTargetObject);\n              decomposeRawValue(isFromToArray ? getFunctionValue(tweenToValue[1], target, ti, tl, toFunctionStore) : tweenToValue, toTargetObject);\n              if (fromTargetObject.t === valueTypes.NUMBER) {\n                if (prevSibling) {\n                  if (prevSibling._valueType === valueTypes.UNIT) {\n                    fromTargetObject.t = valueTypes.UNIT;\n                    fromTargetObject.u = prevSibling._unit;\n                  }\n                } else {\n                  decomposeRawValue(getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), decomposedOriginalValue);\n                  if (decomposedOriginalValue.t === valueTypes.UNIT) {\n                    fromTargetObject.t = valueTypes.UNIT;\n                    fromTargetObject.u = decomposedOriginalValue.u;\n                  }\n                }\n              }\n            } else {\n              if (hasToValue) {\n                decomposeRawValue(tweenToValue, toTargetObject);\n              } else {\n                if (prevTween) {\n                  decomposeTweenValue(prevTween, toTargetObject);\n                } else {\n                  // No need to get and parse the original value if the tween is part of a timeline and has a previous sibling part of the same timeline\n                  decomposeRawValue(parent && prevSibling && prevSibling.parent.parent === parent ? prevSibling._value : getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), toTargetObject);\n                }\n              }\n              if (hasFromvalue) {\n                decomposeRawValue(tweenFromValue, fromTargetObject);\n              } else {\n                if (prevTween) {\n                  decomposeTweenValue(prevTween, fromTargetObject);\n                } else {\n                  decomposeRawValue(parent && prevSibling && prevSibling.parent.parent === parent ? prevSibling._value :\n                  // No need to get and parse the original value if the tween is part of a timeline and has a previous sibling part of the same timeline\n                  getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), fromTargetObject);\n                }\n              }\n            }\n\n            // Apply operators\n            if (fromTargetObject.o) {\n              fromTargetObject.n = getRelativeValue(!prevSibling ? decomposeRawValue(getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), decomposedOriginalValue).n : prevSibling._toNumber, fromTargetObject.n, fromTargetObject.o);\n            }\n            if (toTargetObject.o) {\n              toTargetObject.n = getRelativeValue(fromTargetObject.n, toTargetObject.n, toTargetObject.o);\n            }\n\n            // Values omogenisation in cases of type difference between \"from\" and \"to\"\n            if (fromTargetObject.t !== toTargetObject.t) {\n              if (fromTargetObject.t === valueTypes.COMPLEX || toTargetObject.t === valueTypes.COMPLEX) {\n                const complexValue = fromTargetObject.t === valueTypes.COMPLEX ? fromTargetObject : toTargetObject;\n                const notComplexValue = fromTargetObject.t === valueTypes.COMPLEX ? toTargetObject : fromTargetObject;\n                notComplexValue.t = valueTypes.COMPLEX;\n                notComplexValue.s = cloneArray(complexValue.s);\n                notComplexValue.d = complexValue.d.map(() => notComplexValue.n);\n              } else if (fromTargetObject.t === valueTypes.UNIT || toTargetObject.t === valueTypes.UNIT) {\n                const unitValue = fromTargetObject.t === valueTypes.UNIT ? fromTargetObject : toTargetObject;\n                const notUnitValue = fromTargetObject.t === valueTypes.UNIT ? toTargetObject : fromTargetObject;\n                notUnitValue.t = valueTypes.UNIT;\n                notUnitValue.u = unitValue.u;\n              } else if (fromTargetObject.t === valueTypes.COLOR || toTargetObject.t === valueTypes.COLOR) {\n                const colorValue = fromTargetObject.t === valueTypes.COLOR ? fromTargetObject : toTargetObject;\n                const notColorValue = fromTargetObject.t === valueTypes.COLOR ? toTargetObject : fromTargetObject;\n                notColorValue.t = valueTypes.COLOR;\n                notColorValue.s = colorValue.s;\n                notColorValue.d = [0, 0, 0, 1];\n              }\n            }\n\n            // Unit conversion\n            if (fromTargetObject.u !== toTargetObject.u) {\n              let valueToConvert = toTargetObject.u ? fromTargetObject : toTargetObject;\n              valueToConvert = convertValueUnit(/** @type {DOMTarget} */target, valueToConvert, toTargetObject.u ? toTargetObject.u : fromTargetObject.u, false);\n              // TODO:\n              // convertValueUnit(target, to.u ? from : to, to.u ? to.u : from.u);\n            }\n\n            // Fill in non existing complex values\n            if (toTargetObject.d && fromTargetObject.d && toTargetObject.d.length !== fromTargetObject.d.length) {\n              const longestValue = fromTargetObject.d.length > toTargetObject.d.length ? fromTargetObject : toTargetObject;\n              const shortestValue = longestValue === fromTargetObject ? toTargetObject : fromTargetObject;\n              // TODO: Check if n should be used instead of 0 for default complex values\n              shortestValue.d = longestValue.d.map((_, i) => isUnd(shortestValue.d[i]) ? 0 : shortestValue.d[i]);\n              shortestValue.s = cloneArray(longestValue.s);\n            }\n\n            // Tween factory\n\n            // Rounding is necessary here to minimize floating point errors\n            const tweenUpdateDuration = round(+tweenDuration || minValue, 12);\n\n            /** @type {Tween} */\n            const tween = {\n              parent: this,\n              id: tweenId++,\n              property: propName,\n              target: target,\n              _value: null,\n              _func: toFunctionStore.func,\n              _ease: parseEasings(tweenEasing),\n              _fromNumbers: cloneArray(fromTargetObject.d),\n              _toNumbers: cloneArray(toTargetObject.d),\n              _strings: cloneArray(toTargetObject.s),\n              _fromNumber: fromTargetObject.n,\n              _toNumber: toTargetObject.n,\n              _numbers: cloneArray(fromTargetObject.d),\n              // For additive tween and animatables\n              _number: fromTargetObject.n,\n              // For additive tween and animatables\n              _unit: toTargetObject.u,\n              _modifier: tweenModifier,\n              _currentTime: 0,\n              _startTime: tweenStartTime,\n              _delay: +tweenDelay,\n              _updateDuration: tweenUpdateDuration,\n              _changeDuration: tweenUpdateDuration,\n              _absoluteStartTime: absoluteStartTime,\n              // NOTE: Investigate bit packing to stores ENUM / BOOL\n              _tweenType: tweenType,\n              _valueType: toTargetObject.t,\n              _composition: tweenComposition,\n              _isOverlapped: 0,\n              _isOverridden: 0,\n              _renderTransforms: 0,\n              _prevRep: null,\n              // For replaced tween\n              _nextRep: null,\n              // For replaced tween\n              _prevAdd: null,\n              // For additive tween\n              _nextAdd: null,\n              // For additive tween\n              _prev: null,\n              _next: null\n            };\n            if (tweenComposition !== compositionTypes.none) {\n              composeTween(tween, siblings);\n            }\n            if (isNaN(firstTweenChangeStartTime)) {\n              firstTweenChangeStartTime = tween._startTime;\n            }\n            // Rounding is necessary here to minimize floating point errors\n            lastTweenChangeEndTime = round(tweenStartTime + tweenUpdateDuration, 12);\n            prevTween = tween;\n            animationAnimationLength++;\n            addChild(this, tween);\n          }\n\n          // Update animation timings with the added tweens properties\n\n          if (isNaN(iterationDelay) || firstTweenChangeStartTime < iterationDelay) {\n            iterationDelay = firstTweenChangeStartTime;\n          }\n          if (isNaN(iterationDuration) || lastTweenChangeEndTime > iterationDuration) {\n            iterationDuration = lastTweenChangeEndTime;\n          }\n\n          // TODO: Find a way to inline tween._renderTransforms = 1 here\n          if (tweenType === tweenTypes.TRANSFORM) {\n            lastTransformGroupIndex = animationAnimationLength - tweenIndex;\n            lastTransformGroupLength = animationAnimationLength;\n          }\n        }\n      }\n\n      // Set _renderTransforms to last transform property to correctly render the transforms list\n      if (!isNaN(lastTransformGroupIndex)) {\n        let i = 0;\n        forEachChildren(this, (/** @type {Tween} */tween) => {\n          if (i >= lastTransformGroupIndex && i < lastTransformGroupLength) {\n            tween._renderTransforms = 1;\n            if (tween._composition === compositionTypes.blend) {\n              forEachChildren(additive.animation, (/** @type {Tween} */additiveTween) => {\n                if (additiveTween.id === tween.id) {\n                  additiveTween._renderTransforms = 1;\n                }\n              });\n            }\n          }\n          i++;\n        });\n      }\n    }\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n    if (iterationDelay) {\n      forEachChildren(this, (/** @type {Tween} */tween) => {\n        // If (startTime - delay) equals 0, this means the tween is at the begining of the animation so we need to trim the delay too\n        if (!(tween._startTime - tween._delay)) {\n          tween._delay -= iterationDelay;\n        }\n        tween._startTime -= iterationDelay;\n      });\n      iterationDuration -= iterationDelay;\n    } else {\n      iterationDelay = 0;\n    }\n\n    // Prevents iterationDuration to be NaN if no valid animatable props have been provided\n    // Prevents _iterationCount to be NaN if no valid animatable props have been provided\n    if (!iterationDuration) {\n      iterationDuration = minValue;\n      this.iterationCount = 0;\n    }\n    /** @type {TargetsArray} */\n    this.targets = parsedTargets;\n    /** @type {Number} */\n    this.duration = iterationDuration === minValue ? minValue : clampInfinity((iterationDuration + this._loopDelay) * this.iterationCount - this._loopDelay) || minValue;\n    /** @type {Callback<this>} */\n    this.onRender = onRender || animDefaults.onRender;\n    /** @type {EasingFunction} */\n    this._ease = animEase;\n    /** @type {Number} */\n    this._delay = iterationDelay;\n    // NOTE: I'm keeping delay values separated from offsets in timelines because delays can override previous tweens and it could be confusing to debug a timeline with overridden tweens and no associated visible delays.\n    // this._delay = parent ? 0 : iterationDelay;\n    // this._offset += parent ? iterationDelay : 0;\n    /** @type {Number} */\n    this.iterationDuration = iterationDuration;\n    /** @type {{}} */\n    this._inlineStyles = animInlineStyles;\n    if (!this._autoplay && shouldTriggerRender) this.onRender(this);\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    if (currentDuration === normalizeTime(newDuration)) return this;\n    const timeScale = newDuration / currentDuration;\n    // NOTE: Find a better way to handle the stretch of an animation after stretch = 0\n    forEachChildren(this, (/** @type {Tween} */tween) => {\n      // Rounding is necessary here to minimize floating point errors\n      tween._updateDuration = normalizeTime(tween._updateDuration * timeScale);\n      tween._changeDuration = normalizeTime(tween._changeDuration * timeScale);\n      tween._currentTime *= timeScale;\n      tween._startTime *= timeScale;\n      tween._absoluteStartTime *= timeScale;\n    });\n    return super.stretch(newDuration);\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    forEachChildren(this, (/** @type {Tween} */tween) => {\n      const ogValue = getOriginalAnimatableValue(tween.target, tween.property, tween._tweenType);\n      decomposeRawValue(ogValue, decomposedOriginalValue);\n      tween._fromNumbers = cloneArray(decomposedOriginalValue.d);\n      tween._fromNumber = decomposedOriginalValue.n;\n      if (tween._func) {\n        decomposeRawValue(tween._func(), toTargetObject);\n        tween._toNumbers = cloneArray(toTargetObject.d);\n        tween._strings = cloneArray(toTargetObject.s);\n        tween._toNumber = toTargetObject.n;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Cancel the animation and revert all the values affected by this animation to their original state\n   * @return {this}\n   */\n  revert() {\n    super.revert();\n    return cleanInlineStyles(this);\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback) {\n    return super.then(callback);\n  }\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimationParams} parameters\n * @return {JSAnimation}\n */\nconst animate = (targets, parameters) => new JSAnimation(targets, parameters, null, 0, false).init();\n\n/**\n * Converts an easing function into a valid CSS linear() timing function string\n * @param {EasingFunction} fn\n * @param {number} [samples=100]\n * @returns {string} CSS linear() timing function\n */\nconst easingToLinear = (fn, samples = 100) => {\n  const points = [];\n  for (let i = 0; i <= samples; i++) points.push(fn(i / samples));\n  return `linear(${points.join(', ')})`;\n};\nconst WAAPIEasesLookups = {\n  in: 'ease-in',\n  out: 'ease-out',\n  inOut: 'ease-in-out'\n};\nconst WAAPIeases = /*#__PURE__*/(() => {\n  const list = {};\n  for (let type in easeTypes) list[type] = a => easeTypes[type](easeInPower(a));\n  return /** @type {Record<String, EasingFunction>} */list;\n})();\n\n/**\n * @param  {EasingParam} ease\n * @return {String}\n */\nconst parseWAAPIEasing = ease => {\n  let parsedEase = WAAPIEasesLookups[ease];\n  if (parsedEase) return parsedEase;\n  parsedEase = 'linear';\n  if (isStr(ease)) {\n    if (stringStartsWith(ease, 'linear') || stringStartsWith(ease, 'cubic-') || stringStartsWith(ease, 'steps') || stringStartsWith(ease, 'ease')) {\n      parsedEase = ease;\n    } else if (stringStartsWith(ease, 'cubicB')) {\n      parsedEase = toLowerCase(ease);\n    } else {\n      const parsed = parseEaseString(ease, WAAPIeases, WAAPIEasesLookups);\n      if (isFnc(parsed)) parsedEase = parsed === none ? 'linear' : easingToLinear(parsed);\n    }\n    WAAPIEasesLookups[ease] = parsedEase;\n  } else if (isFnc(ease)) {\n    const easing = easingToLinear(ease);\n    if (easing) parsedEase = easing;\n  } else if (/** @type {Spring} */ease.ease) {\n    parsedEase = easingToLinear(/** @type {Spring} */ease.ease);\n  }\n  return parsedEase;\n};\n\n/**\n * @typedef {String|Number|Array<String>|Array<Number>} WAAPITweenValue\n */\n\n/**\n * @callback WAAPIFunctionvalue\n * @param {DOMTarget} target - The animated target\n * @param {Number} index - The target index\n * @param {Number} length - The total number of animated targets\n * @return {WAAPITweenValue}\n */\n\n/**\n * @typedef {WAAPITweenValue|WAAPIFunctionvalue|Array<String|Number|WAAPIFunctionvalue>} WAAPIKeyframeValue\n */\n\n/**\n * @typedef {(animation: WAAPIAnimation) => void} WAAPICallback\n */\n\n/**\n * @typedef {Object} WAAPITweenOptions\n * @property {WAAPIKeyframeValue} [to]\n * @property {WAAPIKeyframeValue} [from]\n * @property {Number|WAAPIFunctionvalue} [duration]\n * @property {Number|WAAPIFunctionvalue} [delay]\n * @property {EasingParam} [ease]\n * @property {CompositeOperation} [composition]\n */\n\n/**\n * @typedef {Object} WAAPIAnimationOptions\n * @property {Number|Boolean} [loop]\n * @property {Boolean} [Reversed]\n * @property {Boolean} [Alternate]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number} [playbackRate]\n * @property {Number|WAAPIFunctionvalue} [duration]\n * @property {Number|WAAPIFunctionvalue} [delay]\n * @property {EasingParam} [ease]\n * @property {CompositeOperation} [composition]\n * @property {WAAPICallback} [onComplete]\n */\n\n/**\n * @typedef {Record<String, WAAPIKeyframeValue | WAAPIAnimationOptions | Boolean | ScrollObserver | WAAPICallback | EasingParam | WAAPITweenOptions> & WAAPIAnimationOptions} WAAPIAnimationParams\n */\n\nconst transformsShorthands = ['x', 'y', 'z'];\nconst commonDefaultPXProperties = ['perspective', 'width', 'height', 'margin', 'padding', 'top', 'right', 'bottom', 'left', 'borderWidth', 'fontSize', 'borderRadius', ...transformsShorthands];\nconst validIndividualTransforms = [...transformsShorthands, ...validTransforms.filter(t => ['X', 'Y', 'Z'].some(axis => t.endsWith(axis)))];\n\n// Setting it to true in case CSS.registerProperty is not supported will automatically skip the registration and fallback to no animation\nlet transformsPropertiesRegistered = isBrowser && (isUnd(CSS) || !Object.hasOwnProperty.call(CSS, 'registerProperty'));\nconst registerTransformsProperties = () => {\n  if (transformsPropertiesRegistered) return;\n  validTransforms.forEach(t => {\n    const isSkew = stringStartsWith(t, 'skew');\n    const isScale = stringStartsWith(t, 'scale');\n    const isRotate = stringStartsWith(t, 'rotate');\n    const isTranslate = stringStartsWith(t, 'translate');\n    const isAngle = isRotate || isSkew;\n    const syntax = isAngle ? '<angle>' : isScale ? \"<number>\" : isTranslate ? \"<length-percentage>\" : \"*\";\n    try {\n      CSS.registerProperty({\n        name: '--' + t,\n        syntax,\n        inherits: false,\n        initialValue: isTranslate ? '0px' : isAngle ? '0deg' : isScale ? '1' : '0'\n      });\n    } catch {}\n  });\n  transformsPropertiesRegistered = true;\n};\nconst WAAPIAnimationsLookups = {\n  _head: null,\n  _tail: null\n};\n\n/**\n * @param {DOMTarget} $el\n * @param {String} [property]\n * @param {WAAPIAnimation} [parent]\n */\nconst removeWAAPIAnimation = ($el, property, parent) => {\n  let nextLookup = WAAPIAnimationsLookups._head;\n  while (nextLookup) {\n    const next = nextLookup._next;\n    const matchTarget = nextLookup.$el === $el;\n    const matchProperty = !property || nextLookup.property === property;\n    const matchParent = !parent || nextLookup.parent === parent;\n    if (matchTarget && matchProperty && matchParent) {\n      const anim = nextLookup.animation;\n      try {\n        anim.commitStyles();\n      } catch {}\n      anim.cancel();\n      removeChild(WAAPIAnimationsLookups, nextLookup);\n      const lookupParent = nextLookup.parent;\n      if (lookupParent) {\n        lookupParent._completed++;\n        if (lookupParent.animations.length === lookupParent._completed) {\n          lookupParent.completed = true;\n          if (!lookupParent.muteCallbacks) {\n            lookupParent.paused = true;\n            lookupParent.onComplete(lookupParent);\n            lookupParent._resolve(lookupParent);\n          }\n        }\n      }\n    }\n    nextLookup = next;\n  }\n};\n\n/**\n * @param {WAAPIAnimation} parent\n * @param {DOMTarget} $el\n * @param {String} property\n * @param {PropertyIndexedKeyframes} keyframes\n * @param {KeyframeAnimationOptions} params\n * @retun {Animation}\n */\nconst addWAAPIAnimation = (parent, $el, property, keyframes, params) => {\n  const animation = $el.animate(keyframes, params);\n  const animTotalDuration = params.delay + +params.duration * params.iterations;\n  animation.playbackRate = parent._speed;\n  if (parent.paused) animation.pause();\n  if (parent.duration < animTotalDuration) {\n    parent.duration = animTotalDuration;\n    parent.controlAnimation = animation;\n  }\n  parent.animations.push(animation);\n  removeWAAPIAnimation($el, property);\n  addChild(WAAPIAnimationsLookups, {\n    parent,\n    animation,\n    $el,\n    property,\n    _next: null,\n    _prev: null\n  });\n  const handleRemove = () => {\n    removeWAAPIAnimation($el, property, parent);\n  };\n  animation.onremove = handleRemove;\n  animation.onfinish = handleRemove;\n  return animation;\n};\n\n/**\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} value\n * @param  {DOMTarget} $el\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {String}\n */\nconst normalizeTweenValue = (propName, value, $el, i, targetsLength) => {\n  let v = getFunctionValue(/** @type {any} */value, $el, i, targetsLength);\n  if (!isNum(v)) return v;\n  if (commonDefaultPXProperties.includes(propName) || stringStartsWith(propName, 'translate')) return `${v}px`;\n  if (stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew')) return `${v}deg`;\n  return `${v}`;\n};\n\n/**\n * @param  {DOMTarget} $el\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} from\n * @param  {WAAPIKeyframeValue} to\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {WAAPITweenValue}\n */\nconst parseIndividualTweenValue = ($el, propName, from, to, i, targetsLength) => {\n  /** @type {WAAPITweenValue} */\n  let tweenValue = '0';\n  const computedTo = !isUnd(to) ? normalizeTweenValue(propName, to, $el, i, targetsLength) : getComputedStyle($el)[propName];\n  if (!isUnd(from)) {\n    const computedFrom = normalizeTweenValue(propName, from, $el, i, targetsLength);\n    tweenValue = [computedFrom, computedTo];\n  } else {\n    tweenValue = isArr(to) ? to.map((/** @type {any} */v) => normalizeTweenValue(propName, v, $el, i, targetsLength)) : computedTo;\n  }\n  return tweenValue;\n};\nclass WAAPIAnimation {\n  /**\n   * @param {DOMTargetsParam} targets\n   * @param {WAAPIAnimationParams} params\n   */\n  constructor(targets, params) {\n    if (globals.scope) globals.scope.revertibles.push(this);\n    registerTransformsProperties();\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n    const ease = setValue(params.ease, parseWAAPIEasing(globals.defaults.ease));\n    const spring = /** @type {Spring} */ease.ease && ease;\n    const autoplay = setValue(params.autoplay, globals.defaults.autoplay);\n    const scroll = autoplay && /** @type {ScrollObserver} */autoplay.link ? autoplay : false;\n    const alternate = params.alternate && /** @type {Boolean} */params.alternate === true;\n    const reversed = params.reversed && /** @type {Boolean} */params.reversed === true;\n    const loop = setValue(params.loop, globals.defaults.loop);\n    const iterations = /** @type {Number} */loop === true || loop === Infinity ? Infinity : isNum(loop) ? loop + 1 : 1;\n    /** @type {PlaybackDirection} */\n    const direction = alternate ? reversed ? 'alternate-reverse' : 'alternate' : reversed ? 'reverse' : 'normal';\n    /** @type {FillMode} */\n    const fill = 'forwards';\n    /** @type {String} */\n    const easing = parseWAAPIEasing(ease);\n    const timeScale = globals.timeScale === 1 ? 1 : K;\n\n    /** @type {DOMTargetsArray}] */\n    this.targets = parsedTargets;\n    /** @type {Array<globalThis.Animation>}] */\n    this.animations = [];\n    /** @type {globalThis.Animation}] */\n    this.controlAnimation = null;\n    /** @type {Callback<this>} */\n    this.onComplete = params.onComplete || noop;\n    /** @type {Number} */\n    this.duration = 0;\n    /** @type {Boolean} */\n    this.muteCallbacks = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.paused = !autoplay || scroll !== false;\n    /** @type {Boolean} */\n    this.reversed = reversed;\n    /** @type {Boolean|ScrollObserver} */\n    this.autoplay = autoplay;\n    /** @type {Number} */\n    this._speed = setValue(params.playbackRate, globals.defaults.playbackRate);\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Number} */\n    this._completed = 0;\n    /** @type {Array<Object>}] */\n    this._inlineStyles = parsedTargets.map($el => $el.getAttribute('style'));\n    parsedTargets.forEach(($el, i) => {\n      const cachedTransforms = $el[transformsSymbol];\n      const hasIndividualTransforms = validIndividualTransforms.some(t => params.hasOwnProperty(t));\n\n      /** @type {Number} */\n      const duration = (spring ? /** @type {Spring} */spring.duration : getFunctionValue(setValue(params.duration, globals.defaults.duration), $el, i, targetsLength)) * timeScale;\n      /** @type {Number} */\n      const delay = getFunctionValue(setValue(params.delay, globals.defaults.delay), $el, i, targetsLength) * timeScale;\n      /** @type {CompositeOperation} */\n      const composite = /** @type {CompositeOperation} */setValue(params.composition, 'replace');\n      for (let name in params) {\n        if (!isKey(name)) continue;\n        /** @type {PropertyIndexedKeyframes} */\n        const keyframes = {};\n        /** @type {KeyframeAnimationOptions} */\n        const tweenParams = {\n          iterations,\n          direction,\n          fill,\n          easing,\n          duration,\n          delay,\n          composite\n        };\n        const propertyValue = params[name];\n        const individualTransformProperty = hasIndividualTransforms ? validTransforms.includes(name) ? name : shortTransforms.get(name) : false;\n        let parsedPropertyValue;\n        if (isObj(propertyValue)) {\n          const tweenOptions = /** @type {WAAPITweenOptions} */propertyValue;\n          const tweenOptionsEase = setValue(tweenOptions.ease, ease);\n          const tweenOptionsSpring = /** @type {Spring} */tweenOptionsEase.ease && tweenOptionsEase;\n          const to = /** @type {WAAPITweenOptions} */tweenOptions.to;\n          const from = /** @type {WAAPITweenOptions} */tweenOptions.from;\n          /** @type {Number} */\n          tweenParams.duration = (tweenOptionsSpring ? /** @type {Spring} */tweenOptionsSpring.duration : getFunctionValue(setValue(tweenOptions.duration, duration), $el, i, targetsLength)) * timeScale;\n          /** @type {Number} */\n          tweenParams.delay = getFunctionValue(setValue(tweenOptions.delay, delay), $el, i, targetsLength) * timeScale;\n          /** @type {CompositeOperation} */\n          tweenParams.composite = /** @type {CompositeOperation} */setValue(tweenOptions.composition, composite);\n          /** @type {String} */\n          tweenParams.easing = parseWAAPIEasing(tweenOptionsEase);\n          parsedPropertyValue = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n          if (!isUnd(from)) {\n            if (!individualTransformProperty) {\n              $el.style[name] = keyframes[name][0];\n            } else {\n              const key = `--${individualTransformProperty}`;\n              $el.style.setProperty(key, keyframes[key][0]);\n            }\n          }\n        } else {\n          parsedPropertyValue = isArr(propertyValue) ? propertyValue.map((/** @type {any} */v) => normalizeTweenValue(name, v, $el, i, targetsLength)) : normalizeTweenValue(name, /** @type {any} */propertyValue, $el, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parsedPropertyValue;\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n        }\n      }\n      if (hasIndividualTransforms) {\n        let transforms = emptyString;\n        for (let t in cachedTransforms) {\n          transforms += `${transformsFragmentStrings[t]}var(--${t})) `;\n        }\n        $el.style.transform = transforms;\n      }\n    });\n    if (scroll) {\n      /** @type {ScrollObserver} */this.autoplay.link(this);\n    }\n  }\n\n  /**\n   * @callback forEachCallback\n   * @param {globalThis.Animation} animation\n   */\n\n  /**\n   * @param  {forEachCallback|String} callback\n   * @return {this}\n   */\n  forEach(callback) {\n    const cb = isStr(callback) ? a => a[callback]() : callback;\n    this.animations.forEach(cb);\n    return this;\n  }\n  get speed() {\n    return this._speed;\n  }\n\n  /** @param {Number} speed */\n  set speed(speed) {\n    this._speed = +speed;\n    this.forEach(anim => anim.playbackRate = speed);\n  }\n  get currentTime() {\n    const controlAnimation = this.controlAnimation;\n    const timeScale = globals.timeScale;\n    return this.completed ? this.duration : controlAnimation ? +controlAnimation.currentTime * (timeScale === 1 ? 1 : timeScale) : 0;\n  }\n\n  /** @param {Number} time */\n  set currentTime(time) {\n    const t = time * (globals.timeScale === 1 ? 1 : K);\n    this.forEach(anim => {\n      // Make sure the animation playState is not 'paused' in order to properly trigger an onfinish callback.\n      // The \"paused\" play state supersedes the \"finished\" play state; if the animation is both paused and finished, the \"paused\" state is the one that will be reported.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Animation/finish_event\n      if (t >= this.duration) anim.play();\n      anim.currentTime = t;\n    });\n  }\n  get progress() {\n    return this.currentTime / this.duration;\n  }\n\n  /** @param {Number} progress */\n  set progress(progress) {\n    this.forEach(anim => anim.currentTime = progress * this.duration || 0);\n  }\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // TODO: Store the current time, and seek back to the last position\n    return this.forEach('play');\n  }\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    return this.forEach('pause');\n  }\n  alternate() {\n    this.reversed = !this.reversed;\n    this.forEach('reverse');\n    if (this.paused) this.forEach('pause');\n    return this;\n  }\n  play() {\n    if (this.reversed) this.alternate();\n    return this.resume();\n  }\n  reverse() {\n    if (!this.reversed) this.alternate();\n    return this.resume();\n  }\n\n  /**\n   * @param {Number} time\n   * @param {Boolean} muteCallbacks\n   */\n  seek(time, muteCallbacks = false) {\n    if (muteCallbacks) this.muteCallbacks = true;\n    if (time < this.duration) this.completed = false;\n    this.currentTime = time;\n    this.muteCallbacks = false;\n    if (this.paused) this.pause();\n    return this;\n  }\n  restart() {\n    this.completed = false;\n    return this.seek(0, true).resume();\n  }\n  commitStyles() {\n    return this.forEach('commitStyles');\n  }\n  complete() {\n    return this.seek(this.duration);\n  }\n  cancel() {\n    this.forEach('cancel');\n    return this.pause();\n  }\n  revert() {\n    this.cancel();\n    this.targets.forEach(($el, i) => $el.setAttribute('style', this._inlineStyles[i]));\n    return this;\n  }\n\n  /**\n   * @param  {WAAPICallback} [callback]\n   * @return {Promise}\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      this.then = null;\n      callback(this);\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n}\nconst waapi = {\n  /**\n   * @param {DOMTargetsParam} targets\n   * @param {WAAPIAnimationParams} params\n   * @return {WAAPIAnimation}\n   */\n  animate: (targets, params) => new WAAPIAnimation(targets, params),\n  convertEase: easingToLinear\n};\n\n/**\n * @param  {Callback<Timer>} [callback]\n * @return {Timer}\n */\nconst sync = (callback = noop) => {\n  return new Timer({\n    duration: 1 * globals.timeScale,\n    onComplete: callback\n  }, null, 0).resume();\n};\n\n/**\n * @overload\n * @param  {DOMTargetSelector} targetSelector\n * @param  {String}            propName\n * @return {String}\n *\n * @overload\n * @param  {JSTargetsParam} targetSelector\n * @param  {String}         propName\n * @return {Number|String}\n *\n * @overload\n * @param  {DOMTargetsParam} targetSelector\n * @param  {String}          propName\n * @param  {String}          unit\n * @return {String}\n *\n * @overload\n * @param  {TargetsParam} targetSelector\n * @param  {String}       propName\n * @param  {Boolean}      unit\n * @return {Number}\n *\n * @param  {TargetsParam}   targetSelector\n * @param  {String}         propName\n * @param  {String|Boolean} [unit]\n */\nfunction getTargetValue(targetSelector, propName, unit) {\n  const targets = registerTargets(targetSelector);\n  if (!targets.length) return;\n  const [target] = targets;\n  const tweenType = getTweenType(target, propName);\n  const normalizePropName = sanitizePropertyName(propName, target, tweenType);\n  let originalValue = getOriginalAnimatableValue(target, normalizePropName);\n  if (isUnd(unit)) {\n    return originalValue;\n  } else {\n    decomposeRawValue(originalValue, decomposedOriginalValue);\n    if (decomposedOriginalValue.t === valueTypes.NUMBER || decomposedOriginalValue.t === valueTypes.UNIT) {\n      if (unit === false) {\n        return decomposedOriginalValue.n;\n      } else {\n        const convertedValue = convertValueUnit(/** @type {DOMTarget} */target, decomposedOriginalValue, /** @type {String} */unit, false);\n        return `${round(convertedValue.n, globals.precision)}${convertedValue.u}`;\n      }\n    }\n  }\n}\n\n/**\n * @param  {TargetsParam}    targets\n * @param  {AnimationParams} parameters\n * @return {JSAnimation}\n */\nconst setTargetValues = (targets, parameters) => {\n  if (isUnd(parameters)) return;\n  parameters.duration = minValue;\n  // Do not overrides currently active tweens by default\n  parameters.composition = setValue(parameters.composition, compositionTypes.none);\n  // Skip init() and force rendering by playing the animation\n  return new JSAnimation(targets, parameters, null, 0, true).resume();\n};\n\n/**\n * @param  {TargetsArray} targetsArray\n * @param  {JSAnimation}    animation\n * @param  {String}       [propertyName]\n * @return {Boolean}\n */\nconst removeTargetsFromAnimation = (targetsArray, animation, propertyName) => {\n  let tweensMatchesTargets = false;\n  forEachChildren(animation, (/**@type {Tween} */tween) => {\n    const tweenTarget = tween.target;\n    if (targetsArray.includes(tweenTarget)) {\n      const tweenName = tween.property;\n      const tweenType = tween._tweenType;\n      const normalizePropName = sanitizePropertyName(propertyName, tweenTarget, tweenType);\n      if (!normalizePropName || normalizePropName && normalizePropName === tweenName) {\n        // Make sure to flag the previous CSS transform tween to renderTransform\n        if (tween.parent._tail === tween && tween._tweenType === tweenTypes.TRANSFORM && tween._prev && tween._prev._tweenType === tweenTypes.TRANSFORM) {\n          tween._prev._renderTransforms = 1;\n        }\n        // Removes the tween from the selected animation\n        removeChild(animation, tween);\n        // Detach the tween from its siblings to make sure blended tweens are correctlly removed\n        removeTweenSliblings(tween);\n        tweensMatchesTargets = true;\n      }\n    }\n  }, true);\n  return tweensMatchesTargets;\n};\n\n/**\n * @param  {TargetsParam} targets\n * @param  {Renderable|WAAPIAnimation} [renderable]\n * @param  {String}                    [propertyName]\n * @return {TargetsArray}\n */\nconst remove = (targets, renderable, propertyName) => {\n  const targetsArray = parseTargets(targets);\n  const parent = /** @type {Renderable|typeof engine} **/renderable ? renderable : engine;\n  const waapiAnimation = renderable && /** @type {WAAPIAnimation} */renderable.controlAnimation && (/** @type {WAAPIAnimation} */renderable);\n  for (let i = 0, l = targetsArray.length; i < l; i++) {\n    const $el = /** @type {DOMTarget}  */targetsArray[i];\n    removeWAAPIAnimation($el, propertyName, waapiAnimation);\n  }\n  let removeMatches;\n  if (parent._hasChildren) {\n    let iterationDuration = 0;\n    forEachChildren(parent, (/** @type {Renderable} */child) => {\n      if (!child._hasChildren) {\n        removeMatches = removeTargetsFromAnimation(targetsArray, /** @type {JSAnimation} */child, propertyName);\n        // Remove the child from its parent if no tweens and no children left after the removal\n        if (removeMatches && !child._head) {\n          child.cancel();\n          removeChild(parent, child);\n        } else {\n          // Calculate the new iterationDuration value to handle onComplete with last child in render()\n          const childTLOffset = child._offset + child._delay;\n          const childDur = childTLOffset + child.duration;\n          if (childDur > iterationDuration) {\n            iterationDuration = childDur;\n          }\n        }\n      }\n      // Make sure to also remove engine's children targets\n      // NOTE: Avoid recursion?\n      if (child._head) {\n        remove(targets, child, propertyName);\n      } else {\n        child._hasChildren = false;\n      }\n    }, true);\n    // Update iterationDuration value to handle onComplete with last child in render()\n    if (!isUnd(/** @type {Renderable} */parent.iterationDuration)) {\n      /** @type {Renderable} */parent.iterationDuration = iterationDuration;\n    }\n  } else {\n    removeMatches = removeTargetsFromAnimation(targetsArray, /** @type {JSAnimation} */parent, propertyName);\n  }\n  if (removeMatches && !parent._head) {\n    parent._hasChildren = false;\n    // Cancel the parent if there are no tweens and no children left after the removal\n    // We have to check if the .cancel() method exist to handle cases where the parent is the engine itself\n    if (/** @type {Renderable} */parent.cancel) /** @type {Renderable} */parent.cancel();\n  }\n  return targetsArray;\n};\n\n/**\n * @param  {Number} min\n * @param  {Number} max\n * @param  {Number} [decimalLength]\n * @return {Number}\n */\nconst random = (min, max, decimalLength) => {\n  const m = 10 ** (decimalLength || 0);\n  return floor((Math.random() * (max - min + 1 / m) + min) * m) / m;\n};\n\n/**\n * @param  {String|Array} items\n * @return {any}\n */\nconst randomPick = items => items[random(0, items.length - 1)];\n\n/**\n * Adapted from https://bost.ocks.org/mike/shuffle/\n * @param  {Array} items\n * @return {Array}\n */\nconst shuffle = items => {\n  let m = items.length,\n    t,\n    i;\n  while (m) {\n    i = random(0, --m);\n    t = items[m];\n    items[m] = items[i];\n    items[i] = t;\n  }\n  return items;\n};\n\n/**\n * @param  {Number|String} v\n * @param  {Number} decimalLength\n * @return {String}\n */\nconst roundPad = (v, decimalLength) => (+v).toFixed(decimalLength);\n\n/**\n * @param  {Number} v\n * @param  {Number} totalLength\n * @param  {String} padString\n * @return {String}\n */\nconst padStart = (v, totalLength, padString) => `${v}`.padStart(totalLength, padString);\n\n/**\n * @param  {Number} v\n * @param  {Number} totalLength\n * @param  {String} padString\n * @return {String}\n */\nconst padEnd = (v, totalLength, padString) => `${v}`.padEnd(totalLength, padString);\n\n/**\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nconst wrap = (v, min, max) => ((v - min) % (max - min) + (max - min)) % (max - min) + min;\n\n/**\n * @param  {Number} value\n * @param  {Number} inLow\n * @param  {Number} inHigh\n * @param  {Number} outLow\n * @param  {Number} outHigh\n * @return {Number}\n */\nconst mapRange = (value, inLow, inHigh, outLow, outHigh) => outLow + (value - inLow) / (inHigh - inLow) * (outHigh - outLow);\n\n/**\n * @param  {Number} degrees\n * @return {Number}\n */\nconst degToRad = degrees => degrees * PI / 180;\n\n/**\n * @param  {Number} radians\n * @return {Number}\n */\nconst radToDeg = radians => radians * 180 / PI;\n\n/**\n * https://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n * @param  {Number} start\n * @param  {Number} end\n * @param  {Number} amount\n * @param  {Renderable|Boolean} [renderable]\n * @return {Number}\n */\nconst lerp = (start, end, amount, renderable) => {\n  let dt = K / globals.defaults.frameRate;\n  if (renderable !== false) {\n    const ticker = /** @type Renderable */\n    renderable || engine._hasChildren && engine;\n    if (ticker && ticker.deltaTime) {\n      dt = ticker.deltaTime;\n    }\n  }\n  const t = 1 - Math.exp(-amount * dt * .1);\n  return !amount ? start : amount === 1 ? end : (1 - t) * start + t * end;\n};\n\n// Chain-able utilities\n\n/**\n * @callback UtilityFunction\n * @param {...*} args\n * @return {Number|String}\n *\n * @param {UtilityFunction} fn\n * @param {Number} [last=0]\n * @return {function(...(Number|String)): function(Number|String): (Number|String)}\n */\nconst curry = (fn, last = 0) => (...args) => last ? v => fn(...args, v) : v => fn(v, ...args);\n\n/**\n * @param {Function} fn\n * @return {function(...(Number|String))}\n */\nconst chain = fn => {\n  return (...args) => {\n    const result = fn(...args);\n    return new Proxy(noop, {\n      apply: (_, __, [v]) => result(v),\n      get: (_, prop) => chain(/**@param {...Number|String} nextArgs */(...nextArgs) => {\n        const nextResult = utils[prop](...nextArgs);\n        return (/**@type {Number|String} */v) => nextResult(result(v));\n      })\n    });\n  };\n};\n\n/**\n * @param {UtilityFunction} fn\n * @param {Number} [right]\n * @return {function(...(Number|String)): UtilityFunction}\n */\nconst makeChainable = (fn, right = 0) => (...args) => (args.length < fn.length ? chain(curry(fn, right)) : fn)(...args);\n\n/**\n * @callback ChainedUtilsResult\n * @param {Number} value\n * @return {Number}\n *\n * @typedef {Object} ChainableUtils\n * @property {ChainedClamp} clamp\n * @property {ChainedRound} round\n * @property {ChainedSnap} snap\n * @property {ChainedWrap} wrap\n * @property {ChainedInterpolate} interpolate\n * @property {ChainedMapRange} mapRange\n * @property {ChainedRoundPad} roundPad\n * @property {ChainedPadStart} padStart\n * @property {ChainedPadEnd} padEnd\n * @property {ChainedDegToRad} degToRad\n * @property {ChainedRadToDeg} radToDeg\n *\n * @typedef {ChainableUtils & ChainedUtilsResult} ChainableUtil\n *\n * @callback ChainedClamp\n * @param {Number} min\n * @param {Number} max\n * @return {ChainableUtil}\n *\n * @callback ChainedRound\n * @param {Number} decimalLength\n * @return {ChainableUtil}\n *\n * @callback ChainedSnap\n * @param {Number} increment\n * @return {ChainableUtil}\n *\n * @callback ChainedWrap\n * @param {Number} min\n * @param {Number} max\n * @return {ChainableUtil}\n *\n * @callback ChainedInterpolate\n * @param {Number} start\n * @param {Number} end\n * @return {ChainableUtil}\n *\n * @callback ChainedMapRange\n * @param {Number} inLow\n * @param {Number} inHigh\n * @param {Number} outLow\n * @param {Number} outHigh\n * @return {ChainableUtil}\n *\n * @callback ChainedRoundPad\n * @param {Number} decimalLength\n * @return {ChainableUtil}\n *\n * @callback ChainedPadStart\n * @param {Number} totalLength\n * @param {String} padString\n * @return {ChainableUtil}\n *\n * @callback ChainedPadEnd\n * @param {Number} totalLength\n * @param {String} padString\n * @return {ChainableUtil}\n *\n * @callback ChainedDegToRad\n * @return {ChainableUtil}\n *\n * @callback ChainedRadToDeg\n * @return {ChainableUtil}\n */\n\nconst utils = {\n  $: registerTargets,\n  get: getTargetValue,\n  set: setTargetValues,\n  remove,\n  cleanInlineStyles,\n  random,\n  randomPick,\n  shuffle,\n  lerp,\n  sync,\n  clamp: (/** @type {typeof clamp & ChainedClamp} */makeChainable(clamp)),\n  round: (/** @type {typeof round & ChainedRound} */makeChainable(round)),\n  snap: (/** @type {typeof snap & ChainedSnap} */makeChainable(snap)),\n  wrap: (/** @type {typeof wrap & ChainedWrap} */makeChainable(wrap)),\n  interpolate: (/** @type {typeof interpolate & ChainedInterpolate} */makeChainable(interpolate, 1)),\n  mapRange: (/** @type {typeof mapRange & ChainedMapRange} */makeChainable(mapRange)),\n  roundPad: (/** @type {typeof roundPad & ChainedRoundPad} */makeChainable(roundPad)),\n  padStart: (/** @type {typeof padStart & ChainedPadStart} */makeChainable(padStart)),\n  padEnd: (/** @type {typeof padEnd & ChainedPadEnd} */makeChainable(padEnd)),\n  degToRad: (/** @type {typeof degToRad & ChainedDegToRad} */makeChainable(degToRad)),\n  radToDeg: (/** @type {typeof radToDeg & ChainedRadToDeg} */makeChainable(radToDeg))\n};\n\n/**\n * @typedef {Number|String|Function} TimePosition\n */\n\n/**\n * Timeline's children offsets positions parser\n * @param  {Timeline} timeline\n * @param  {String} timePosition\n * @return {Number}\n */\nconst getPrevChildOffset = (timeline, timePosition) => {\n  if (stringStartsWith(timePosition, '<')) {\n    const goToPrevAnimationOffset = timePosition[1] === '<';\n    const prevAnimation = /** @type {Tickable} */timeline._tail;\n    const prevOffset = prevAnimation ? prevAnimation._offset + prevAnimation._delay : 0;\n    return goToPrevAnimationOffset ? prevOffset : prevOffset + prevAnimation.duration;\n  }\n};\n\n/**\n * @param  {Timeline} timeline\n * @param  {TimePosition} [timePosition]\n * @return {Number}\n */\nconst parseTimelinePosition = (timeline, timePosition) => {\n  let tlDuration = timeline.iterationDuration;\n  if (tlDuration === minValue) tlDuration = 0;\n  if (isUnd(timePosition)) return tlDuration;\n  if (isNum(+timePosition)) return +timePosition;\n  const timePosStr = /** @type {String} */timePosition;\n  const tlLabels = timeline ? timeline.labels : null;\n  const hasLabels = !isNil(tlLabels);\n  const prevOffset = getPrevChildOffset(timeline, timePosStr);\n  const hasSibling = !isUnd(prevOffset);\n  const matchedRelativeOperator = relativeValuesExecRgx.exec(timePosStr);\n  if (matchedRelativeOperator) {\n    const fullOperator = matchedRelativeOperator[0];\n    const split = timePosStr.split(fullOperator);\n    const labelOffset = hasLabels && split[0] ? tlLabels[split[0]] : tlDuration;\n    const parsedOffset = hasSibling ? prevOffset : hasLabels ? labelOffset : tlDuration;\n    const parsedNumericalOffset = +split[1];\n    return getRelativeValue(parsedOffset, parsedNumericalOffset, fullOperator[0]);\n  } else {\n    return hasSibling ? prevOffset : hasLabels ? !isUnd(tlLabels[timePosStr]) ? tlLabels[timePosStr] : tlDuration : tlDuration;\n  }\n};\n\n/**\n * @param {Timeline} tl\n * @return {Number}\n */\nfunction getTimelineTotalDuration(tl) {\n  return clampInfinity((tl.iterationDuration + tl._loopDelay) * tl.iterationCount - tl._loopDelay) || minValue;\n}\n\n/**\n * @overload\n * @param  {TimerParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @return {Timeline}\n *\n * @overload\n * @param  {AnimationParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @param  {TargetsParam} targets\n * @param  {Number} [index]\n * @param  {Number} [length]\n * @return {Timeline}\n *\n * @param  {TimerParams|AnimationParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @param  {TargetsParam} [targets]\n * @param  {Number} [index]\n * @param  {Number} [length]\n */\nfunction addTlChild(childParams, tl, timePosition, targets, index, length) {\n  const isSetter = isNum(childParams.duration) && /** @type {Number} */childParams.duration <= minValue;\n  // Offset the tl position with -minValue for 0 duration animations or .set() calls in order to align their end value with the defined position\n  const adjustedPosition = isSetter ? timePosition - minValue : timePosition;\n  tick(tl, adjustedPosition, 1, 1, tickModes.AUTO);\n  const tlChild = targets ? new JSAnimation(targets, /** @type {AnimationParams} */childParams, tl, adjustedPosition, false, index, length) : new Timer(/** @type {TimerParams} */childParams, tl, adjustedPosition);\n  tlChild.init(1);\n  // TODO: Might be better to insert at a position relative to startTime?\n  addChild(tl, tlChild);\n  forEachChildren(tl, (/** @type {Renderable} */child) => {\n    const childTLOffset = child._offset + child._delay;\n    const childDur = childTLOffset + child.duration;\n    if (childDur > tl.iterationDuration) tl.iterationDuration = childDur;\n  });\n  tl.duration = getTimelineTotalDuration(tl);\n  return tl;\n}\nclass Timeline extends Timer {\n  /**\n   * @param {TimelineParams} [parameters]\n   */\n  constructor(parameters = {}) {\n    super(/** @type {TimerParams&TimelineParams} */parameters, null, 0);\n    /** @type {Number} */\n    this.duration = 0; // TL duration starts at 0 and grows when adding children\n    /** @type {Record<String, Number>} */\n    this.labels = {};\n    const defaultsParams = parameters.defaults;\n    const globalDefaults = globals.defaults;\n    /** @type {DefaultsParams} */\n    this.defaults = defaultsParams ? mergeObjects(defaultsParams, globalDefaults) : globalDefaults;\n    /** @type {Callback<this>} */\n    this.onRender = parameters.onRender || globalDefaults.onRender;\n    const tlPlaybackEase = setValue(parameters.playbackEase, globalDefaults.playbackEase);\n    this._ease = tlPlaybackEase ? parseEasings(tlPlaybackEase) : null;\n    /** @type {Number} */\n    this.iterationDuration = 0;\n  }\n\n  /**\n   * @overload\n   * @param {TargetsParam} a1\n   * @param {AnimationParams} a2\n   * @param {TimePosition} [a3]\n   * @return {this}\n   *\n   * @overload\n   * @param {TimerParams} a1\n   * @param {TimePosition} [a2]\n   * @return {this}\n   *\n   * @param {TargetsParam|TimerParams} a1\n   * @param {AnimationParams|TimePosition} a2\n   * @param {TimePosition} [a3]\n   */\n  add(a1, a2, a3) {\n    const isAnim = isObj(a2);\n    const isTimer = isObj(a1);\n    if (isAnim || isTimer) {\n      this._hasChildren = true;\n      if (isAnim) {\n        const childParams = /** @type {AnimationParams} */a2;\n        // Check for function for children stagger positions\n        if (isFnc(a3)) {\n          const staggeredPosition = /** @type {Function} */a3;\n          const parsedTargetsArray = parseTargets(/** @type {TargetsParam} */a1);\n          // Store initial duration before adding new children that will change the duration\n          const tlDuration = this.duration;\n          // Store initial _iterationDuration before adding new children that will change the duration\n          const tlIterationDuration = this.iterationDuration;\n          // Store the original id in order to add specific indexes to the new animations ids\n          const id = childParams.id;\n          let i = 0;\n          const parsedLength = parsedTargetsArray.length;\n          parsedTargetsArray.forEach((/** @type {Target} */target) => {\n            // Create a new parameter object for each staggered children\n            const staggeredChildParams = {\n              ...childParams\n            };\n            // Reset the duration of the timeline iteration before each stagger to prevent wrong start value calculation\n            this.duration = tlDuration;\n            this.iterationDuration = tlIterationDuration;\n            if (!isUnd(id)) staggeredChildParams.id = id + '-' + i;\n            addTlChild(staggeredChildParams, this, staggeredPosition(target, i, parsedLength, this), target, i, parsedLength);\n            i++;\n          });\n        } else {\n          addTlChild(childParams, this, parseTimelinePosition(this, a3), /** @type {TargetsParam} */a1);\n        }\n      } else {\n        // It's a Timer\n        addTlChild(/** @type TimerParams */a1, this, parseTimelinePosition(this, /** @type TimePosition */a2));\n      }\n      return this.init(1); // 1 = internalRender\n    }\n  }\n\n  /**\n   * @overload\n   * @param {Tickable} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @overload\n   * @param {globalThis.Animation} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @overload\n   * @param {WAAPIAnimation} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @param {Tickable|WAAPIAnimation|globalThis.Animation} [synced]\n   * @param {TimePosition} [position]\n   */\n  sync(synced, position) {\n    if (isUnd(synced) || synced && isUnd(synced.pause)) return this;\n    synced.pause();\n    const duration = +(/** @type {globalThis.Animation} */synced.effect ? /** @type {globalThis.Animation} */synced.effect.getTiming().duration : /** @type {Tickable} */synced.duration);\n    return this.add(synced, {\n      currentTime: [0, duration],\n      duration,\n      ease: 'linear'\n    }, position);\n  }\n\n  /**\n   * @param  {TargetsParam} targets\n   * @param  {AnimationParams} parameters\n   * @param  {TimePosition} [position]\n   * @return {this}\n   */\n  set(targets, parameters, position) {\n    if (isUnd(parameters)) return this;\n    parameters.duration = minValue;\n    parameters.composition = compositionTypes.replace;\n    return this.add(targets, parameters, position);\n  }\n\n  /**\n   * @param {Callback<Timer>} callback\n   * @param {TimePosition} [position]\n   * @return {this}\n   */\n  call(callback, position) {\n    if (isUnd(callback) || callback && !isFnc(callback)) return this;\n    return this.add({\n      duration: 0,\n      onComplete: () => callback(this)\n    }, position);\n  }\n\n  /**\n   * @param {String} labelName\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   */\n  label(labelName, position) {\n    if (isUnd(labelName) || labelName && !isStr(labelName)) return this;\n    this.labels[labelName] = parseTimelinePosition(this, /** @type TimePosition */position);\n    return this;\n  }\n\n  /**\n   * @param  {TargetsParam} targets\n   * @param  {String} [propertyName]\n   * @return {this}\n   */\n  remove(targets, propertyName) {\n    remove(targets, this, propertyName);\n    return this;\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    if (currentDuration === normalizeTime(newDuration)) return this;\n    const timeScale = newDuration / currentDuration;\n    const labels = this.labels;\n    forEachChildren(this, (/** @type {JSAnimation} */child) => child.stretch(child.duration * timeScale));\n    for (let labelName in labels) labels[labelName] *= timeScale;\n    return super.stretch(newDuration);\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    forEachChildren(this, (/** @type {JSAnimation} */child) => {\n      if (child.refresh) child.refresh();\n    });\n    return this;\n  }\n\n  /**\n   * @return {this}\n   */\n  revert() {\n    super.revert();\n    forEachChildren(this, (/** @type {JSAnimation} */child) => child.revert, true);\n    return cleanInlineStyles(this);\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback) {\n    return super.then(callback);\n  }\n}\n\n/**\n * @param {TimelineParams} [parameters]\n * @return {Timeline}\n */\nconst createTimeline = parameters => new Timeline(parameters).init();\nclass Animatable {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimatableParams} parameters\n   */\n  constructor(targets, parameters) {\n    if (globals.scope) globals.scope.revertibles.push(this);\n    /** @type {AnimationParams} */\n    const globalParams = {};\n    const properties = {};\n    this.targets = [];\n    this.animations = {};\n    if (isUnd(targets) || isUnd(parameters)) return;\n    for (let propName in parameters) {\n      const paramValue = parameters[propName];\n      if (isKey(propName)) {\n        properties[propName] = paramValue;\n      } else {\n        globalParams[propName] = paramValue;\n      }\n    }\n    for (let propName in properties) {\n      const propValue = properties[propName];\n      const isObjValue = isObj(propValue);\n      /** @type {TweenParamsOptions} */\n      let propParams = {};\n      let to = '+=0';\n      if (isObjValue) {\n        const unit = propValue.unit;\n        if (isStr(unit)) to += unit;\n      } else {\n        propParams.duration = propValue;\n      }\n      propParams[propName] = isObjValue ? mergeObjects({\n        to\n      }, propValue) : to;\n      const animParams = mergeObjects(globalParams, propParams);\n      animParams.composition = compositionTypes.replace;\n      animParams.autoplay = false;\n      const animation = this.animations[propName] = new JSAnimation(targets, animParams, null, 0, false).init();\n      if (!this.targets.length) this.targets.push(...animation.targets);\n      /** @type {AnimatableProperty} */\n      this[propName] = (to, duration, ease) => {\n        const tween = /** @type {Tween} */animation._head;\n        if (isUnd(to) && tween) {\n          const numbers = tween._numbers;\n          if (numbers && numbers.length) {\n            return numbers;\n          } else {\n            return tween._modifier(tween._number);\n          }\n        } else {\n          forEachChildren(animation, (/** @type {Tween} */tween) => {\n            if (isArr(to)) {\n              for (let i = 0, l = /** @type {Array} */to.length; i < l; i++) {\n                if (!isUnd(tween._numbers[i])) {\n                  tween._fromNumbers[i] = /** @type {Number} */tween._modifier(tween._numbers[i]);\n                  tween._toNumbers[i] = to[i];\n                }\n              }\n            } else {\n              tween._fromNumber = /** @type {Number} */tween._modifier(tween._number);\n              tween._toNumber = /** @type {Number} */to;\n            }\n            if (!isUnd(ease)) tween._ease = parseEasings(ease);\n            tween._currentTime = 0;\n          });\n          if (!isUnd(duration)) animation.stretch(duration);\n          animation.reset(1).resume();\n          return this;\n        }\n      };\n    }\n  }\n  revert() {\n    for (let propName in this.animations) {\n      this[propName] = noop;\n      this.animations[propName].revert();\n    }\n    this.animations = {};\n    this.targets.length = 0;\n    return this;\n  }\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimatableParams} parameters\n * @return {AnimatableObject}\n */\nconst createAnimatable = (targets, parameters) => (/** @type {AnimatableObject} */new Animatable(targets, parameters));\n\n/*\n * Spring ease solver adapted from https://webkit.org/demos/spring/spring.js\n * Webkit Copyright © 2016 Apple Inc\n */\n\n/**\n * @typedef {Object} SpringParams\n * @property {Number} [mass=1] - Mass, default 1\n * @property {Number} [stiffness=100] - Stiffness, default 100\n * @property {Number} [damping=10] - Damping, default 10\n * @property {Number} [velocity=0] - Initial velocity, default 0\n */\n\nclass Spring {\n  /**\n   * @param {SpringParams} [parameters]\n   */\n  constructor(parameters = {}) {\n    this.timeStep = .02; // Interval fed to the solver to calculate duration\n    this.restThreshold = .0005; // Values below this threshold are considered resting position\n    this.restDuration = 200; // Duration in ms used to check if the spring is resting after reaching restThreshold\n    this.maxDuration = 60000; // The maximum allowed spring duration in ms (default 1 min)\n    this.maxRestSteps = this.restDuration / this.timeStep / K; // How many steps allowed after reaching restThreshold before stopping the duration calculation\n    this.maxIterations = this.maxDuration / this.timeStep / K; // Calculate the maximum iterations allowed based on maxDuration\n    this.m = clamp(setValue(parameters.mass, 1), 0, K);\n    this.s = clamp(setValue(parameters.stiffness, 100), 1, K);\n    this.d = clamp(setValue(parameters.damping, 10), .1, K);\n    this.v = clamp(setValue(parameters.velocity, 0), -1e3, K);\n    this.w0 = 0;\n    this.zeta = 0;\n    this.wd = 0;\n    this.b = 0;\n    this.solverDuration = 0;\n    this.duration = 0;\n    this.compute();\n    /** @type {EasingFunction} */\n    this.ease = t => t === 0 || t === 1 ? t : this.solve(t * this.solverDuration);\n  }\n\n  /** @type {EasingFunction} */\n  solve(time) {\n    const {\n      zeta,\n      w0,\n      wd,\n      b\n    } = this;\n    let t = time;\n    if (zeta < 1) {\n      t = exp(-t * zeta * w0) * (1 * cos(wd * t) + b * sin(wd * t));\n    } else {\n      t = (1 + b * t) * exp(-t * w0);\n    }\n    return 1 - t;\n  }\n  compute() {\n    const {\n      maxRestSteps,\n      maxIterations,\n      restThreshold,\n      timeStep,\n      m,\n      d,\n      s,\n      v\n    } = this;\n    const w0 = this.w0 = clamp(sqrt(s / m), minValue, K);\n    const zeta = this.zeta = d / (2 * sqrt(s * m));\n    const wd = this.wd = zeta < 1 ? w0 * sqrt(1 - zeta * zeta) : 0;\n    this.b = zeta < 1 ? (zeta * w0 + -v) / wd : -v + w0;\n    let solverTime = 0;\n    let restSteps = 0;\n    let iterations = 0;\n    while (restSteps < maxRestSteps && iterations < maxIterations) {\n      if (abs(1 - this.solve(solverTime)) < restThreshold) {\n        restSteps++;\n      } else {\n        restSteps = 0;\n      }\n      this.solverDuration = solverTime;\n      solverTime += timeStep;\n      iterations++;\n    }\n    this.duration = round(this.solverDuration * K, 0) * globals.timeScale;\n  }\n  get mass() {\n    return this.m;\n  }\n  set mass(v) {\n    this.m = clamp(setValue(v, 1), 0, K);\n    this.compute();\n  }\n  get stiffness() {\n    return this.s;\n  }\n  set stiffness(v) {\n    this.s = clamp(setValue(v, 100), 1, K);\n    this.compute();\n  }\n  get damping() {\n    return this.d;\n  }\n  set damping(v) {\n    this.d = clamp(setValue(v, 10), .1, K);\n    this.compute();\n  }\n  get velocity() {\n    return this.v;\n  }\n  set velocity(v) {\n    this.v = clamp(setValue(v, 0), -1e3, K);\n    this.compute();\n  }\n}\n\n/**\n * @param {SpringParams} [parameters]\n * @returns {Spring}\n */\nconst createSpring = parameters => new Spring(parameters);\n\n/**\n * @param {Event} e\n */\nconst preventDefault = e => {\n  if (e.cancelable) e.preventDefault();\n};\nclass DOMProxy {\n  /** @param {Object} el */\n  constructor(el) {\n    this.el = el;\n    this.zIndex = 0;\n    this.parentElement = null;\n    this.classList = {\n      add: noop,\n      remove: noop\n    };\n  }\n  get x() {\n    return this.el.x || 0;\n  }\n  set x(v) {\n    this.el.x = v;\n  }\n  get y() {\n    return this.el.y || 0;\n  }\n  set y(v) {\n    this.el.y = v;\n  }\n  get width() {\n    return this.el.width || 0;\n  }\n  set width(v) {\n    this.el.width = v;\n  }\n  get height() {\n    return this.el.height || 0;\n  }\n  set height(v) {\n    this.el.height = v;\n  }\n  getBoundingClientRect() {\n    return {\n      top: this.y,\n      right: this.x,\n      bottom: this.y + this.height,\n      left: this.x + this.width\n    };\n  }\n}\nclass Transforms {\n  /**\n   * @param {DOMTarget|DOMProxy} $el\n   */\n  constructor($el) {\n    this.$el = $el;\n    this.inlineTransforms = [];\n    this.point = new DOMPoint();\n    this.inversedMatrix = this.getMatrix().inverse();\n  }\n\n  /**\n   * @param {Number} x\n   * @param {Number} y\n   * @return {DOMPoint}\n   */\n  normalizePoint(x, y) {\n    this.point.x = x;\n    this.point.y = y;\n    return this.point.matrixTransform(this.inversedMatrix);\n  }\n\n  /**\n   * @callback TraverseParentsCallback\n   * @param {DOMTarget} $el\n   * @param {Number} i\n   */\n\n  /**\n   * @param {TraverseParentsCallback} cb\n   */\n  traverseUp(cb) {\n    let $el = /** @type {DOMTarget|Document} */this.$el.parentElement,\n      i = 0;\n    while ($el && $el !== doc) {\n      cb(/** @type {DOMTarget} */$el, i);\n      $el = /** @type {DOMTarget} */$el.parentElement;\n      i++;\n    }\n  }\n  getMatrix() {\n    const matrix = new DOMMatrix();\n    this.traverseUp($el => {\n      const transformValue = getComputedStyle($el).transform;\n      if (transformValue) {\n        const elMatrix = new DOMMatrix(transformValue);\n        matrix.preMultiplySelf(elMatrix);\n      }\n    });\n    return matrix;\n  }\n  remove() {\n    this.traverseUp(($el, i) => {\n      this.inlineTransforms[i] = $el.style.transform;\n      $el.style.transform = 'none';\n    });\n  }\n  revert() {\n    this.traverseUp(($el, i) => {\n      const ct = this.inlineTransforms[i];\n      if (ct === '') {\n        $el.style.removeProperty('transform');\n      } else {\n        $el.style.transform = ct;\n      }\n    });\n  }\n}\n\n/**\n * @template {Array<Number>|DOMTargetSelector|String|Number|Boolean|Function|DraggableCursorParams} T\n * @param {T | ((draggable: Draggable) => T)} value\n * @param {Draggable} draggable\n * @return {T}\n */\nconst parseDraggableFunctionParameter = (value, draggable) => value && isFnc(value) ? /** @type {Function} */value(draggable) : value;\nlet zIndex = 0;\nclass Draggable {\n  /**\n   * @param {TargetsParam} target\n   * @param {DraggableParams} [parameters]\n   */\n  constructor(target, parameters = {}) {\n    if (!target) return;\n    if (globals.scope) globals.scope.revertibles.push(this);\n    const paramX = parameters.x;\n    const paramY = parameters.y;\n    const trigger = parameters.trigger;\n    const modifier = parameters.modifier;\n    const ease = parameters.releaseEase;\n    const customEase = ease && parseEasings(ease);\n    const hasSpring = !isUnd(ease) && !isUnd(/** @type {Spring} */ease.ease);\n    const xProp = /** @type {String} */isObj(paramX) && !isUnd(/** @type {Object} */paramX.mapTo) ? /** @type {Object} */paramX.mapTo : 'translateX';\n    const yProp = /** @type {String} */isObj(paramY) && !isUnd(/** @type {Object} */paramY.mapTo) ? /** @type {Object} */paramY.mapTo : 'translateY';\n    const container = parseDraggableFunctionParameter(parameters.container, this);\n    this.containerArray = isArr(container) ? container : null;\n    this.$container = /** @type {HTMLElement} */container && !this.containerArray ? parseTargets(/** @type {DOMTarget} */container)[0] : doc.body;\n    this.useWin = this.$container === doc.body;\n    /** @type {Window | HTMLElement} */\n    this.$scrollContainer = this.useWin ? win : this.$container;\n    this.$target = /** @type {HTMLElement} */isObj(target) ? new DOMProxy(target) : parseTargets(target)[0];\n    this.$trigger = /** @type {HTMLElement} */parseTargets(trigger ? trigger : target)[0];\n    this.fixed = getTargetValue(this.$target, 'position') === 'fixed';\n    // Refreshable parameters\n    this.isFinePointer = true;\n    /** @type {[Number, Number, Number, Number]} */\n    this.containerPadding = [0, 0, 0, 0];\n    /** @type {Number} */\n    this.containerFriction = 0;\n    /** @type {Number} */\n    this.releaseContainerFriction = 0;\n    /** @type {Number|Array<Number>} */\n    this.snapX = 0;\n    /** @type {Number|Array<Number>} */\n    this.snapY = 0;\n    /** @type {Number} */\n    this.scrollSpeed = 0;\n    /** @type {Number} */\n    this.scrollThreshold = 0;\n    /** @type {Number} */\n    this.dragSpeed = 0;\n    /** @type {Number} */\n    this.maxVelocity = 0;\n    /** @type {Number} */\n    this.minVelocity = 0;\n    /** @type {Number} */\n    this.velocityMultiplier = 0;\n    /** @type {Boolean|DraggableCursorParams} */\n    this.cursor = false;\n    /** @type {Spring} */\n    this.releaseXSpring = hasSpring ? (/** @type {Spring} */ease) : createSpring({\n      mass: setValue(parameters.releaseMass, 1),\n      stiffness: setValue(parameters.releaseStiffness, 80),\n      damping: setValue(parameters.releaseDamping, 20)\n    });\n    /** @type {Spring} */\n    this.releaseYSpring = hasSpring ? (/** @type {Spring} */ease) : createSpring({\n      mass: setValue(parameters.releaseMass, 1),\n      stiffness: setValue(parameters.releaseStiffness, 80),\n      damping: setValue(parameters.releaseDamping, 20)\n    });\n    /** @type {EasingFunction} */\n    this.releaseEase = customEase || eases.outQuint;\n    /** @type {Boolean} */\n    this.hasReleaseSpring = hasSpring;\n    /** @type {Callback<this>} */\n    this.onGrab = parameters.onGrab || noop;\n    /** @type {Callback<this>} */\n    this.onDrag = parameters.onDrag || noop;\n    /** @type {Callback<this>} */\n    this.onRelease = parameters.onRelease || noop;\n    /** @type {Callback<this>} */\n    this.onUpdate = parameters.onUpdate || noop;\n    /** @type {Callback<this>} */\n    this.onSettle = parameters.onSettle || noop;\n    /** @type {Callback<this>} */\n    this.onSnap = parameters.onSnap || noop;\n    /** @type {Callback<this>} */\n    this.onResize = parameters.onResize || noop;\n    /** @type {Callback<this>} */\n    this.onAfterResize = parameters.onAfterResize || noop;\n    /** @type {[Number, Number]} */\n    this.disabled = [0, 0];\n    /** @type {AnimatableParams} */\n    const animatableParams = {};\n    if (modifier) animatableParams.modifier = modifier;\n    if (isUnd(paramX) || paramX === true) {\n      animatableParams[xProp] = 0;\n    } else if (isObj(paramX)) {\n      const paramXObject = /** @type {DraggableAxisParam} */paramX;\n      const animatableXParams = {};\n      if (paramXObject.modifier) animatableXParams.modifier = paramXObject.modifier;\n      if (paramXObject.composition) animatableXParams.composition = paramXObject.composition;\n      animatableParams[xProp] = animatableXParams;\n    } else if (paramX === false) {\n      animatableParams[xProp] = 0;\n      this.disabled[0] = 1;\n    }\n    if (isUnd(paramY) || paramY === true) {\n      animatableParams[yProp] = 0;\n    } else if (isObj(paramY)) {\n      const paramYObject = /** @type {DraggableAxisParam} */paramY;\n      const animatableYParams = {};\n      if (paramYObject.modifier) animatableYParams.modifier = paramYObject.modifier;\n      if (paramYObject.composition) animatableYParams.composition = paramYObject.composition;\n      animatableParams[yProp] = animatableYParams;\n    } else if (paramY === false) {\n      animatableParams[yProp] = 0;\n      this.disabled[1] = 1;\n    }\n    /** @type {AnimatableObject} */\n    this.animate = /** @type {AnimatableObject} */new Animatable(this.$target, animatableParams);\n    // Internal props\n    this.xProp = xProp;\n    this.yProp = yProp;\n    this.destX = 0;\n    this.destY = 0;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.scroll = {\n      x: 0,\n      y: 0\n    };\n    /** @type {[Number, Number, Number, Number]} */\n    this.coords = [this.x, this.y, 0, 0]; // x, y, temp x, temp y\n    /** @type {[Number, Number]} */\n    this.snapped = [0, 0]; // x, y\n    /** @type {[Number, Number, Number, Number, Number, Number, Number, Number]} */\n    this.pointer = [0, 0, 0, 0, 0, 0, 0, 0]; // x1, y1, x2, y2, temp x1, temp y1, temp x2, temp y2\n    /** @type {[Number, Number]} */\n    this.scrollView = [0, 0]; // w, h\n    /** @type {[Number, Number, Number, Number]} */\n    this.dragArea = [0, 0, 0, 0]; // x, y, w, h\n    /** @type {[Number, Number, Number, Number]} */\n    this.containerBounds = [-1e12, maxValue, maxValue, -1e12]; // t, r, b, l\n    /** @type {[Number, Number, Number, Number]} */\n    this.scrollBounds = [0, 0, 0, 0]; // t, r, b, l\n    /** @type {[Number, Number, Number, Number]} */\n    this.targetBounds = [0, 0, 0, 0]; // t, r, b, l\n    /** @type {[Number, Number]} */\n    this.window = [0, 0]; // w, h\n    /** @type {[Number, Number, Number]} */\n    this.velocityStack = [0, 0, 0];\n    /** @type {Number} */\n    this.velocityStackIndex = 0;\n    /** @type {Number} */\n    this.velocityTime = now();\n    /** @type {Number} */\n    this.velocity = 0;\n    /** @type {Number} */\n    this.angle = 0;\n    /** @type {JSAnimation} */\n    this.cursorStyles = null;\n    /** @type {JSAnimation} */\n    this.triggerStyles = null;\n    /** @type {JSAnimation} */\n    this.bodyStyles = null;\n    /** @type {JSAnimation} */\n    this.targetStyles = null;\n    /** @type {JSAnimation} */\n    this.touchActionStyles = null;\n    this.transforms = new Transforms(this.$target);\n    this.overshootCoords = {\n      x: 0,\n      y: 0\n    };\n    this.overshootXTicker = new Timer({\n      autoplay: false\n    }, null, 0).init();\n    this.overshootYTicker = new Timer({\n      autoplay: false\n    }, null, 0).init();\n    this.updateTicker = new Timer({\n      autoplay: false\n    }, null, 0).init();\n    this.overshootXTicker.onUpdate = () => {\n      if (this.disabled[0]) return;\n      this.updated = true;\n      this.manual = true;\n      this.animate[this.xProp](this.overshootCoords.x, 0);\n    };\n    this.overshootXTicker.onComplete = () => {\n      if (this.disabled[0]) return;\n      this.manual = false;\n      this.animate[this.xProp](this.overshootCoords.x, 0);\n    };\n    this.overshootYTicker.onUpdate = () => {\n      if (this.disabled[1]) return;\n      this.updated = true;\n      this.manual = true;\n      this.animate[this.yProp](this.overshootCoords.y, 0);\n    };\n    this.overshootYTicker.onComplete = () => {\n      if (this.disabled[1]) return;\n      this.manual = false;\n      this.animate[this.yProp](this.overshootCoords.y, 0);\n    };\n    this.updateTicker.onUpdate = () => this.update();\n    this.contained = !isUnd(container);\n    this.manual = false;\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.enabled = false;\n    this.initialized = false;\n    this.activeProp = this.disabled[1] ? xProp : yProp;\n    this.animate.animations[this.activeProp].onRender = () => {\n      const hasUpdated = this.updated;\n      const hasMoved = this.grabbed && hasUpdated;\n      const hasReleased = !hasMoved && this.released;\n      const x = this.x;\n      const y = this.y;\n      const dx = x - this.coords[2];\n      const dy = y - this.coords[3];\n      this.deltaX = dx;\n      this.deltaY = dy;\n      this.coords[2] = x;\n      this.coords[3] = y;\n      if (hasUpdated) {\n        this.onUpdate(this);\n      }\n      if (!hasReleased) {\n        this.updated = false;\n      } else {\n        this.computeVelocity(dx, dy);\n        this.angle = atan2(dy, dx);\n      }\n    };\n    this.animate.animations[this.activeProp].onComplete = () => {\n      if (!this.grabbed && this.released) {\n        // Set eleased to false before calling onSettle to avoid recursion\n        this.released = false;\n      }\n      if (!this.manual) {\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.velocity = 0;\n        this.velocityStack[0] = 0;\n        this.velocityStack[1] = 0;\n        this.velocityStack[2] = 0;\n        this.velocityStackIndex = 0;\n        this.onSettle(this);\n      }\n    };\n    this.resizeTicker = new Timer({\n      autoplay: false,\n      duration: 150 * globals.timeScale,\n      onComplete: () => {\n        this.onResize(this);\n        this.refresh();\n        this.onAfterResize(this);\n      }\n    }).init();\n    this.parameters = parameters;\n    this.resizeObserver = new ResizeObserver(() => {\n      if (this.initialized) {\n        this.resizeTicker.restart();\n      } else {\n        this.initialized = true;\n      }\n    });\n    this.enable();\n    this.refresh();\n    this.resizeObserver.observe(this.$container);\n    if (!isObj(target)) this.resizeObserver.observe(this.$target);\n  }\n\n  /**\n   * @param  {Number} dx\n   * @param  {Number} dy\n   * @return {Number}\n   */\n  computeVelocity(dx, dy) {\n    const prevTime = this.velocityTime;\n    const curTime = now();\n    const elapsed = curTime - prevTime;\n    if (elapsed < 17) return this.velocity;\n    this.velocityTime = curTime;\n    const velocityStack = this.velocityStack;\n    const vMul = this.velocityMultiplier;\n    const minV = this.minVelocity;\n    const maxV = this.maxVelocity;\n    const vi = this.velocityStackIndex;\n    velocityStack[vi] = round(clamp(sqrt(dx * dx + dy * dy) / elapsed * vMul, minV, maxV), 5);\n    const velocity = max(velocityStack[0], velocityStack[1], velocityStack[2]);\n    this.velocity = velocity;\n    this.velocityStackIndex = (vi + 1) % 3;\n    return velocity;\n  }\n\n  /**\n   * @param {Number}  x\n   * @param {Boolean} [muteUpdateCallback]\n   * @return {this}\n   */\n  setX(x, muteUpdateCallback = false) {\n    if (this.disabled[0]) return;\n    const v = round(x, 5);\n    this.overshootXTicker.pause();\n    this.manual = true;\n    this.updated = !muteUpdateCallback;\n    this.destX = v;\n    this.snapped[0] = snap(v, this.snapX);\n    this.animate[this.xProp](v, 0);\n    this.manual = false;\n    return this;\n  }\n\n  /**\n   * @param {Number}  y\n   * @param {Boolean} [muteUpdateCallback]\n   * @return {this}\n   */\n  setY(y, muteUpdateCallback = false) {\n    if (this.disabled[1]) return;\n    const v = round(y, 5);\n    this.overshootYTicker.pause();\n    this.manual = true;\n    this.updated = !muteUpdateCallback;\n    this.destY = v;\n    this.snapped[1] = snap(v, this.snapY);\n    this.animate[this.yProp](v, 0);\n    this.manual = false;\n    return this;\n  }\n  get x() {\n    return round(/** @type {Number} */this.animate[this.xProp](), globals.precision);\n  }\n  set x(x) {\n    this.setX(x, false);\n  }\n  get y() {\n    return round(/** @type {Number} */this.animate[this.yProp](), globals.precision);\n  }\n  set y(y) {\n    this.setY(y, false);\n  }\n  get progressX() {\n    return mapRange(this.x, this.containerBounds[3], this.containerBounds[1], 0, 1);\n  }\n  set progressX(x) {\n    this.setX(mapRange(x, 0, 1, this.containerBounds[3], this.containerBounds[1]), false);\n  }\n  get progressY() {\n    return mapRange(this.y, this.containerBounds[0], this.containerBounds[2], 0, 1);\n  }\n  set progressY(y) {\n    this.setY(mapRange(y, 0, 1, this.containerBounds[0], this.containerBounds[2]), false);\n  }\n  updateScrollCoords() {\n    const sx = round(this.useWin ? win.scrollX : this.$container.scrollLeft, 0);\n    const sy = round(this.useWin ? win.scrollY : this.$container.scrollTop, 0);\n    const [cpt, cpr, cpb, cpl] = this.containerPadding;\n    const threshold = this.scrollThreshold;\n    this.scroll.x = sx;\n    this.scroll.y = sy;\n    this.scrollBounds[0] = sy - this.targetBounds[0] + cpt - threshold;\n    this.scrollBounds[1] = sx - this.targetBounds[1] - cpr + threshold;\n    this.scrollBounds[2] = sy - this.targetBounds[2] - cpb + threshold;\n    this.scrollBounds[3] = sx - this.targetBounds[3] + cpl - threshold;\n  }\n  updateBoundingValues() {\n    const $container = this.$container;\n    const cx = this.x;\n    const cy = this.y;\n    const cx2 = this.coords[2];\n    const cy2 = this.coords[3];\n    // Prevents interfering with the scroll area in cases the target is outside of the container\n    // Make sure the temp coords are also adjuset to prevents wrong delta calculation on updates\n    this.coords[2] = 0;\n    this.coords[3] = 0;\n    this.setX(0, true);\n    this.setY(0, true);\n    this.transforms.remove();\n    const iw = this.window[0] = win.innerWidth;\n    const ih = this.window[1] = win.innerHeight;\n    const uw = this.useWin;\n    const sw = $container.scrollWidth;\n    const sh = $container.scrollHeight;\n    const fx = this.fixed;\n    const transformContainerRect = $container.getBoundingClientRect();\n    const [cpt, cpr, cpb, cpl] = this.containerPadding;\n    this.dragArea[0] = uw ? 0 : transformContainerRect.left;\n    this.dragArea[1] = uw ? 0 : transformContainerRect.top;\n    this.scrollView[0] = uw ? clamp(sw, iw, sw) : sw;\n    this.scrollView[1] = uw ? clamp(sh, ih, sh) : sh;\n    this.updateScrollCoords();\n    const {\n      width,\n      height,\n      left,\n      top,\n      right,\n      bottom\n    } = $container.getBoundingClientRect();\n    this.dragArea[2] = round(uw ? clamp(width, iw, iw) : width, 0);\n    this.dragArea[3] = round(uw ? clamp(height, ih, ih) : height, 0);\n    const containerOverflow = getTargetValue($container, 'overflow');\n    const visibleOverflow = containerOverflow === 'visible';\n    const hiddenOverflow = containerOverflow === 'hidden';\n    this.canScroll = fx ? false : this.contained && ($container === doc.body && visibleOverflow || !hiddenOverflow && !visibleOverflow) && (sw > this.dragArea[2] + cpl - cpr || sh > this.dragArea[3] + cpt - cpb) && (!this.containerArray || this.containerArray && !isArr(this.containerArray));\n    if (this.contained) {\n      const sx = this.scroll.x;\n      const sy = this.scroll.y;\n      const canScroll = this.canScroll;\n      const targetRect = this.$target.getBoundingClientRect();\n      const hiddenLeft = canScroll ? uw ? 0 : $container.scrollLeft : 0;\n      const hiddenTop = canScroll ? uw ? 0 : $container.scrollTop : 0;\n      const hiddenRight = canScroll ? this.scrollView[0] - hiddenLeft - width : 0;\n      const hiddenBottom = canScroll ? this.scrollView[1] - hiddenTop - height : 0;\n      this.targetBounds[0] = round(targetRect.top + sy - (uw ? 0 : top), 0);\n      this.targetBounds[1] = round(targetRect.right + sx - (uw ? iw : right), 0);\n      this.targetBounds[2] = round(targetRect.bottom + sy - (uw ? ih : bottom), 0);\n      this.targetBounds[3] = round(targetRect.left + sx - (uw ? 0 : left), 0);\n      if (this.containerArray) {\n        this.containerBounds[0] = this.containerArray[0] + cpt;\n        this.containerBounds[1] = this.containerArray[1] - cpr;\n        this.containerBounds[2] = this.containerArray[2] - cpb;\n        this.containerBounds[3] = this.containerArray[3] + cpl;\n      } else {\n        this.containerBounds[0] = -round(targetRect.top - (fx ? clamp(top, 0, ih) : top) + hiddenTop - cpt, 0);\n        this.containerBounds[1] = -round(targetRect.right - (fx ? clamp(right, 0, iw) : right) - hiddenRight + cpr, 0);\n        this.containerBounds[2] = -round(targetRect.bottom - (fx ? clamp(bottom, 0, ih) : bottom) - hiddenBottom + cpb, 0);\n        this.containerBounds[3] = -round(targetRect.left - (fx ? clamp(left, 0, iw) : left) + hiddenLeft - cpl, 0);\n      }\n    }\n    this.transforms.revert();\n    // Restore coordinates\n    this.coords[2] = cx2;\n    this.coords[3] = cy2;\n    this.setX(cx, true);\n    this.setY(cy, true);\n  }\n\n  /**\n   * Returns 0 if not OB, 1 if x is OB, 2 if y is OB, 3 if both x and y are OB\n   *\n   * @param  {Array} bounds\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {Number}\n   */\n  isOutOfBounds(bounds, x, y) {\n    if (!this.contained) return 0;\n    const [bt, br, bb, bl] = bounds;\n    const [dx, dy] = this.disabled;\n    const obx = !dx && x < bl || !dx && x > br;\n    const oby = !dy && y < bt || !dy && y > bb;\n    return obx && !oby ? 1 : !obx && oby ? 2 : obx && oby ? 3 : 0;\n  }\n  refresh() {\n    const params = this.parameters;\n    const paramX = params.x;\n    const paramY = params.y;\n    const container = parseDraggableFunctionParameter(params.container, this);\n    const cp = parseDraggableFunctionParameter(params.containerPadding, this) || 0;\n    const containerPadding = /** @type {[Number, Number, Number, Number]} */isArr(cp) ? cp : [cp, cp, cp, cp];\n    const cx = this.x;\n    const cy = this.y;\n    const parsedCursorStyles = parseDraggableFunctionParameter(params.cursor, this);\n    const cursorStyles = {\n      onHover: 'grab',\n      onGrab: 'grabbing'\n    };\n    if (parsedCursorStyles) {\n      const {\n        onHover,\n        onGrab\n      } = /** @type {DraggableCursorParams} */parsedCursorStyles;\n      if (onHover) cursorStyles.onHover = onHover;\n      if (onGrab) cursorStyles.onGrab = onGrab;\n    }\n    this.containerArray = isArr(container) ? container : null;\n    this.$container = /** @type {HTMLElement} */container && !this.containerArray ? parseTargets(/** @type {DOMTarget} */container)[0] : doc.body;\n    this.useWin = this.$container === doc.body;\n    /** @type {Window | HTMLElement} */\n    this.$scrollContainer = this.useWin ? win : this.$container;\n    this.isFinePointer = matchMedia('(pointer:fine)').matches;\n    this.containerPadding = setValue(containerPadding, [0, 0, 0, 0]);\n    this.containerFriction = clamp(setValue(parseDraggableFunctionParameter(params.containerFriction, this), .8), 0, 1);\n    this.releaseContainerFriction = clamp(setValue(parseDraggableFunctionParameter(params.releaseContainerFriction, this), this.containerFriction), 0, 1);\n    this.snapX = parseDraggableFunctionParameter(isObj(paramX) && !isUnd(paramX.snap) ? paramX.snap : params.snap, this);\n    this.snapY = parseDraggableFunctionParameter(isObj(paramY) && !isUnd(paramY.snap) ? paramY.snap : params.snap, this);\n    this.scrollSpeed = setValue(parseDraggableFunctionParameter(params.scrollSpeed, this), 1.5);\n    this.scrollThreshold = setValue(parseDraggableFunctionParameter(params.scrollThreshold, this), 20);\n    this.dragSpeed = setValue(parseDraggableFunctionParameter(params.dragSpeed, this), 1);\n    this.minVelocity = setValue(parseDraggableFunctionParameter(params.minVelocity, this), 0);\n    this.maxVelocity = setValue(parseDraggableFunctionParameter(params.maxVelocity, this), 50);\n    this.velocityMultiplier = setValue(parseDraggableFunctionParameter(params.velocityMultiplier, this), 1);\n    this.cursor = parsedCursorStyles === false ? false : cursorStyles;\n    this.updateBoundingValues();\n\n    // const ob = this.isOutOfBounds(this.containerBounds, this.x, this.y);\n    // if (ob === 1 || ob === 3) this.progressX = px;\n    // if (ob === 2 || ob === 3) this.progressY = py;\n\n    // if (this.initialized && this.contained) {\n    //   if (this.progressX !== px) this.progressX = px;\n    //   if (this.progressY !== py) this.progressY = py;\n    // }\n\n    const [bt, br, bb, bl] = this.containerBounds;\n    this.setX(clamp(cx, bl, br), true);\n    this.setY(clamp(cy, bt, bb), true);\n  }\n  update() {\n    this.updateScrollCoords();\n    if (this.canScroll) {\n      const [cpt, cpr, cpb, cpl] = this.containerPadding;\n      const [sw, sh] = this.scrollView;\n      const daw = this.dragArea[2];\n      const dah = this.dragArea[3];\n      const csx = this.scroll.x;\n      const csy = this.scroll.y;\n      const nsw = this.$container.scrollWidth;\n      const nsh = this.$container.scrollHeight;\n      const csw = this.useWin ? clamp(nsw, this.window[0], nsw) : nsw;\n      const csh = this.useWin ? clamp(nsh, this.window[1], nsh) : nsh;\n      const swd = sw - csw;\n      const shd = sh - csh;\n      // Handle cases where the scrollarea dimensions changes during drag\n      if (this.dragged && swd > 0) {\n        this.coords[0] -= swd;\n        this.scrollView[0] = csw;\n      }\n      if (this.dragged && shd > 0) {\n        this.coords[1] -= shd;\n        this.scrollView[1] = csh;\n      }\n      // Handle autoscroll when target is at the edges of the scroll bounds\n      const s = this.scrollSpeed * 10;\n      const threshold = this.scrollThreshold;\n      const [x, y] = this.coords;\n      const [st, sr, sb, sl] = this.scrollBounds;\n      const t = round(clamp((y - st + cpt) / threshold, -1, 0) * s, 0);\n      const r = round(clamp((x - sr - cpr) / threshold, 0, 1) * s, 0);\n      const b = round(clamp((y - sb - cpb) / threshold, 0, 1) * s, 0);\n      const l = round(clamp((x - sl + cpl) / threshold, -1, 0) * s, 0);\n      if (t || b || l || r) {\n        const [nx, ny] = this.disabled;\n        let scrollX = csx;\n        let scrollY = csy;\n        if (!nx) {\n          scrollX = round(clamp(csx + (l || r), 0, sw - daw), 0);\n          this.coords[0] -= csx - scrollX;\n        }\n        if (!ny) {\n          scrollY = round(clamp(csy + (t || b), 0, sh - dah), 0);\n          this.coords[1] -= csy - scrollY;\n        }\n        // Note: Safari mobile requires to use different scroll methods depending if using the window or not\n        if (this.useWin) {\n          this.$scrollContainer.scrollBy(-(csx - scrollX), -(csy - scrollY));\n        } else {\n          this.$scrollContainer.scrollTo(scrollX, scrollY);\n        }\n      }\n    }\n    const [ct, cr, cb, cl] = this.containerBounds;\n    const [px1, py1, px2, py2, px3, py3] = this.pointer;\n    this.coords[0] += (px1 - px3) * this.dragSpeed;\n    this.coords[1] += (py1 - py3) * this.dragSpeed;\n    this.pointer[4] = px1;\n    this.pointer[5] = py1;\n    const [cx, cy] = this.coords;\n    const [sx, sy] = this.snapped;\n    const cf = (1 - this.containerFriction) * this.dragSpeed;\n    this.setX(cx > cr ? cr + (cx - cr) * cf : cx < cl ? cl + (cx - cl) * cf : cx, false);\n    this.setY(cy > cb ? cb + (cy - cb) * cf : cy < ct ? ct + (cy - ct) * cf : cy, false);\n    this.computeVelocity(px1 - px3, py1 - py3);\n    this.angle = atan2(py1 - py2, px1 - px2);\n    const [nsx, nsy] = this.snapped;\n    if (nsx !== sx && this.snapX || nsy !== sy && this.snapY) {\n      this.onSnap(this);\n    }\n  }\n  stop() {\n    this.updateTicker.pause();\n    this.overshootXTicker.pause();\n    this.overshootYTicker.pause();\n    // Pauses the in bounds onRelease animations\n    for (let prop in this.animate.animations) this.animate.animations[prop].pause();\n    remove(this, null, 'x');\n    remove(this, null, 'y');\n    remove(this, null, 'progressX');\n    remove(this, null, 'progressY');\n    remove(this.scroll); // Removes any active animations on the container scroll\n    remove(this.overshootCoords); // Removes active overshoot animations\n    return this;\n  }\n\n  /**\n   * @param {Number} [duration]\n   * @param {Number} [gap]\n   * @param {EasingParam} [ease]\n   * @return {this}\n   */\n  scrollInView(duration, gap = 0, ease = eases.inOutQuad) {\n    this.updateScrollCoords();\n    const x = this.destX;\n    const y = this.destY;\n    const scroll = this.scroll;\n    const scrollBounds = this.scrollBounds;\n    const canScroll = this.canScroll;\n    if (!this.containerArray && this.isOutOfBounds(scrollBounds, x, y)) {\n      const [st, sr, sb, sl] = scrollBounds;\n      const t = round(clamp(y - st, -1e12, 0), 0);\n      const r = round(clamp(x - sr, 0, maxValue), 0);\n      const b = round(clamp(y - sb, 0, maxValue), 0);\n      const l = round(clamp(x - sl, -1e12, 0), 0);\n      new JSAnimation(scroll, {\n        x: round(scroll.x + (l ? l - gap : r ? r + gap : 0), 0),\n        y: round(scroll.y + (t ? t - gap : b ? b + gap : 0), 0),\n        duration: isUnd(duration) ? 350 * globals.timeScale : duration,\n        ease,\n        onUpdate: () => {\n          this.canScroll = false;\n          this.$scrollContainer.scrollTo(scroll.x, scroll.y);\n        }\n      }).init().then(() => {\n        this.canScroll = canScroll;\n      });\n    }\n    return this;\n  }\n  handleHover() {\n    if (this.isFinePointer && this.cursor && !this.cursorStyles) {\n      this.cursorStyles = setTargetValues(this.$trigger, {\n        cursor: /** @type {DraggableCursorParams} */this.cursor.onHover\n      });\n    }\n  }\n\n  /**\n   * @param  {Number} [duration]\n   * @param  {Number} [gap]\n   * @param  {EasingParam} [ease]\n   * @return {this}\n   */\n  animateInView(duration, gap = 0, ease = eases.inOutQuad) {\n    this.stop();\n    this.updateBoundingValues();\n    const x = this.x;\n    const y = this.y;\n    const [cpt, cpr, cpb, cpl] = this.containerPadding;\n    const bt = this.scroll.y - this.targetBounds[0] + cpt + gap;\n    const br = this.scroll.x - this.targetBounds[1] - cpr - gap;\n    const bb = this.scroll.y - this.targetBounds[2] - cpb - gap;\n    const bl = this.scroll.x - this.targetBounds[3] + cpl + gap;\n    const ob = this.isOutOfBounds([bt, br, bb, bl], x, y);\n    if (ob) {\n      const [disabledX, disabledY] = this.disabled;\n      const destX = clamp(snap(x, this.snapX), bl, br);\n      const destY = clamp(snap(y, this.snapY), bt, bb);\n      const dur = isUnd(duration) ? 350 * globals.timeScale : duration;\n      if (!disabledX && (ob === 1 || ob === 3)) this.animate[this.xProp](destX, dur, ease);\n      if (!disabledY && (ob === 2 || ob === 3)) this.animate[this.yProp](destY, dur, ease);\n    }\n    return this;\n  }\n\n  /**\n   * @param {MouseEvent|TouchEvent} e\n   */\n  handleDown(e) {\n    const $eTarget = /** @type {HTMLElement} */e.target;\n    if (this.grabbed || /** @type {HTMLInputElement}  */$eTarget.type === 'range') return;\n    e.stopPropagation();\n    this.grabbed = true;\n    this.released = false;\n    this.stop();\n    this.updateBoundingValues();\n    const touches = /** @type {TouchEvent} */e.changedTouches;\n    const eventX = touches ? touches[0].clientX : /** @type {MouseEvent} */e.clientX;\n    const eventY = touches ? touches[0].clientY : /** @type {MouseEvent} */e.clientY;\n    const {\n      x,\n      y\n    } = this.transforms.normalizePoint(eventX, eventY);\n    const [ct, cr, cb, cl] = this.containerBounds;\n    const cf = (1 - this.containerFriction) * this.dragSpeed;\n    const cx = this.x;\n    const cy = this.y;\n    this.coords[0] = this.coords[2] = !cf ? cx : cx > cr ? cr + (cx - cr) / cf : cx < cl ? cl + (cx - cl) / cf : cx;\n    this.coords[1] = this.coords[3] = !cf ? cy : cy > cb ? cb + (cy - cb) / cf : cy < ct ? ct + (cy - ct) / cf : cy;\n    this.pointer[0] = x;\n    this.pointer[1] = y;\n    this.pointer[2] = x;\n    this.pointer[3] = y;\n    this.pointer[4] = x;\n    this.pointer[5] = y;\n    this.pointer[6] = x;\n    this.pointer[7] = y;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.velocity = 0;\n    this.velocityStack[0] = 0;\n    this.velocityStack[1] = 0;\n    this.velocityStack[2] = 0;\n    this.velocityStackIndex = 0;\n    this.angle = 0;\n    if (this.targetStyles) {\n      this.targetStyles.revert();\n      this.targetStyles = null;\n    }\n    const z = /** @type {Number} */getTargetValue(this.$target, 'zIndex', false);\n    zIndex = (z > zIndex ? z : zIndex) + 1;\n    this.targetStyles = setTargetValues(this.$target, {\n      zIndex\n    });\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n    if (this.cursorStyles) {\n      this.cursorStyles.revert();\n      this.cursorStyles = null;\n    }\n    if (this.isFinePointer && this.cursor) {\n      this.bodyStyles = setTargetValues(doc.body, {\n        cursor: /** @type {DraggableCursorParams} */this.cursor.onGrab\n      });\n    }\n    this.scrollInView(100, 0, eases.out(3));\n    this.onGrab(this);\n    doc.addEventListener('touchmove', this);\n    doc.addEventListener('touchend', this);\n    doc.addEventListener('touchcancel', this);\n    doc.addEventListener('mousemove', this);\n    doc.addEventListener('mouseup', this);\n    doc.addEventListener('selectstart', this);\n  }\n\n  /**\n   * @param {MouseEvent|TouchEvent} e\n   */\n  handleMove(e) {\n    if (!this.grabbed) return;\n    const touches = /** @type {TouchEvent} */e.changedTouches;\n    const eventX = touches ? touches[0].clientX : /** @type {MouseEvent} */e.clientX;\n    const eventY = touches ? touches[0].clientY : /** @type {MouseEvent} */e.clientY;\n    const {\n      x,\n      y\n    } = this.transforms.normalizePoint(eventX, eventY);\n    const movedX = x - this.pointer[6];\n    const movedY = y - this.pointer[7];\n    let $parent = /** @type {HTMLElement} */e.target;\n    let isAtTop = false;\n    let isAtBottom = false;\n    let canTouchScroll = false;\n    while (touches && $parent && $parent !== this.$trigger) {\n      const overflowY = getTargetValue($parent, 'overflow-y');\n      if (overflowY !== 'hidden' && overflowY !== 'visible') {\n        const {\n          scrollTop,\n          scrollHeight,\n          clientHeight\n        } = $parent;\n        if (scrollHeight > clientHeight) {\n          canTouchScroll = true;\n          isAtTop = scrollTop <= 3;\n          isAtBottom = scrollTop >= scrollHeight - clientHeight - 3;\n          break;\n        }\n      }\n      $parent = /** @type {HTMLElement} */$parent.parentNode;\n    }\n    if (canTouchScroll && (!isAtTop && !isAtBottom || isAtTop && movedY < 0 || isAtBottom && movedY > 0)) {\n      this.pointer[0] = x;\n      this.pointer[1] = y;\n      this.pointer[2] = x;\n      this.pointer[3] = y;\n      this.pointer[4] = x;\n      this.pointer[5] = y;\n      this.pointer[6] = x;\n      this.pointer[7] = y;\n    } else {\n      preventDefault(e);\n\n      // Needed to prevents click on handleUp\n      if (!this.triggerStyles) this.triggerStyles = setTargetValues(this.$trigger, {\n        pointerEvents: 'none'\n      });\n      // Needed to prevent page scroll while dragging on touch devvice\n      this.$trigger.addEventListener('touchstart', preventDefault, {\n        passive: false\n      });\n      this.$trigger.addEventListener('touchmove', preventDefault, {\n        passive: false\n      });\n      this.$trigger.addEventListener('touchend', preventDefault);\n      if (!this.disabled[0] && abs(movedX) > 3 || !this.disabled[1] && abs(movedY) > 3) {\n        this.updateTicker.resume();\n        this.pointer[2] = this.pointer[0];\n        this.pointer[3] = this.pointer[1];\n        this.pointer[0] = x;\n        this.pointer[1] = y;\n        this.dragged = true;\n        this.released = false;\n        this.onDrag(this);\n      }\n    }\n  }\n  handleUp() {\n    if (!this.grabbed) return;\n    this.updateTicker.pause();\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n    if (this.bodyStyles) {\n      this.bodyStyles.revert();\n      this.bodyStyles = null;\n    }\n    const [disabledX, disabledY] = this.disabled;\n    const [px1, py1, px2, py2, px3, py3] = this.pointer;\n    const [ct, cr, cb, cl] = this.containerBounds;\n    const [sx, sy] = this.snapped;\n    const springX = this.releaseXSpring;\n    const springY = this.releaseYSpring;\n    const releaseEase = this.releaseEase;\n    const hasReleaseSpring = this.hasReleaseSpring;\n    const overshootCoords = this.overshootCoords;\n    const cx = this.x;\n    const cy = this.y;\n    const pv = this.computeVelocity(px1 - px3, py1 - py3);\n    const pa = this.angle = atan2(py1 - py2, px1 - px2);\n    const ds = pv * 150;\n    const cf = (1 - this.releaseContainerFriction) * this.dragSpeed;\n    const nx = cx + cos(pa) * ds;\n    const ny = cy + sin(pa) * ds;\n    const bx = nx > cr ? cr + (nx - cr) * cf : nx < cl ? cl + (nx - cl) * cf : nx;\n    const by = ny > cb ? cb + (ny - cb) * cf : ny < ct ? ct + (ny - ct) * cf : ny;\n    const dx = this.destX = clamp(round(snap(bx, this.snapX), 5), cl, cr);\n    const dy = this.destY = clamp(round(snap(by, this.snapY), 5), ct, cb);\n    const ob = this.isOutOfBounds(this.containerBounds, nx, ny);\n    let durationX = 0;\n    let durationY = 0;\n    let easeX = releaseEase;\n    let easeY = releaseEase;\n    let longestReleaseDuration = 0;\n    overshootCoords.x = cx;\n    overshootCoords.y = cy;\n    if (!disabledX) {\n      const directionX = dx === cr ? cx > cr ? -1 : 1 : cx < cl ? -1 : 1;\n      const distanceX = round(cx - dx, 0);\n      springX.velocity = disabledY && hasReleaseSpring ? distanceX ? ds * directionX / abs(distanceX) : 0 : pv;\n      const {\n        ease,\n        duration,\n        restDuration\n      } = springX;\n      durationX = cx === dx ? 0 : hasReleaseSpring ? duration : duration - restDuration * globals.timeScale;\n      if (hasReleaseSpring) easeX = ease;\n      if (durationX > longestReleaseDuration) longestReleaseDuration = durationX;\n    }\n    if (!disabledY) {\n      const directionY = dy === cb ? cy > cb ? -1 : 1 : cy < ct ? -1 : 1;\n      const distanceY = round(cy - dy, 0);\n      springY.velocity = disabledX && hasReleaseSpring ? distanceY ? ds * directionY / abs(distanceY) : 0 : pv;\n      const {\n        ease,\n        duration,\n        restDuration\n      } = springY;\n      durationY = cy === dy ? 0 : hasReleaseSpring ? duration : duration - restDuration * globals.timeScale;\n      if (hasReleaseSpring) easeY = ease;\n      if (durationY > longestReleaseDuration) longestReleaseDuration = durationY;\n    }\n    if (!hasReleaseSpring && ob && cf && (durationX || durationY)) {\n      const composition = compositionTypes.blend;\n      new JSAnimation(overshootCoords, {\n        x: {\n          to: bx,\n          duration: durationX * .65\n        },\n        y: {\n          to: by,\n          duration: durationY * .65\n        },\n        ease: releaseEase,\n        composition\n      }).init();\n      new JSAnimation(overshootCoords, {\n        x: {\n          to: dx,\n          duration: durationX\n        },\n        y: {\n          to: dy,\n          duration: durationY\n        },\n        ease: releaseEase,\n        composition\n      }).init();\n      this.overshootXTicker.stretch(durationX).restart();\n      this.overshootYTicker.stretch(durationY).restart();\n    } else {\n      if (!disabledX) this.animate[this.xProp](dx, durationX, easeX);\n      if (!disabledY) this.animate[this.yProp](dy, durationY, easeY);\n    }\n    this.scrollInView(longestReleaseDuration, this.scrollThreshold, releaseEase);\n    let hasSnapped = false;\n    if (dx !== sx) {\n      this.snapped[0] = dx;\n      if (this.snapX) hasSnapped = true;\n    }\n    if (dy !== sy && this.snapY) {\n      this.snapped[1] = dy;\n      if (this.snapY) hasSnapped = true;\n    }\n    if (hasSnapped) this.onSnap(this);\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = true;\n    this.released = true;\n\n    // It's important to trigger the callback after the release animations to be able to cancel them\n    this.onRelease(this);\n    this.$trigger.removeEventListener('touchstart', preventDefault);\n    this.$trigger.removeEventListener('touchmove', preventDefault);\n    this.$trigger.removeEventListener('touchend', preventDefault);\n    doc.removeEventListener('touchmove', this);\n    doc.removeEventListener('touchend', this);\n    doc.removeEventListener('touchcancel', this);\n    doc.removeEventListener('mousemove', this);\n    doc.removeEventListener('mouseup', this);\n    doc.removeEventListener('selectstart', this);\n  }\n  reset() {\n    this.stop();\n    this.resizeTicker.pause();\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.setX(0, true);\n    this.setY(0, true);\n    this.coords[0] = 0;\n    this.coords[1] = 0;\n    this.pointer[0] = 0;\n    this.pointer[1] = 0;\n    this.pointer[2] = 0;\n    this.pointer[3] = 0;\n    this.pointer[4] = 0;\n    this.pointer[5] = 0;\n    this.pointer[6] = 0;\n    this.pointer[7] = 0;\n    this.velocity = 0;\n    this.velocityStack[0] = 0;\n    this.velocityStack[1] = 0;\n    this.velocityStack[2] = 0;\n    this.velocityStackIndex = 0;\n    this.angle = 0;\n    return this;\n  }\n  enable() {\n    if (!this.enabled) {\n      this.enabled = true;\n      this.$target.classList.remove('is-disabled');\n      this.touchActionStyles = setTargetValues(this.$trigger, {\n        touchAction: this.disabled[0] ? 'pan-x' : this.disabled[1] ? 'pan-y' : 'none'\n      });\n      this.$trigger.addEventListener('touchstart', this, {\n        passive: true\n      });\n      this.$trigger.addEventListener('mousedown', this, {\n        passive: true\n      });\n      this.$trigger.addEventListener('mouseenter', this);\n    }\n    return this;\n  }\n  disable() {\n    this.enabled = false;\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.touchActionStyles.revert();\n    if (this.cursorStyles) {\n      this.cursorStyles.revert();\n      this.cursorStyles = null;\n    }\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n    if (this.bodyStyles) {\n      this.bodyStyles.revert();\n      this.bodyStyles = null;\n    }\n    if (this.targetStyles) {\n      this.targetStyles.revert();\n      this.targetStyles = null;\n    }\n    this.stop();\n    this.$target.classList.add('is-disabled');\n    this.$trigger.removeEventListener('touchstart', this);\n    this.$trigger.removeEventListener('mousedown', this);\n    this.$trigger.removeEventListener('mouseenter', this);\n    doc.removeEventListener('touchmove', this);\n    doc.removeEventListener('touchend', this);\n    doc.removeEventListener('touchcancel', this);\n    doc.removeEventListener('mousemove', this);\n    doc.removeEventListener('mouseup', this);\n    doc.removeEventListener('selectstart', this);\n    return this;\n  }\n  revert() {\n    this.reset();\n    this.disable();\n    this.$target.classList.remove('is-disabled');\n    this.updateTicker.revert();\n    this.overshootXTicker.revert();\n    this.overshootYTicker.revert();\n    this.resizeTicker.revert();\n    this.animate.revert();\n    return this;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'mousedown':\n        this.handleDown(/** @type {MouseEvent} */e);\n        break;\n      case 'touchstart':\n        this.handleDown(/** @type {TouchEvent} */e);\n        break;\n      case 'mousemove':\n        this.handleMove(/** @type {MouseEvent} */e);\n        break;\n      case 'touchmove':\n        this.handleMove(/** @type {TouchEvent} */e);\n        break;\n      case 'mouseup':\n        this.handleUp();\n        break;\n      case 'touchend':\n        this.handleUp();\n        break;\n      case 'touchcancel':\n        this.handleUp();\n        break;\n      case 'mouseenter':\n        this.handleHover();\n        break;\n      case 'selectstart':\n        preventDefault(e);\n        break;\n    }\n  }\n}\n\n/**\n * @param {TargetsParam} target\n * @param {DraggableParams} [parameters]\n * @return {Draggable}\n */\nconst createDraggable = (target, parameters) => new Draggable(target, parameters);\n\n/**\n * @typedef {Object} ReactRef\n * @property {HTMLElement|SVGElement|null} [current]\n */\n\n/**\n * @typedef {Object} AngularRef\n * @property {HTMLElement|SVGElement} [nativeElement]\n */\n\n/**\n * @typedef {Object} ScopeParams\n * @property {DOMTargetSelector|ReactRef|AngularRef} [root]\n * @property {DefaultsParams} [defaults]\n * @property {Record<String, String>} [mediaQueries]\n */\n\n/**\n * @callback ScopeCleanup\n * @param {Scope} [scope]\n */\n\n/**\n * @callback ScopeConstructor\n * @param {Scope} [scope]\n * @return {ScopeCleanup|void}\n */\n\n/**\n * @callback ScopeMethod\n * @param {...*} args\n * @return {ScopeCleanup|void}\n */\n\nclass Scope {\n  /** @param {ScopeParams} [parameters] */\n  constructor(parameters = {}) {\n    if (globals.scope) globals.scope.revertibles.push(this);\n    const rootParam = parameters.root;\n    /** @type {Document|DOMTarget} */\n    let root = doc;\n    if (rootParam) {\n      root = /** @type {ReactRef} */rootParam.current || /** @type {AngularRef} */rootParam.nativeElement || parseTargets(/** @type {DOMTargetSelector} */rootParam)[0] || doc;\n    }\n    const scopeDefaults = parameters.defaults;\n    const globalDefault = globals.defaults;\n    const mediaQueries = parameters.mediaQueries;\n    /** @type {DefaultsParams} */\n    this.defaults = scopeDefaults ? mergeObjects(scopeDefaults, globalDefault) : globalDefault;\n    /** @type {Document|DOMTarget} */\n    this.root = root;\n    /** @type {Array<ScopeConstructor>} */\n    this.constructors = [];\n    /** @type {Array<Function>} */\n    this.revertConstructors = [];\n    /** @type {Array<Revertible>} */\n    this.revertibles = [];\n    /** @type {Record<String, Function>} */\n    this.methods = {};\n    /** @type {Record<String, Boolean>} */\n    this.matches = {};\n    /** @type {Record<String, MediaQueryList>} */\n    this.mediaQueryLists = {};\n    /** @type {Record<String, any>} */\n    this.data = {};\n    if (mediaQueries) {\n      for (let mq in mediaQueries) {\n        const _mq = win.matchMedia(mediaQueries[mq]);\n        this.mediaQueryLists[mq] = _mq;\n        _mq.addEventListener('change', this);\n      }\n    }\n  }\n\n  /**\n   * @callback ScoppedCallback\n   * @param {this} scope\n   * @return {any}\n   *\n   * @param {ScoppedCallback} cb\n   * @return {this}\n   */\n  execute(cb) {\n    let activeScope = globals.scope;\n    let activeRoot = globals.root;\n    let activeDefaults = globals.defaults;\n    globals.scope = this;\n    globals.root = this.root;\n    globals.defaults = this.defaults;\n    const mqs = this.mediaQueryLists;\n    for (let mq in mqs) this.matches[mq] = mqs[mq].matches;\n    const returned = cb(this);\n    globals.scope = activeScope;\n    globals.root = activeRoot;\n    globals.defaults = activeDefaults;\n    return returned;\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    this.execute(() => {\n      let i = this.revertibles.length;\n      let y = this.revertConstructors.length;\n      while (i--) this.revertibles[i].revert();\n      while (y--) this.revertConstructors[y](this);\n      this.revertibles.length = 0;\n      this.revertConstructors.length = 0;\n      this.constructors.forEach(constructor => {\n        const revertConstructor = constructor(this);\n        if (revertConstructor) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * @callback contructorCallback\n   * @param {this} self\n   *\n   * @overload\n   * @param {String} a1\n   * @param {ScopeMethod} a2\n   * @return {this}\n   *\n   * @overload\n   * @param {contructorCallback} a1\n   * @return {this}\n   *\n   * @param {String|contructorCallback} a1\n   * @param {ScopeMethod} [a2]\n   */\n  add(a1, a2) {\n    if (isFnc(a1)) {\n      const constructor = /** @type {contructorCallback} */a1;\n      this.constructors.push(constructor);\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (revertConstructor) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    } else {\n      this.methods[(/** @type {String} */a1)] = (/** @type {any} */...args) => this.execute(() => a2(...args));\n    }\n    return this;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'change':\n        this.refresh();\n        break;\n    }\n  }\n  revert() {\n    const revertibles = this.revertibles;\n    const revertConstructors = this.revertConstructors;\n    const mqs = this.mediaQueryLists;\n    let i = revertibles.length;\n    let y = revertConstructors.length;\n    while (i--) revertibles[i].revert();\n    while (y--) revertConstructors[y](this);\n    for (let mq in mqs) mqs[mq].removeEventListener('change', this);\n    revertibles.length = 0;\n    revertConstructors.length = 0;\n    this.constructors.length = 0;\n    this.matches = {};\n    this.methods = {};\n    this.mediaQueryLists = {};\n    this.data = {};\n  }\n}\n\n/**\n * @param {ScopeParams} [params]\n * @return {Scope}\n */\nconst createScope = params => new Scope(params);\n\n/**\n * @typedef {String|Number} ScrollThresholdValue\n */\n\n/**\n * @return {Number}\n */\nconst getMaxViewHeight = () => {\n  const $el = document.createElement('div');\n  doc.body.appendChild($el);\n  $el.style.height = '100lvh';\n  const height = $el.offsetHeight;\n  doc.body.removeChild($el);\n  return height;\n};\n\n/**\n * @template {ScrollThresholdValue|String|Number|Boolean|Function|Object} T\n * @param {T | ((observer: ScrollObserver) => T)} value\n * @param {ScrollObserver} scroller\n * @return {T}\n */\nconst parseScrollObserverFunctionParameter = (value, scroller) => value && isFnc(value) ? /** @type {Function} */value(scroller) : value;\nconst scrollContainers = new Map();\nclass ScrollContainer {\n  /**\n   * @param {HTMLElement} $el\n   */\n  constructor($el) {\n    /** @type {HTMLElement} */\n    this.element = $el;\n    /** @type {Boolean} */\n    this.useWin = this.element === doc.body;\n    /** @type {Number} */\n    this.winWidth = 0;\n    /** @type {Number} */\n    this.winHeight = 0;\n    /** @type {Number} */\n    this.width = 0;\n    /** @type {Number} */\n    this.height = 0;\n    /** @type {Number} */\n    this.left = 0;\n    /** @type {Number} */\n    this.top = 0;\n    /** @type {Number} */\n    this.zIndex = 0;\n    /** @type {Number} */\n    this.scrollX = 0;\n    /** @type {Number} */\n    this.scrollY = 0;\n    /** @type {Number} */\n    this.prevScrollX = 0;\n    /** @type {Number} */\n    this.prevScrollY = 0;\n    /** @type {Number} */\n    this.scrollWidth = 0;\n    /** @type {Number} */\n    this.scrollHeight = 0;\n    /** @type {Number} */\n    this.velocity = 0;\n    /** @type {Boolean} */\n    this.backwardX = false;\n    /** @type {Boolean} */\n    this.backwardY = false;\n    /** @type {Timer} */\n    this.scrollTicker = new Timer({\n      autoplay: false,\n      onBegin: () => this.dataTimer.resume(),\n      onUpdate: () => {\n        const backwards = this.backwardX || this.backwardY;\n        forEachChildren(this, (/** @type {ScrollObserver} */child) => child.handleScroll(), backwards);\n      },\n      onComplete: () => this.dataTimer.pause()\n    }).init();\n    /** @type {Timer} */\n    this.dataTimer = new Timer({\n      autoplay: false,\n      frameRate: 30,\n      onUpdate: self => {\n        const dt = self.deltaTime;\n        const px = this.prevScrollX;\n        const py = this.prevScrollY;\n        const nx = this.scrollX;\n        const ny = this.scrollY;\n        const dx = px - nx;\n        const dy = py - ny;\n        this.prevScrollX = nx;\n        this.prevScrollY = ny;\n        if (dx) this.backwardX = px > nx;\n        if (dy) this.backwardY = py > ny;\n        this.velocity = round(dt > 0 ? Math.sqrt(dx * dx + dy * dy) / dt : 0, 5);\n      }\n    }).init();\n    /** @type {Timer} */\n    this.resizeTicker = new Timer({\n      autoplay: false,\n      duration: 250 * globals.timeScale,\n      onComplete: () => {\n        this.updateWindowBounds();\n        this.refreshScrollObservers();\n        this.handleScroll();\n      }\n    }).init();\n    /** @type {Timer} */\n    this.wakeTicker = new Timer({\n      autoplay: false,\n      duration: 500 * globals.timeScale,\n      onBegin: () => {\n        this.scrollTicker.resume();\n      },\n      onComplete: () => {\n        this.scrollTicker.pause();\n      }\n    }).init();\n    /** @type {ScrollObserver} */\n    this._head = null;\n    /** @type {ScrollObserver} */\n    this._tail = null;\n    this.updateScrollCoords();\n    this.updateWindowBounds();\n    this.updateBounds();\n    this.refreshScrollObservers();\n    this.handleScroll();\n    this.resizeObserver = new ResizeObserver(() => this.resizeTicker.restart());\n    this.resizeObserver.observe(this.element);\n    (this.useWin ? win : this.element).addEventListener('scroll', this, false);\n  }\n  updateScrollCoords() {\n    const useWin = this.useWin;\n    const $el = this.element;\n    this.scrollX = round(useWin ? win.scrollX : $el.scrollLeft, 0);\n    this.scrollY = round(useWin ? win.scrollY : $el.scrollTop, 0);\n  }\n  updateWindowBounds() {\n    this.winWidth = win.innerWidth;\n    this.winHeight = getMaxViewHeight();\n  }\n  updateBounds() {\n    const style = getComputedStyle(this.element);\n    const $el = this.element;\n    this.scrollWidth = $el.scrollWidth + parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    this.scrollHeight = $el.scrollHeight + parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    this.updateWindowBounds();\n    let width, height;\n    if (this.useWin) {\n      width = this.winWidth;\n      height = this.winHeight;\n    } else {\n      const elRect = $el.getBoundingClientRect();\n      width = elRect.width;\n      height = elRect.height;\n      this.top = elRect.top;\n      this.left = elRect.left;\n    }\n    this.width = width;\n    this.height = height;\n  }\n  refreshScrollObservers() {\n    forEachChildren(this, (/** @type {ScrollObserver} */child) => {\n      if (child._debug) {\n        child.removeDebug();\n      }\n    });\n    this.updateBounds();\n    forEachChildren(this, (/** @type {ScrollObserver} */child) => {\n      child.refresh();\n      if (child._debug) {\n        child.debug();\n      }\n    });\n  }\n  refresh() {\n    this.updateWindowBounds();\n    this.updateBounds();\n    this.refreshScrollObservers();\n    this.handleScroll();\n  }\n  handleScroll() {\n    this.updateScrollCoords();\n    this.wakeTicker.restart();\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'scroll':\n        this.handleScroll();\n        break;\n    }\n  }\n  revert() {\n    this.scrollTicker.cancel();\n    this.dataTimer.cancel();\n    this.resizeTicker.cancel();\n    this.wakeTicker.cancel();\n    this.resizeObserver.unobserve(this.element);\n    (this.useWin ? win : this.element).removeEventListener('scroll', this);\n    scrollContainers.delete(this.element);\n  }\n}\n\n/**\n * @param {TargetsParam} target\n * @return {ScrollContainer}\n */\nconst registerAndGetScrollContainer = target => {\n  const $el = /** @type {HTMLElement} */target ? parseTargets(target)[0] || doc.body : doc.body;\n  let scrollContainer = scrollContainers.get($el);\n  if (!scrollContainer) {\n    scrollContainer = new ScrollContainer($el);\n    scrollContainers.set($el, scrollContainer);\n  }\n  return scrollContainer;\n};\n\n/**\n * @param {HTMLElement} $el\n * @param {Number|string} v\n * @param {Number} size\n * @param {Number} [under]\n * @param {Number} [over]\n * @return {Number}\n */\nconst convertValueToPx = ($el, v, size, under, over) => {\n  const clampMin = v === 'min';\n  const clampMax = v === 'max';\n  const value = v === 'top' || v === 'left' || v === 'start' || clampMin ? 0 : v === 'bottom' || v === 'right' || v === 'end' || clampMax ? '100%' : v === 'center' ? '50%' : v;\n  const {\n    n,\n    u\n  } = decomposeRawValue(value, decomposedOriginalValue);\n  let px = n;\n  if (u === '%') {\n    px = n / 100 * size;\n  } else if (u) {\n    px = convertValueUnit($el, decomposedOriginalValue, 'px', true).n;\n  }\n  if (clampMax && under < 0) px += under;\n  if (clampMin && over > 0) px += over;\n  return px;\n};\n\n/**\n * @param {HTMLElement} $el\n * @param {ScrollThresholdValue} v\n * @param {Number} size\n * @param {Number} [under]\n * @param {Number} [over]\n * @return {Number}\n */\nconst parseBoundValue = ($el, v, size, under, over) => {\n  /** @type {Number} */\n  let value;\n  if (isStr(v)) {\n    const matchedOperator = relativeValuesExecRgx.exec(/** @type {String} */v);\n    if (matchedOperator) {\n      const splitter = matchedOperator[0];\n      const operator = splitter[0];\n      const splitted = /** @type {String} */v.split(splitter);\n      const clampMin = splitted[0] === 'min';\n      const clampMax = splitted[0] === 'max';\n      const valueAPx = convertValueToPx($el, splitted[0], size, under, over);\n      const valueBPx = convertValueToPx($el, splitted[1], size, under, over);\n      if (clampMin) {\n        const min = getRelativeValue(convertValueToPx($el, 'min', size), valueBPx, operator);\n        value = min < valueAPx ? valueAPx : min;\n      } else if (clampMax) {\n        const max = getRelativeValue(convertValueToPx($el, 'max', size), valueBPx, operator);\n        value = max > valueAPx ? valueAPx : max;\n      } else {\n        value = getRelativeValue(valueAPx, valueBPx, operator);\n      }\n    } else {\n      value = convertValueToPx($el, v, size, under, over);\n    }\n  } else {\n    value = /** @type {Number} */v;\n  }\n  return round(value, 0);\n};\n\n/**\n * @param {JSAnimation} linked\n * @return {HTMLElement}\n */\nconst getAnimationDomTarget = linked => {\n  let $linkedTarget;\n  const linkedTargets = linked.targets;\n  for (let i = 0, l = linkedTargets.length; i < l; i++) {\n    const target = linkedTargets[i];\n    if (target[isDomSymbol]) {\n      $linkedTarget = /** @type {HTMLElement} */target;\n      break;\n    }\n  }\n  return $linkedTarget;\n};\nlet scrollerIndex = 0;\nconst debugColors = ['#FF4B4B', '#FF971B', '#FFC730', '#F9F640', '#7AFF5A', '#18FF74', '#17E09B', '#3CFFEC', '#05DBE9', '#33B3F1', '#638CF9', '#C563FE', '#FF4FCF', '#F93F8A'];\n\n/**\n * @typedef {Object} ScrollThresholdParam\n * @property {ScrollThresholdValue} [target]\n * @property {ScrollThresholdValue} [container]\n */\n\n/**\n * @callback ScrollObserverAxisCallback\n * @param {ScrollObserver} self\n * @return {'x'|'y'}\n */\n\n/**\n * @callback ScrollThresholdCallback\n * @param {ScrollObserver} self\n * @return {ScrollThresholdValue|ScrollThresholdParam}\n */\n\n/**\n * @typedef {Object} ScrollObserverParams\n * @property {Number|String} [id]\n * @property {Boolean|Number|String|EasingParam} [sync]\n * @property {TargetsParam} [container]\n * @property {TargetsParam} [target]\n * @property {'x'|'y'|ScrollObserverAxisCallback|((observer: ScrollObserver) => 'x'|'y'|ScrollObserverAxisCallback)} [axis]\n * @property {ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback|((observer: ScrollObserver) => ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback)} [enter]\n * @property {ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback|((observer: ScrollObserver) => ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback)} [leave]\n * @property {Boolean|((observer: ScrollObserver) => Boolean)} [repeat]\n * @property {Boolean} [debug]\n * @property {Callback<ScrollObserver>} [onEnter]\n * @property {Callback<ScrollObserver>} [onLeave]\n * @property {Callback<ScrollObserver>} [onEnterForward]\n * @property {Callback<ScrollObserver>} [onLeaveForward]\n * @property {Callback<ScrollObserver>} [onEnterBackward]\n * @property {Callback<ScrollObserver>} [onLeaveBackward]\n * @property {Callback<ScrollObserver>} [onUpdate]\n * @property {Callback<ScrollObserver>} [onSyncComplete]\n */\n\nclass ScrollObserver {\n  /**\n   * @param {ScrollObserverParams} parameters\n   */\n  constructor(parameters = {}) {\n    if (globals.scope) globals.scope.revertibles.push(this);\n    const syncMode = setValue(parameters.sync, 'play pause');\n    const ease = syncMode ? parseEasings(/** @type {EasingParam} */syncMode) : null;\n    const isLinear = syncMode && (syncMode === 'linear' || syncMode === none);\n    const isEase = syncMode && !(ease === none && !isLinear);\n    const isSmooth = syncMode && (isNum(syncMode) || syncMode === true || isLinear);\n    const isMethods = syncMode && isStr(syncMode) && !isEase && !isSmooth;\n    const syncMethods = isMethods ? /** @type {String} */syncMode.split(' ').map((/** @type {String} */m) => () => {\n      const linked = this.linked;\n      return linked && linked[m] ? linked[m]() : null;\n    }) : null;\n    const biDirSync = isMethods && syncMethods.length > 2;\n    /** @type {Number} */\n    this.index = scrollerIndex++;\n    /** @type {String|Number} */\n    this.id = !isUnd(parameters.id) ? parameters.id : this.index;\n    /** @type {ScrollContainer} */\n    this.container = registerAndGetScrollContainer(parameters.container);\n    /** @type {HTMLElement} */\n    this.target = null;\n    /** @type {Tickable|WAAPIAnimation} */\n    this.linked = null;\n    /** @type {Boolean} */\n    this.repeat = null;\n    /** @type {Boolean} */\n    this.horizontal = null;\n    /** @type {ScrollThresholdParam|ScrollThresholdValue|ScrollThresholdCallback} */\n    this.enter = null;\n    /** @type {ScrollThresholdParam|ScrollThresholdValue|ScrollThresholdCallback} */\n    this.leave = null;\n    /** @type {Boolean} */\n    this.sync = isEase || isSmooth || !!syncMethods;\n    /** @type {EasingFunction} */\n    this.syncEase = isEase ? ease : null;\n    /** @type {Number} */\n    this.syncSmooth = isSmooth ? syncMode === true || isLinear ? 1 : (/** @type {Number} */syncMode) : null;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnter = syncMethods && !biDirSync && syncMethods[0] ? syncMethods[0] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeave = syncMethods && !biDirSync && syncMethods[1] ? syncMethods[1] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnterForward = syncMethods && biDirSync && syncMethods[0] ? syncMethods[0] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeaveForward = syncMethods && biDirSync && syncMethods[1] ? syncMethods[1] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnterBackward = syncMethods && biDirSync && syncMethods[2] ? syncMethods[2] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeaveBackward = syncMethods && biDirSync && syncMethods[3] ? syncMethods[3] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnter = parameters.onEnter || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeave = parameters.onLeave || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnterForward = parameters.onEnterForward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeaveForward = parameters.onLeaveForward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnterBackward = parameters.onEnterBackward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeaveBackward = parameters.onLeaveBackward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onUpdate = parameters.onUpdate || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncComplete = parameters.onSyncComplete || noop;\n    /** @type {Boolean} */\n    this.reverted = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.began = false;\n    /** @type {Boolean} */\n    this.isInView = false;\n    /** @type {Boolean} */\n    this.forceEnter = false;\n    /** @type {Boolean} */\n    this.hasEntered = false;\n    /** @type {Array.<Number>} */\n    this.offsets = [];\n    /** @type {Number} */\n    this.offset = 0;\n    /** @type {Number} */\n    this.offsetStart = 0;\n    /** @type {Number} */\n    this.offsetEnd = 0;\n    /** @type {Number} */\n    this.distance = 0;\n    /** @type {Number} */\n    this.prevProgress = 0;\n    /** @type {Array} */\n    this.thresholds = ['start', 'end', 'end', 'start'];\n    /** @type {[Number, Number, Number, Number]} */\n    this.coords = [0, 0, 0, 0];\n    /** @type {JSAnimation} */\n    this.debugStyles = null;\n    /** @type {HTMLElement} */\n    this.$debug = null;\n    /** @type {ScrollObserverParams} */\n    this._params = parameters;\n    /** @type {Boolean} */\n    this._debug = setValue(parameters.debug, false);\n    /** @type {ScrollObserver} */\n    this._next = null;\n    /** @type {ScrollObserver} */\n    this._prev = null;\n    addChild(this.container, this);\n    // Wait for the next frame to add to the container in order to handle calls to link()\n    sync(() => {\n      if (this.reverted) return;\n      if (!this.target) {\n        const target = /** @type {HTMLElement} */parseTargets(parameters.target)[0];\n        this.target = target || doc.body;\n        this.refresh();\n      }\n      if (this._debug) this.debug();\n    });\n  }\n\n  /**\n   * @param {Tickable|WAAPIAnimation} linked\n   */\n  link(linked) {\n    if (linked) {\n      // Make sure to pause the linked object in case it's added later\n      linked.pause();\n      this.linked = linked;\n      // Try to use a target of the linked object if no target parameters specified\n      if (!this._params.target) {\n        /** @type {HTMLElement} */\n        let $linkedTarget;\n        if (!isUnd(/** @type {JSAnimation} */linked.targets)) {\n          $linkedTarget = getAnimationDomTarget(/** @type {JSAnimation} */linked);\n        } else {\n          forEachChildren(/** @type {Timeline} */linked, (/** @type {JSAnimation} */child) => {\n            if (child.targets && !$linkedTarget) {\n              $linkedTarget = getAnimationDomTarget(/** @type {JSAnimation} */child);\n            }\n          });\n        }\n        // Fallback to body if no target found\n        this.target = $linkedTarget || doc.body;\n        this.refresh();\n      }\n    }\n    return this;\n  }\n  get velocity() {\n    return this.container.velocity;\n  }\n  get backward() {\n    return this.horizontal ? this.container.backwardX : this.container.backwardY;\n  }\n  get scroll() {\n    return this.horizontal ? this.container.scrollX : this.container.scrollY;\n  }\n  get progress() {\n    const p = (this.scroll - this.offsetStart) / this.distance;\n    return p === Infinity || isNaN(p) ? 0 : round(clamp(p, 0, 1), 6);\n  }\n  refresh() {\n    this.reverted = false;\n    const params = this._params;\n    this.repeat = setValue(parseScrollObserverFunctionParameter(params.repeat, this), true);\n    this.horizontal = setValue(parseScrollObserverFunctionParameter(params.axis, this), 'y') === 'x';\n    this.enter = setValue(parseScrollObserverFunctionParameter(params.enter, this), 'end start');\n    this.leave = setValue(parseScrollObserverFunctionParameter(params.leave, this), 'start end');\n    this.updateBounds();\n    this.handleScroll();\n    return this;\n  }\n  removeDebug() {\n    if (this.$debug) {\n      this.$debug.parentNode.removeChild(this.$debug);\n      this.$debug = null;\n    }\n    if (this.debugStyles) {\n      this.debugStyles.revert();\n      this.$debug = null;\n    }\n    return this;\n  }\n  debug() {\n    this.removeDebug();\n    const container = this.container;\n    const isHori = this.horizontal;\n    const $existingDebug = container.element.querySelector(':scope > .animejs-onscroll-debug');\n    const $debug = doc.createElement('div');\n    const $thresholds = doc.createElement('div');\n    const $triggers = doc.createElement('div');\n    const color = debugColors[this.index % debugColors.length];\n    const useWin = container.useWin;\n    const containerWidth = useWin ? container.winWidth : container.width;\n    const containerHeight = useWin ? container.winHeight : container.height;\n    const scrollWidth = container.scrollWidth;\n    const scrollHeight = container.scrollHeight;\n    const size = this.container.width > 360 ? 320 : 260;\n    const offLeft = isHori ? 0 : 10;\n    const offTop = isHori ? 10 : 0;\n    const half = isHori ? 24 : size / 2;\n    const labelHeight = isHori ? half : 15;\n    const labelWidth = isHori ? 60 : half;\n    const labelSize = isHori ? labelWidth : labelHeight;\n    const repeat = isHori ? 'repeat-x' : 'repeat-y';\n    /**\n     * @param {Number} v\n     * @return {String}\n     */\n    const gradientOffset = v => isHori ? '0px ' + v + 'px' : v + 'px' + ' 2px';\n    /**\n     * @param {String} c\n     * @return {String}\n     */\n    const lineCSS = c => `linear-gradient(${isHori ? 90 : 0}deg, ${c} 2px, transparent 1px)`;\n    /**\n     * @param {String} p\n     * @param {Number} l\n     * @param {Number} t\n     * @param {Number} w\n     * @param {Number} h\n     * @return {String}\n     */\n    const baseCSS = (p, l, t, w, h) => `position:${p};left:${l}px;top:${t}px;width:${w}px;height:${h}px;`;\n    $debug.style.cssText = `${baseCSS('absolute', offLeft, offTop, isHori ? scrollWidth : size, isHori ? size : scrollHeight)}\n      pointer-events: none;\n      z-index: ${this.container.zIndex++};\n      display: flex;\n      flex-direction: ${isHori ? 'column' : 'row'};\n      filter: drop-shadow(0px 1px 0px rgba(0,0,0,.75));\n    `;\n    $thresholds.style.cssText = `${baseCSS('sticky', 0, 0, isHori ? containerWidth : half, isHori ? half : containerHeight)}`;\n    if (!$existingDebug) {\n      $thresholds.style.cssText += `background:\n        ${lineCSS('#FFFF')}${gradientOffset(half - 10)} / ${isHori ? '100px 100px' : '100px 100px'} ${repeat},\n        ${lineCSS('#FFF8')}${gradientOffset(half - 10)} / ${isHori ? '10px 10px' : '10px 10px'} ${repeat};\n      `;\n    }\n    $triggers.style.cssText = `${baseCSS('relative', 0, 0, isHori ? scrollWidth : half, isHori ? half : scrollHeight)}`;\n    if (!$existingDebug) {\n      $triggers.style.cssText += `background:\n        ${lineCSS('#FFFF')}${gradientOffset(0)} / ${isHori ? '100px 10px' : '10px 100px'} ${repeat},\n        ${lineCSS('#FFF8')}${gradientOffset(0)} / ${isHori ? '10px 0px' : '0px 10px'} ${repeat};\n      `;\n    }\n    const labels = [' enter: ', ' leave: '];\n    this.coords.forEach((v, i) => {\n      const isView = i > 1;\n      const value = (isView ? 0 : this.offset) + v;\n      const isTail = i % 2;\n      const isFirst = value < labelSize;\n      const isOver = value > (isView ? isHori ? containerWidth : containerHeight : isHori ? scrollWidth : scrollHeight) - labelSize;\n      const isFlip = (isView ? isTail && !isFirst : !isTail && !isFirst) || isOver;\n      const $label = doc.createElement('div');\n      const $text = doc.createElement('div');\n      const dirProp = isHori ? isFlip ? 'right' : 'left' : isFlip ? 'bottom' : 'top';\n      const flipOffset = isFlip ? (isHori ? labelWidth : labelHeight) + (!isView ? isHori ? -1 : -2 : isHori ? -1 : isOver ? 0 : -2) : !isView ? isHori ? 1 : 0 : isHori ? 1 : 0;\n      // $text.innerHTML = `${!isView ? '' : labels[isTail] + ' '}${this.id}: ${this.thresholds[i]} ${isView ? '' : labels[isTail]}`;\n      $text.innerHTML = `${this.id}${labels[isTail]}${this.thresholds[i]}`;\n      $label.style.cssText = `${baseCSS('absolute', 0, 0, labelWidth, labelHeight)}\n        display: flex;\n        flex-direction: ${isHori ? 'column' : 'row'};\n        justify-content: flex-${isView ? 'start' : 'end'};\n        align-items: flex-${isFlip ? 'end' : 'start'};\n        border-${dirProp}: 2px ${isTail ? 'solid' : 'solid'} ${color};\n      `;\n      $text.style.cssText = `\n        overflow: hidden;\n        max-width: ${size / 2 - 10}px;\n        height: ${labelHeight};\n        margin-${isHori ? isFlip ? 'right' : 'left' : isFlip ? 'bottom' : 'top'}: -2px;\n        padding: 1px;\n        font-family: ui-monospace, monospace;\n        font-size: 10px;\n        letter-spacing: -.025em;\n        line-height: 9px;\n        font-weight: 600;\n        text-align: ${isHori && isFlip || !isHori && !isView ? 'right' : 'left'};\n        white-space: pre;\n        text-overflow: ellipsis;\n        color: ${isTail ? color : 'rgba(0,0,0,.75)'};\n        background-color: ${isTail ? 'rgba(0,0,0,.65)' : color};\n        border: 2px solid ${isTail ? color : 'transparent'};\n        border-${isHori ? isFlip ? 'top-left' : 'top-right' : isFlip ? 'top-left' : 'bottom-left'}-radius: 5px;\n        border-${isHori ? isFlip ? 'bottom-left' : 'bottom-right' : isFlip ? 'top-right' : 'bottom-right'}-radius: 5px;\n      `;\n      $label.appendChild($text);\n      let position = value - flipOffset + (isHori ? 1 : 0);\n      $label.style[isHori ? 'left' : 'top'] = `${position}px`;\n      // $label.style[isHori ? 'left' : 'top'] = value - flipOffset + (!isFlip && isFirst && !isView ? 1 : isFlip ? 0 : -2) + 'px';\n      (isView ? $thresholds : $triggers).appendChild($label);\n    });\n    $debug.appendChild($thresholds);\n    $debug.appendChild($triggers);\n    container.element.appendChild($debug);\n    if (!$existingDebug) $debug.classList.add('animejs-onscroll-debug');\n    this.$debug = $debug;\n    const containerPosition = getTargetValue(container.element, 'position');\n    if (containerPosition === 'static') {\n      this.debugStyles = setTargetValues(container.element, {\n        position: 'relative '\n      });\n    }\n  }\n  updateBounds() {\n    if (this._debug) {\n      this.removeDebug();\n    }\n    let stickys;\n    const $target = this.target;\n    const container = this.container;\n    const isHori = this.horizontal;\n    const linked = this.linked;\n    let linkedTime;\n    let $el = $target;\n    let offsetX = 0;\n    let offsetY = 0;\n    /** @type {Element} */\n    let $offsetParent = $el;\n    if (linked) {\n      linkedTime = linked.currentTime;\n      linked.seek(0, true);\n    }\n    const isContainerStatic = getTargetValue(container.element, 'position') === 'static' ? setTargetValues(container.element, {\n      position: 'relative '\n    }) : false;\n    while ($el && $el !== container.element && $el !== doc.body) {\n      const isSticky = getTargetValue($el, 'position') === 'sticky' ? setTargetValues($el, {\n        position: 'static'\n      }) : false;\n      if ($el === $offsetParent) {\n        offsetX += $el.offsetLeft || 0;\n        offsetY += $el.offsetTop || 0;\n        $offsetParent = $el.offsetParent;\n      }\n      $el = /** @type {HTMLElement} */$el.parentElement;\n      if (isSticky) {\n        if (!stickys) stickys = [];\n        stickys.push(isSticky);\n      }\n    }\n    if (isContainerStatic) isContainerStatic.revert();\n    const offset = isHori ? offsetX : offsetY;\n    const targetSize = isHori ? $target.offsetWidth : $target.offsetHeight;\n    const containerSize = isHori ? container.width : container.height;\n    const scrollSize = isHori ? container.scrollWidth : container.scrollHeight;\n    const maxScroll = scrollSize - containerSize;\n    const enter = this.enter;\n    const leave = this.leave;\n\n    /** @type {ScrollThresholdValue} */\n    let enterTarget = 'start';\n    /** @type {ScrollThresholdValue} */\n    let leaveTarget = 'end';\n    /** @type {ScrollThresholdValue} */\n    let enterContainer = 'end';\n    /** @type {ScrollThresholdValue} */\n    let leaveContainer = 'start';\n    if (isStr(enter)) {\n      const splitted = /** @type {String} */enter.split(' ');\n      enterContainer = splitted[0];\n      enterTarget = splitted.length > 1 ? splitted[1] : enterTarget;\n    } else if (isObj(enter)) {\n      const e = /** @type {ScrollThresholdParam} */enter;\n      if (!isUnd(e.container)) enterContainer = e.container;\n      if (!isUnd(e.target)) enterTarget = e.target;\n    } else if (isNum(enter)) {\n      enterContainer = /** @type {Number} */enter;\n    }\n    if (isStr(leave)) {\n      const splitted = /** @type {String} */leave.split(' ');\n      leaveContainer = splitted[0];\n      leaveTarget = splitted.length > 1 ? splitted[1] : leaveTarget;\n    } else if (isObj(leave)) {\n      const t = /** @type {ScrollThresholdParam} */leave;\n      if (!isUnd(t.container)) leaveContainer = t.container;\n      if (!isUnd(t.target)) leaveTarget = t.target;\n    } else if (isNum(leave)) {\n      leaveContainer = /** @type {Number} */leave;\n    }\n    const parsedEnterTarget = parseBoundValue($target, enterTarget, targetSize);\n    const parsedLeaveTarget = parseBoundValue($target, leaveTarget, targetSize);\n    const under = parsedEnterTarget + offset - containerSize;\n    const over = parsedLeaveTarget + offset - maxScroll;\n    const parsedEnterContainer = parseBoundValue($target, enterContainer, containerSize, under, over);\n    const parsedLeaveContainer = parseBoundValue($target, leaveContainer, containerSize, under, over);\n    const offsetStart = parsedEnterTarget + offset - parsedEnterContainer;\n    const offsetEnd = parsedLeaveTarget + offset - parsedLeaveContainer;\n    const scrollDelta = offsetEnd - offsetStart;\n    this.offsets[0] = offsetX;\n    this.offsets[1] = offsetY;\n    this.offset = offset;\n    this.offsetStart = offsetStart;\n    this.offsetEnd = offsetEnd;\n    this.distance = scrollDelta <= 0 ? 0 : scrollDelta;\n    this.thresholds = [enterTarget, leaveTarget, enterContainer, leaveContainer];\n    this.coords = [parsedEnterTarget, parsedLeaveTarget, parsedEnterContainer, parsedLeaveContainer];\n    if (stickys) {\n      stickys.forEach(sticky => sticky.revert());\n    }\n    if (linked) {\n      linked.seek(linkedTime, true);\n    }\n    if (this._debug) {\n      this.debug();\n    }\n  }\n  handleScroll() {\n    const linked = this.linked;\n    const sync = this.sync;\n    const syncEase = this.syncEase;\n    const syncSmooth = this.syncSmooth;\n    const shouldSeek = linked && (syncEase || syncSmooth);\n    const isHori = this.horizontal;\n    const container = this.container;\n    const scroll = this.scroll;\n    const isBefore = scroll <= this.offsetStart;\n    const isAfter = scroll >= this.offsetEnd;\n    const isInView = !isBefore && !isAfter;\n    const isOnTheEdge = scroll === this.offsetStart || scroll === this.offsetEnd;\n    const forceEnter = !this.hasEntered && isOnTheEdge;\n    const $debug = this._debug && this.$debug;\n    let hasUpdated = false;\n    let syncCompleted = false;\n    let p = this.progress;\n    if (isBefore && this.began) {\n      this.began = false;\n    }\n    if (p > 0 && !this.began) {\n      this.began = true;\n    }\n    if (shouldSeek) {\n      const lp = linked.progress;\n      if (syncSmooth && isNum(syncSmooth)) {\n        if (/** @type {Number} */syncSmooth < 1) {\n          const step = 0.0001;\n          const snap = lp < p && p === 1 ? step : lp > p && !p ? -1e-4 : 0;\n          p = round(lerp(lp, p, interpolate(.01, .2, /** @type {Number} */syncSmooth), false) + snap, 6);\n        }\n      } else if (syncEase) {\n        p = syncEase(p);\n      }\n      hasUpdated = p !== this.prevProgress;\n      syncCompleted = lp === 1;\n      if (hasUpdated && !syncCompleted && syncSmooth && lp) {\n        container.wakeTicker.restart();\n      }\n    }\n    if ($debug) {\n      const sticky = isHori ? container.scrollY : container.scrollX;\n      $debug.style[isHori ? 'top' : 'left'] = sticky + 10 + 'px';\n    }\n\n    // Trigger enter callbacks if already in view or when entering the view\n    if (isInView && !this.isInView || forceEnter && !this.forceEnter && !this.hasEntered) {\n      if (isInView) this.isInView = true;\n      if (!this.forceEnter || !this.hasEntered) {\n        if ($debug && isInView) $debug.style.zIndex = `${this.container.zIndex++}`;\n        this.onSyncEnter(this);\n        this.onEnter(this);\n        if (this.backward) {\n          this.onSyncEnterBackward(this);\n          this.onEnterBackward(this);\n        } else {\n          this.onSyncEnterForward(this);\n          this.onEnterForward(this);\n        }\n        this.hasEntered = true;\n        if (forceEnter) this.forceEnter = true;\n      } else if (isInView) {\n        this.forceEnter = false;\n      }\n    }\n    if (isInView || !isInView && this.isInView) {\n      hasUpdated = true;\n    }\n    if (hasUpdated) {\n      if (shouldSeek) linked.seek(linked.duration * p);\n      this.onUpdate(this);\n    }\n    if (!isInView && this.isInView) {\n      this.isInView = false;\n      this.onSyncLeave(this);\n      this.onLeave(this);\n      if (this.backward) {\n        this.onSyncLeaveBackward(this);\n        this.onLeaveBackward(this);\n      } else {\n        this.onSyncLeaveForward(this);\n        this.onLeaveForward(this);\n      }\n      if (sync && !syncSmooth) {\n        syncCompleted = true;\n      }\n    }\n    if (p >= 1 && this.began && !this.completed && (sync && syncCompleted || !sync)) {\n      if (sync) {\n        this.onSyncComplete(this);\n      }\n      this.completed = true;\n      if (!this.repeat && !linked || !this.repeat && linked && linked.completed) {\n        this.revert();\n      }\n    }\n    if (p < 1 && this.completed) {\n      this.completed = false;\n    }\n    this.prevProgress = p;\n  }\n  revert() {\n    if (this.reverted) return;\n    const container = this.container;\n    removeChild(container, this);\n    if (!container._head) {\n      container.revert();\n    }\n    if (this._debug) {\n      this.removeDebug();\n    }\n    this.reverted = true;\n    return this;\n  }\n}\n\n/**\n * @param {ScrollObserverParams} [parameters={}]\n * @return {ScrollObserver}\n */\nconst onScroll = (parameters = {}) => new ScrollObserver(parameters);\n\n/**\n * @typedef  {Object} StaggerParameters\n * @property {Number|String} [start]\n * @property {Number|'first'|'center'|'last'} [from]\n * @property {Boolean} [reversed]\n * @property {Array.<Number>} [grid]\n * @property {('x'|'y')} [axis]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n */\n\n/**\n * @callback StaggerFunction\n * @param {Target} [target]\n * @param {Number} [index]\n * @param {Number} [length]\n * @param {Timeline} [tl]\n * @return {Number|String}\n */\n\n/**\n * @param  {Number|String|[Number|String,Number|String]} val\n * @param  {StaggerParameters} params\n * @return {StaggerFunction}\n */\nconst stagger = (val, params = {}) => {\n  let values = [];\n  let maxValue = 0;\n  const from = params.from;\n  const reversed = params.reversed;\n  const ease = params.ease;\n  const hasEasing = !isUnd(ease);\n  const hasSpring = hasEasing && !isUnd(/** @type {Spring} */ease.ease);\n  const staggerEase = hasSpring ? /** @type {Spring} */ease.ease : hasEasing ? parseEasings(ease) : null;\n  const grid = params.grid;\n  const axis = params.axis;\n  const fromFirst = isUnd(from) || from === 0 || from === 'first';\n  const fromCenter = from === 'center';\n  const fromLast = from === 'last';\n  const isRange = isArr(val);\n  const val1 = isRange ? parseNumber(val[0]) : parseNumber(val);\n  const val2 = isRange ? parseNumber(val[1]) : 0;\n  const unitMatch = unitsExecRgx.exec((isRange ? val[1] : val) + emptyString);\n  const start = params.start || 0 + (isRange ? val1 : 0);\n  let fromIndex = fromFirst ? 0 : isNum(from) ? from : 0;\n  return (_, i, t, tl) => {\n    if (fromCenter) fromIndex = (t - 1) / 2;\n    if (fromLast) fromIndex = t - 1;\n    if (!values.length) {\n      for (let index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(abs(fromIndex - index));\n        } else {\n          const fromX = !fromCenter ? fromIndex % grid[0] : (grid[0] - 1) / 2;\n          const fromY = !fromCenter ? floor(fromIndex / grid[0]) : (grid[1] - 1) / 2;\n          const toX = index % grid[0];\n          const toY = floor(index / grid[0]);\n          const distanceX = fromX - toX;\n          const distanceY = fromY - toY;\n          let value = sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') value = -distanceX;\n          if (axis === 'y') value = -distanceY;\n          values.push(value);\n        }\n        maxValue = max(...values);\n      }\n      if (staggerEase) values = values.map(val => staggerEase(val / maxValue) * maxValue);\n      if (reversed) values = values.map(val => axis ? val < 0 ? val * -1 : -val : abs(maxValue - val));\n    }\n    const spacing = isRange ? (val2 - val1) / maxValue : val1;\n    const offset = tl ? parseTimelinePosition(tl, isUnd(params.start) ? tl.iterationDuration : start) : (/** @type {Number} */start);\n    /** @type {String|Number} */\n    let output = offset + (spacing * round(values[i], 2) || 0);\n    if (params.modifier) output = params.modifier(output);\n    if (unitMatch) output = `${output}${unitMatch[2]}`;\n    return output;\n  };\n};\nexport { Animatable, Draggable, JSAnimation, Scope, ScrollObserver, Spring, Timeline, Timer, WAAPIAnimation, animate, createAnimatable, createDraggable, createScope, createSpring, createTimeline, createTimer, eases, engine, onScroll, scrollContainers, stagger, svg, utils, waapi };","map":{"version":3,"names":["isBrowser","window","win","doc","document","tweenTypes","OBJECT","ATTRIBUTE","CSS","TRANSFORM","CSS_VAR","valueTypes","NUMBER","UNIT","COLOR","COMPLEX","tickModes","NONE","AUTO","FORCE","compositionTypes","replace","none","blend","isRegisteredTargetSymbol","Symbol","isDomSymbol","isSvgSymbol","transformsSymbol","morphPointsSymbol","proxyTargetSymbol","minValue","maxValue","K","maxFps","emptyString","shortTransforms","Map","set","validTransforms","transformsFragmentStrings","reduce","a","v","noop","hexTestRgx","rgbExecRgx","rgbaExecRgx","hslExecRgx","hslaExecRgx","digitWithExponentRgx","unitsExecRgx","lowerCaseRgx","transformsExecRgx","relativeValuesExecRgx","defaults","id","keyframes","playbackEase","playbackRate","frameRate","loop","reversed","alternate","autoplay","duration","delay","loopDelay","ease","composition","modifier","onBegin","onBeforeUpdate","onUpdate","onLoop","onPause","onComplete","onRender","globals","root","scope","precision","timeScale","tickThreshold","globalVersions","version","engine","AnimeJS","push","toLowerCase","str","stringStartsWith","sub","indexOf","now","Date","isArr","Array","isArray","isObj","constructor","Object","isNum","isNaN","isStr","isFnc","isUnd","isNil","isSvg","SVGElement","isHex","test","isRgb","isHsl","isCol","isKey","hasOwnProperty","parseNumber","parseFloat","pow","Math","sqrt","sin","cos","abs","exp","ceil","floor","asin","max","atan2","PI","_round","round","clamp","min","powCache","decimalLength","p","snap","increment","closest","cv","interpolate","start","end","progress","clampInfinity","Infinity","normalizeTime","cloneArray","mergeObjects","o1","o2","merged","o1p","forEachChildren","parent","callback","reverse","prevProp","nextProp","next","_head","adjustedNextProp","_tail","currentNext","removeChild","child","prev","addChild","sortMethod","Clock","initTime","deltaTime","_currentTime","_elapsedTime","_startTime","_lastTime","_scheduledTime","_frameDuration","_fps","_speed","_hasChildren","fps","previousFrameDuration","fr","frameDuration","speed","pbr","requestTick","time","scheduledTime","elapsedTime","frameDelta","computeDeltaTime","delta","render","tickable","muteCallbacks","internalRender","tickMode","completed","iterationDuration","iterationCount","_currentIteration","_loopDelay","_reversed","_alternate","tickableDelay","_delay","tickablePrevAbsoluteTime","tickableEndTime","tickableAbsoluteTime","tickablePrevTime","tickableCurrentTime","isCurrentTimeAboveZero","isCurrentTimeEqualOrAboveDuration","isSetter","forcedTick","isOdd","iterationElapsedTime","hasRendered","currentIteration","isReversed","_ease","iterationTime","isRunningBackwards","backwards","_iterationTime","began","forcedRender","absoluteTime","_offset","tween","tweenTarget","tweenStyle","tweenTargetTransforms","tweenTargetTransformsProperties","tweenTransformsNeedUpdate","tweenComposition","_composition","tweenCurrentTime","tweenChangeDuration","_changeDuration","tweenAbsEndTime","_absoluteStartTime","tweenNextRep","_nextRep","tweenPrevRep","_prevRep","tweenHasComposition","_isOverridden","_isOverlapped","tweenNewTime","tweenProgress","_updateDuration","tweenModifier","_modifier","tweenValueType","_valueType","tweenType","_tweenType","tweenIsObject","tweenIsNumber","tweenPrecision","value","number","_fromNumber","_toNumber","_unit","fn","_fromNumbers","tn","_toNumbers","r","g","b","ns","_numbers","_strings","j","l","length","n","s","_number","tweenProperty","property","target","setAttribute","style","setProperty","_value","_renderTransforms","key","transform","_next","paused","_resolve","tick","tl","tlIsRunningBackwards","tlChildrenTime","tlCildrenTickTime","tlChildrenHasRendered","tlChildrenHaveCompleted","tlIterationDuration","childDuration","childStartTime","childEndTime","childTime","childTickMode","additive","animation","update","addAdditiveAnimation","lookups","forEach","propertyAnimation","propertyName","tweens","lookupTween","valueType","additiveValues","additiveValue","i","_prevAdd","engineTickMethod","requestAnimationFrame","setImmediate","engineCancelMethod","cancelAnimationFrame","clearImmediate","Engine","useDefaultMainLoop","pauseOnDocumentHidden","hidden","reqId","engineSpeed","engineFps","activeTickable","nextTickable","_running","_cancelled","cancel","wake","tickEngine","pause","killEngine","resume","resetTime","timeUnit","unit","secondsScale","isSecond","newScale","scaleFactor","addEventListener","parseInlineTransforms","propName","animationInlineStyles","inlineTransforms","inlinedStylesPropertyValue","cachedTransforms","t","exec","inlinePropertyName","inlinePropertyValue","slice","getNodeList","querySelectorAll","NodeList","HTMLCollection","parseTargets","targets","flattened","flat","parsed","item","nodeList","jl","subItem","isDuplicate","k","kl","from","registerTargets","parsedTargetsArray","parsedTargetsLength","isSvgType","isDom","nodeType","getPath","path","parsedTargets","$parsedSvg","morphTo","path2","$path1","$path2","isPath","tagName","separator","previousPoints","v1","v2","getAttribute","length1","getTotalLength","length2","maxPoints","pointOnPath1","getPointAtLength","pointOnPath2","prefix","x","y","getScaleFactor","$el","getCTM","ctm","scaleX","scaleY","c","d","createDrawableProxy","pathLength","computedStyles","getComputedStyle","strokeLineCap","strokeLinecap","$scalled","vectorEffect","currentCap","proxy","Proxy","get","args","values","split","os","d1","d2","newCap","Reflect","apply","createDrawable","selector","els","map","getPathPoint","$path","lookup","getPathProgess","pathProperty","totalLength","inSvg","to","p0","p1","e","f","createMotionPath","translateX","translateY","rotate","cssReservedProperties","isValidSVGAttribute","el","includes","elParentNode","parentNode","svg","rgbToRgba","rgbValue","rgba","hexToRgba","hexValue","hexLength","isShort","toFixed","hue2rgb","q","hslToRgba","hslValue","hsla","h","convertColorStringValuesToRgbaArray","colorString","setValue","targetValue","defaultValue","getFunctionValue","index","total","store","func","computed","getTweenType","prop","getCSSValue","inlineStyles","getPropertyValue","getOriginalAnimatableValue","type","trimStart","getRelativeValue","operator","createDecomposedValueTargetObject","u","o","decomposeRawValue","rawValue","targetObject","num","unitMatch","matchedNumbers","match","Number","decomposeTweenValue","decomposedOriginalValue","_rep","WeakMap","_add","getTweenSiblings","lookupMap","targetLookup","addTweenSortMethod","overrideTween","composeTween","siblings","tweenCompositionType","tweenAbsStartTime","prevSibling","prevParent","prevAbsEndTime","prevPrevSibling","absoluteUpdateStartTime","prevChangeStartTime","prevTLOffset","pausePrevParentAnimation","prevParentTL","pausePrevParentTL","additiveTweenSiblings","additiveAnimation","_prev","toNumber","toNumbers","removeTweenSliblings","replaceTweensLookup","replaceTargetProps","tweenReplaceSiblings","addTweensLookup","addTargetProps","shouldClean","delete","resetTimerProperties","timer","reviveTimer","timerId","Timer","parameters","parentPosition","revertibles","timerInitTime","timerDefaults","timerDelay","timerDuration","timerLoop","timerLoopDelay","timerIterationCount","offsetPosition","startTime","_autoplay","_reverse","cancelled","reset","play","currentTime","seek","iterationCurrentTime","iterationProgress","init","linked","link","restart","isPaused","count","iterations","stretch","newDuration","currentDuration","normlizedDuration","revert","ap","complete","then","onResolve","Promise","createTimer","calcBezier","aT","aA1","aA2","binarySubdivide","aX","mX1","mX2","aA","aB","currentX","currentT","cubicBezier","mY1","mY2","steps","fromStart","roundMethod","linear","argsLength","totalPoints","firstArg","lastArg","xPoints","yPoints","arg","splitValue","trim","percent","easeLinear","prevX","prevY","irregular","randomness","previousValue","spacing","segmentEnd","randomVariation","random","randomValue","halfPI","doublePI","easeInPower","easeInFunctions","Quad","Cubic","Quart","Quint","Sine","Circ","Expo","Bounce","pow2","Back","overshoot","Elastic","amplitude","period","easeTypes","in","easeIn","out","inOut","outIn","parseEaseString","string","easesFunctions","easesLookups","hasParams","parsedFn","eases","list","name","easeType","JSEasesLookups","parseEasings","propertyNamesCache","sanitizePropertyName","cachedPropertyName","lowerCaseName","angleUnitsMap","convertedValuesCache","convertValueUnit","decomposedValue","force","currentUnit","currentNumber","cachedKey","cached","convertedValue","baseline","tempEl","cloneNode","parentEl","body","appendChild","elStyle","width","currentUnitWidth","offsetWidth","newUnitWidth","factor","cleanInlineStyles","renderable","targetStyle","originalInlinedValue","_inlineStyles","keys","removeProperty","removeAttribute","fromTargetObject","toTargetObject","toFunctionStore","keyframesTargetArray","fastSetValuesArray","keyObjectTarget","tweenId","generateKeyframes","properties","propertyNames","concat","filter","propArray","newKey","keyValue","totalDuration","sort","offset","prevKey","keyObj","durProgress","prevEase","currentEase","undefined","shift","JSAnimation","fastSet","targetsLength","kfParams","params","animDefaults","animaPlaybackEase","animEase","hasSpring","tEasing","tDuration","tDelay","tModifier","tComposition","animInlineStyles","absoluteOffsetTime","NaN","iterationDelay","animationAnimationLength","shouldTriggerRender","targetIndex","ti","lastTransformGroupIndex","lastTransformGroupLength","propValue","isPropValueArray","arrayLength","isNotObjectValue","prevTween","firstTweenChangeStartTime","lastTweenChangeEndTime","tweenIndex","keyframe","computedToValue","tweenToValue","tweenFromValue","keyEasing","tweenEasing","tweenDuration","tweenDelay","computedComposition","hasFromvalue","hasToValue","isFromToArray","isFromToValue","tweenStartTime","absoluteStartTime","nextSibling","complexValue","notComplexValue","unitValue","notUnitValue","colorValue","notColorValue","valueToConvert","longestValue","shortestValue","_","tweenUpdateDuration","_func","_nextAdd","additiveTween","console","warn","refresh","ogValue","animate","easingToLinear","samples","points","join","WAAPIEasesLookups","WAAPIeases","parseWAAPIEasing","parsedEase","easing","transformsShorthands","commonDefaultPXProperties","validIndividualTransforms","some","axis","endsWith","transformsPropertiesRegistered","call","registerTransformsProperties","isSkew","isScale","isRotate","isTranslate","isAngle","syntax","registerProperty","inherits","initialValue","WAAPIAnimationsLookups","removeWAAPIAnimation","nextLookup","matchTarget","matchProperty","matchParent","anim","commitStyles","lookupParent","_completed","animations","addWAAPIAnimation","animTotalDuration","controlAnimation","handleRemove","onremove","onfinish","normalizeTweenValue","parseIndividualTweenValue","tweenValue","computedTo","computedFrom","WAAPIAnimation","spring","scroll","direction","fill","hasIndividualTransforms","composite","tweenParams","propertyValue","individualTransformProperty","parsedPropertyValue","tweenOptions","tweenOptionsEase","tweenOptionsSpring","transforms","cb","waapi","convertEase","sync","getTargetValue","targetSelector","normalizePropName","originalValue","setTargetValues","removeTargetsFromAnimation","targetsArray","tweensMatchesTargets","tweenName","remove","waapiAnimation","removeMatches","childTLOffset","childDur","m","randomPick","items","shuffle","roundPad","padStart","padString","padEnd","wrap","mapRange","inLow","inHigh","outLow","outHigh","degToRad","degrees","radToDeg","radians","lerp","amount","dt","ticker","curry","last","chain","result","__","nextArgs","nextResult","utils","makeChainable","right","$","getPrevChildOffset","timeline","timePosition","goToPrevAnimationOffset","prevAnimation","prevOffset","parseTimelinePosition","tlDuration","timePosStr","tlLabels","labels","hasLabels","hasSibling","matchedRelativeOperator","fullOperator","labelOffset","parsedOffset","parsedNumericalOffset","getTimelineTotalDuration","addTlChild","childParams","adjustedPosition","tlChild","Timeline","defaultsParams","globalDefaults","tlPlaybackEase","add","a1","a2","a3","isAnim","isTimer","staggeredPosition","parsedLength","staggeredChildParams","synced","position","effect","getTiming","label","labelName","createTimeline","Animatable","globalParams","paramValue","isObjValue","propParams","animParams","numbers","createAnimatable","Spring","timeStep","restThreshold","restDuration","maxDuration","maxRestSteps","maxIterations","mass","stiffness","damping","velocity","w0","zeta","wd","solverDuration","compute","solve","solverTime","restSteps","createSpring","preventDefault","cancelable","DOMProxy","zIndex","parentElement","classList","height","getBoundingClientRect","top","bottom","left","Transforms","point","DOMPoint","inversedMatrix","getMatrix","inverse","normalizePoint","matrixTransform","traverseUp","matrix","DOMMatrix","transformValue","elMatrix","preMultiplySelf","ct","parseDraggableFunctionParameter","draggable","Draggable","paramX","paramY","trigger","releaseEase","customEase","xProp","mapTo","yProp","container","containerArray","$container","useWin","$scrollContainer","$target","$trigger","fixed","isFinePointer","containerPadding","containerFriction","releaseContainerFriction","snapX","snapY","scrollSpeed","scrollThreshold","dragSpeed","maxVelocity","minVelocity","velocityMultiplier","cursor","releaseXSpring","releaseMass","releaseStiffness","releaseDamping","releaseYSpring","outQuint","hasReleaseSpring","onGrab","onDrag","onRelease","onSettle","onSnap","onResize","onAfterResize","disabled","animatableParams","paramXObject","animatableXParams","paramYObject","animatableYParams","destX","destY","deltaX","deltaY","coords","snapped","pointer","scrollView","dragArea","containerBounds","scrollBounds","targetBounds","velocityStack","velocityStackIndex","velocityTime","angle","cursorStyles","triggerStyles","bodyStyles","targetStyles","touchActionStyles","overshootCoords","overshootXTicker","overshootYTicker","updateTicker","updated","manual","contained","grabbed","dragged","released","canScroll","enabled","initialized","activeProp","hasUpdated","hasMoved","hasReleased","dx","dy","computeVelocity","resizeTicker","resizeObserver","ResizeObserver","enable","observe","prevTime","curTime","elapsed","vMul","minV","maxV","vi","setX","muteUpdateCallback","setY","progressX","progressY","updateScrollCoords","sx","scrollX","scrollLeft","sy","scrollY","scrollTop","cpt","cpr","cpb","cpl","threshold","updateBoundingValues","cx","cy","cx2","cy2","iw","innerWidth","ih","innerHeight","uw","sw","scrollWidth","sh","scrollHeight","fx","transformContainerRect","containerOverflow","visibleOverflow","hiddenOverflow","targetRect","hiddenLeft","hiddenTop","hiddenRight","hiddenBottom","isOutOfBounds","bounds","bt","br","bb","bl","obx","oby","cp","parsedCursorStyles","onHover","matchMedia","matches","daw","dah","csx","csy","nsw","nsh","csw","csh","swd","shd","st","sr","sb","sl","nx","ny","scrollBy","scrollTo","cr","cl","px1","py1","px2","py2","px3","py3","cf","nsx","nsy","stop","scrollInView","gap","inOutQuad","handleHover","animateInView","ob","disabledX","disabledY","dur","handleDown","$eTarget","stopPropagation","touches","changedTouches","eventX","clientX","eventY","clientY","z","handleMove","movedX","movedY","$parent","isAtTop","isAtBottom","canTouchScroll","overflowY","clientHeight","pointerEvents","passive","handleUp","springX","springY","pv","pa","ds","bx","by","durationX","durationY","easeX","easeY","longestReleaseDuration","directionX","distanceX","directionY","distanceY","hasSnapped","removeEventListener","touchAction","disable","handleEvent","createDraggable","Scope","rootParam","current","nativeElement","scopeDefaults","globalDefault","mediaQueries","constructors","revertConstructors","methods","mediaQueryLists","data","mq","_mq","execute","activeScope","activeRoot","activeDefaults","mqs","returned","revertConstructor","createScope","getMaxViewHeight","createElement","offsetHeight","parseScrollObserverFunctionParameter","scroller","scrollContainers","ScrollContainer","element","winWidth","winHeight","prevScrollX","prevScrollY","backwardX","backwardY","scrollTicker","dataTimer","handleScroll","self","px","py","updateWindowBounds","refreshScrollObservers","wakeTicker","updateBounds","marginLeft","marginRight","marginTop","marginBottom","elRect","_debug","removeDebug","debug","unobserve","registerAndGetScrollContainer","scrollContainer","convertValueToPx","size","under","over","clampMin","clampMax","parseBoundValue","matchedOperator","splitter","splitted","valueAPx","valueBPx","getAnimationDomTarget","$linkedTarget","linkedTargets","scrollerIndex","debugColors","ScrollObserver","syncMode","isLinear","isEase","isSmooth","isMethods","syncMethods","biDirSync","repeat","horizontal","enter","leave","syncEase","syncSmooth","onSyncEnter","onSyncLeave","onSyncEnterForward","onSyncLeaveForward","onSyncEnterBackward","onSyncLeaveBackward","onEnter","onLeave","onEnterForward","onLeaveForward","onEnterBackward","onLeaveBackward","onSyncComplete","reverted","isInView","forceEnter","hasEntered","offsets","offsetStart","offsetEnd","distance","prevProgress","thresholds","debugStyles","$debug","_params","backward","isHori","$existingDebug","querySelector","$thresholds","$triggers","color","containerWidth","containerHeight","offLeft","offTop","half","labelHeight","labelWidth","labelSize","gradientOffset","lineCSS","baseCSS","w","cssText","isView","isTail","isFirst","isOver","isFlip","$label","$text","dirProp","flipOffset","innerHTML","containerPosition","stickys","linkedTime","offsetX","offsetY","$offsetParent","isContainerStatic","isSticky","offsetLeft","offsetTop","offsetParent","targetSize","containerSize","scrollSize","maxScroll","enterTarget","leaveTarget","enterContainer","leaveContainer","parsedEnterTarget","parsedLeaveTarget","parsedEnterContainer","parsedLeaveContainer","scrollDelta","sticky","shouldSeek","isBefore","isAfter","isOnTheEdge","syncCompleted","lp","step","onScroll","stagger","val","hasEasing","staggerEase","grid","fromFirst","fromCenter","fromLast","isRange","val1","val2","fromIndex","fromX","fromY","toX","toY","output"],"sources":["/Users/gongdeoghyeon/.yarn/berry/cache/animejs-npm-4.0.2-1c6ec66dcd-10c0.zip/node_modules/animejs/lib/anime.esm.js"],"sourcesContent":["/**\n * anime.js - ESM\n * @version v4.0.2\n * @author Julian Garnier\n * @license MIT\n * @copyright (c) 2025 Julian Garnier\n * @see https://animejs.com\n */\n\n/**\n * @typedef {Object} DefaultsParams\n * @property {Number|String} [id]\n * @property {PercentageKeyframes|DurationKeyframes} [keyframes]\n * @property {EasingParam} [playbackEase]\n * @property {Number} [playbackRate]\n * @property {Number} [frameRate]\n * @property {Number|Boolean} [loop]\n * @property {Boolean} [reversed]\n * @property {Boolean} [alternate]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number|FunctionValue} [duration]\n * @property {Number|FunctionValue} [delay]\n * @property {Number} [loopDelay]\n * @property {EasingParam} [ease]\n * @property {'none'|'replace'|'blend'|compositionTypes} [composition]\n * @property {(v: any) => any} [modifier]\n * @property {(tickable: Tickable) => void} [onBegin]\n * @property {(tickable: Tickable) => void} [onBeforeUpdate]\n * @property {(tickable: Tickable) => void} [onUpdate]\n * @property {(tickable: Tickable) => void} [onLoop]\n * @property {(tickable: Tickable) => void} [onPause]\n * @property {(tickable: Tickable) => void} [onComplete]\n * @property {(renderable: Renderable) => void} [onRender]\n */\n\n/** @typedef {JSAnimation|Timeline} Renderable */\n/** @typedef {Timer|Renderable} Tickable */\n/** @typedef {Timer&JSAnimation&Timeline} CallbackArgument */\n/** @typedef {Animatable|Tickable|Draggable|ScrollObserver|Scope} Revertible */\n\n/**\n * @typedef {Object} DraggableAxisParam\n * @property {String} [mapTo]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [snap]\n */\n\n/**\n * @typedef {Object} DraggableCursorParams\n * @property {String} [onHover]\n * @property {String} [onGrab]\n */\n\n/**\n * @typedef {Object} DraggableParams\n * @property {DOMTargetSelector} [trigger]\n * @property {DOMTargetSelector|Array<Number>|((draggable: Draggable) => DOMTargetSelector|Array<Number>)} [container]\n * @property {Boolean|DraggableAxisParam} [x]\n * @property {Boolean|DraggableAxisParam} [y]\n * @property {TweenModifier} [modifier]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [snap]\n * @property {Number|Array<Number>|((draggable: Draggable) => Number|Array<Number>)} [containerPadding]\n * @property {Number|((draggable: Draggable) => Number)} [containerFriction]\n * @property {Number|((draggable: Draggable) => Number)} [releaseContainerFriction]\n * @property {Number|((draggable: Draggable) => Number)} [dragSpeed]\n * @property {Number|((draggable: Draggable) => Number)} [scrollSpeed]\n * @property {Number|((draggable: Draggable) => Number)} [scrollThreshold]\n * @property {Number|((draggable: Draggable) => Number)} [minVelocity]\n * @property {Number|((draggable: Draggable) => Number)} [maxVelocity]\n * @property {Number|((draggable: Draggable) => Number)} [velocityMultiplier]\n * @property {Number} [releaseMass]\n * @property {Number} [releaseStiffness]\n * @property {Number} [releaseDamping]\n * @property {Boolean} [releaseDamping]\n * @property {EasingParam} [releaseEase]\n * @property {Boolean|DraggableCursorParams|((draggable: Draggable) => Boolean|DraggableCursorParams)} [cursor]\n * @property {Callback<Draggable>} [onGrab]\n * @property {Callback<Draggable>} [onDrag]\n * @property {Callback<Draggable>} [onRelease]\n * @property {Callback<Draggable>} [onUpdate]\n * @property {Callback<Draggable>} [onSettle]\n * @property {Callback<Draggable>} [onSnap]\n * @property {Callback<Draggable>} [onResize]\n * @property {Callback<Draggable>} [onAfterResize]\n */\n\n/**\n * @typedef {SVGGeometryElement & {\n *   setAttribute(name: 'draw', value: `${number} ${number}`): void;\n *   draw: `${number} ${number}`;\n * }} DrawableSVGGeometry\n */\n\n/**\n * @callback EasingFunction\n * @param {Number} time\n * @return {Number}\n */\n\n/**\n * @typedef {('linear'|'linear(x1, x2 25%, x3)'|'in'|'out'|'inOut'|'inQuad'|'outQuad'|'inOutQuad'|'inCubic'|'outCubic'|'inOutCubic'|'inQuart'|'outQuart'|'inOutQuart'|'inQuint'|'outQuint'|'inOutQuint'|'inSine'|'outSine'|'inOutSine'|'inCirc'|'outCirc'|'inOutCirc'|'inExpo'|'outExpo'|'inOutExpo'|'inBounce'|'outBounce'|'inOutBounce'|'inBack'|'outBack'|'inOutBack'|'inElastic'|'outElastic'|'inOutElastic'|'irregular'|'cubicBezier'|'steps'|'in(p = 1.675)'|'out(p = 1.675)'|'inOut(p = 1.675)'|'inBack(overshoot = 1.70158)'|'outBack(overshoot = 1.70158)'|'inOutBack(overshoot = 1.70158)'|'inElastic(amplitude = 1, period = .3)'|'outElastic(amplitude = 1, period = .3)'|'inOutElastic(amplitude = 1, period = .3)'|'irregular(length = 10, randomness = 1)'|'cubicBezier(x1, y1, x2, y2)'|'steps(steps = 10)')} EaseStringParamNames\n */\n\n// A hack to get both ease names suggestions AND allow any strings\n// https://github.com/microsoft/TypeScript/issues/29729#issuecomment-460346421\n/** @typedef {(String & {})|EaseStringParamNames|EasingFunction|Spring} EasingParam */\n\n/** @typedef {HTMLElement|SVGElement} DOMTarget */\n/** @typedef {Record<String, any>} JSTarget */\n/** @typedef {DOMTarget|JSTarget} Target */\n/** @typedef {Target|NodeList|String} TargetSelector */\n/** @typedef {DOMTarget|NodeList|String} DOMTargetSelector */\n/** @typedef {Array.<DOMTargetSelector>|DOMTargetSelector} DOMTargetsParam */\n/** @typedef {Array.<DOMTarget>} DOMTargetsArray */\n/** @typedef {Array.<JSTarget>|JSTarget} JSTargetsParam */\n/** @typedef {Array.<JSTarget>} JSTargetsArray */\n/** @typedef {Array.<TargetSelector>|TargetSelector} TargetsParam */\n/** @typedef {Array.<Target>} TargetsArray */\n\n/**\n * @callback FunctionValue\n * @param {Target} target - The animated target\n * @param {Number} index - The target index\n * @param {Number} length - The total number of animated targets\n * @return {Number|String|TweenObjectValue|Array.<Number|String|TweenObjectValue>}\n */\n\n/**\n * @callback TweenModifier\n * @param {Number} value - The animated value\n * @return {Number|String}\n */\n\n/** @typedef {[Number, Number, Number, Number]} ColorArray */\n\n/**\n * @template T\n * @callback Callback\n * @param {T} self - Returns itself\n * @param {PointerEvent} [e]\n * @return {*}\n */\n\n/**\n * @template {object} T\n * @typedef {Object} TickableCallbacks\n * @property {Callback<T>} [onBegin]\n * @property {Callback<T>} [onBeforeUpdate]\n * @property {Callback<T>} [onUpdate]\n * @property {Callback<T>} [onLoop]\n * @property {Callback<T>} [onPause]\n * @property {Callback<T>} [onComplete]\n */\n\n/**\n * @template {object} T\n * @typedef {Object} RenderableCallbacks\n * @property {Callback<T>} [onRender]\n */\n\n/**\n * @typedef {Object} Tween\n * @property {Number} id\n * @property {JSAnimation} parent\n * @property {String} property\n * @property {Target} target\n * @property {String|Number} _value\n * @property {Function|null} _func\n * @property {EasingFunction} _ease\n * @property {Array.<Number>} _fromNumbers\n * @property {Array.<Number>} _toNumbers\n * @property {Array.<String>} _strings\n * @property {Number} _fromNumber\n * @property {Number} _toNumber\n * @property {Array.<Number>} _numbers\n * @property {Number} _number\n * @property {String} _unit\n * @property {TweenModifier} _modifier\n * @property {Number} _currentTime\n * @property {Number} _delay\n * @property {Number} _updateDuration\n * @property {Number} _startTime\n * @property {Number} _changeDuration\n * @property {Number} _absoluteStartTime\n * @property {tweenTypes} _tweenType\n * @property {valueTypes} _valueType\n * @property {Number} _composition\n * @property {Number} _isOverlapped\n * @property {Number} _isOverridden\n * @property {Number} _renderTransforms\n * @property {Tween} _prevRep\n * @property {Tween} _nextRep\n * @property {Tween} _prevAdd\n * @property {Tween} _nextAdd\n * @property {Tween} _prev\n * @property {Tween} _next\n */\n\n/**\n * @typedef TweenDecomposedValue\n * @property {Number} t - Type\n * @property {Number} n - Single number value\n * @property {String} u - Value unit\n * @property {String} o - Value operator\n * @property {Array.<Number>} d - Array of Numbers (in case of complex value type)\n * @property {Array.<String>} s - Strings (in case of complex value type)\n */\n\n/** @typedef {{_head: null|Tween, _tail: null|Tween}} TweenPropertySiblings */\n/** @typedef {Record<String, TweenPropertySiblings>} TweenLookups */\n/** @typedef {WeakMap.<Target, TweenLookups>} TweenReplaceLookups */\n/** @typedef {Map.<Target, TweenLookups>} TweenAdditiveLookups */\n\n/**\n * @typedef {Object} TimerOptions\n * @property {Number|String} [id]\n * @property {TweenParamValue} [duration]\n * @property {TweenParamValue} [delay]\n * @property {Number} [loopDelay]\n * @property {Boolean} [reversed]\n * @property {Boolean} [alternate]\n * @property {Boolean|Number} [loop]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number} [frameRate]\n * @property {Number} [playbackRate]\n */\n\n/**\n\n/**\n * @typedef {TimerOptions & TickableCallbacks<Timer>} TimerParams\n */\n\n/**\n * @typedef {Number|String|FunctionValue} TweenParamValue\n */\n\n/**\n * @typedef {TweenParamValue|[TweenParamValue, TweenParamValue]} TweenPropValue\n */\n\n/**\n * @typedef {(String & {})|'none'|'replace'|'blend'|compositionTypes} TweenComposition\n */\n\n/**\n * @typedef {Object} TweenParamsOptions\n * @property {TweenParamValue} [duration]\n * @property {TweenParamValue} [delay]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n */\n\n/**\n * @typedef {Object} TweenValues\n * @property {TweenParamValue} [from]\n * @property {TweenPropValue} [to]\n * @property {TweenPropValue} [fromTo]\n */\n\n/**\n * @typedef {TweenParamsOptions & TweenValues} TweenKeyValue\n */\n\n/**\n * @typedef {Array.<TweenKeyValue|TweenPropValue>} ArraySyntaxValue\n */\n\n/**\n * @typedef {TweenParamValue|ArraySyntaxValue|TweenKeyValue} TweenOptions\n */\n\n/**\n * @typedef {Partial<{to: TweenParamValue|Array.<TweenParamValue>; from: TweenParamValue|Array.<TweenParamValue>; fromTo: TweenParamValue|Array.<TweenParamValue>;}>} TweenObjectValue\n */\n\n/**\n * @typedef {Object} PercentageKeyframeOptions\n * @property {EasingParam} [ease]\n */\n\n/**\n * @typedef {Record<String, TweenParamValue>} PercentageKeyframeParams\n */\n\n/**\n * @typedef {Record<String, PercentageKeyframeParams & PercentageKeyframeOptions>} PercentageKeyframes\n */\n\n/**\n * @typedef {Array<Record<String, TweenOptions | TweenModifier | boolean> & TweenParamsOptions>} DurationKeyframes\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {PercentageKeyframes|DurationKeyframes} [keyframes]\n * @property {EasingParam} [playbackEase]\n */\n\n// TODO: Currently setting TweenModifier to the intersected Record<> makes the FunctionValue type target param any if only one parameter is set\n/**\n * @typedef {Record<String, TweenOptions | Callback<JSAnimation> | TweenModifier | boolean | PercentageKeyframes | DurationKeyframes | ScrollObserver> & TimerOptions & AnimationOptions & TweenParamsOptions & TickableCallbacks<JSAnimation> & RenderableCallbacks<JSAnimation>} AnimationParams\n */\n\n/**\n * @typedef {Object} TimelineOptions\n * @property {DefaultsParams} [defaults]\n * @property {EasingParam} [playbackEase]\n */\n\n/**\n * @typedef {TimerOptions & TimelineOptions & TickableCallbacks<Timeline> & RenderableCallbacks<Timeline>} TimelineParams\n */\n\n/**\n * @callback AnimatablePropertySetter\n * @param  {Number|Array.<Number>} to\n * @param  {Number} [duration]\n * @param  {EasingParam} [ease]\n * @return {AnimatableObject}\n */\n\n/**\n * @callback AnimatablePropertyGetter\n * @return {Number|Array.<Number>}\n */\n\n/**\n * @typedef {AnimatablePropertySetter & AnimatablePropertyGetter} AnimatableProperty\n */\n\n/**\n * @typedef {Animatable & Record<String, AnimatableProperty>} AnimatableObject\n */\n\n/**\n * @typedef {Object} AnimatablePropertyParamsOptions\n * @property {String} [unit]\n * @property {TweenParamValue} [duration]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n * @property {TweenComposition} [composition]\n */\n\n/**\n * @typedef {Record<String, TweenParamValue | EasingParam | TweenModifier | TweenComposition | AnimatablePropertyParamsOptions> & AnimatablePropertyParamsOptions} AnimatableParams\n */\n\n\n// Environments\n\n// TODO: Do we need to check if we're running inside a worker ?\nconst isBrowser = typeof window !== 'undefined';\n\n/** @type {Object|Null} */\nconst win = isBrowser ? window : null;\n\n/** @type {Document} */\nconst doc = isBrowser ? document : null;\n\n// Enums\n\n/** @enum {Number} */\nconst tweenTypes = {\n  OBJECT: 0,\n  ATTRIBUTE: 1,\n  CSS: 2,\n  TRANSFORM: 3,\n  CSS_VAR: 4,\n};\n\n/** @enum {Number} */\nconst valueTypes = {\n  NUMBER: 0,\n  UNIT: 1,\n  COLOR: 2,\n  COMPLEX: 3,\n};\n\n/** @enum {Number} */\nconst tickModes = {\n  NONE: 0,\n  AUTO: 1,\n  FORCE: 2,\n};\n\n/** @enum {Number} */\nconst compositionTypes = {\n  replace: 0,\n  none: 1,\n  blend: 2,\n};\n\n// Cache symbols\n\nconst isRegisteredTargetSymbol = Symbol();\nconst isDomSymbol = Symbol();\nconst isSvgSymbol = Symbol();\nconst transformsSymbol = Symbol();\nconst morphPointsSymbol = Symbol();\nconst proxyTargetSymbol = Symbol();\n\n// Numbers\n\nconst minValue = 1e-11;\nconst maxValue = 1e12;\nconst K = 1e3;\nconst maxFps = 120;\n\n// Strings\n\nconst emptyString = '';\nconst shortTransforms = new Map();\n\nshortTransforms.set('x', 'translateX');\nshortTransforms.set('y', 'translateY');\nshortTransforms.set('z', 'translateZ');\n\nconst validTransforms = [\n  'translateX',\n  'translateY',\n  'translateZ',\n  'rotate',\n  'rotateX',\n  'rotateY',\n  'rotateZ',\n  'scale',\n  'scaleX',\n  'scaleY',\n  'scaleZ',\n  'skew',\n  'skewX',\n  'skewY',\n  'perspective',\n  'matrix',\n  'matrix3d',\n];\n\nconst transformsFragmentStrings = validTransforms.reduce((a, v) => ({...a, [v]: v + '('}), {});\n\n// Functions\n\n/** @return {void} */\nconst noop = () => {};\n\n// Regex\n\nconst hexTestRgx = /(^#([\\da-f]{3}){1,2}$)|(^#([\\da-f]{4}){1,2}$)/i;\nconst rgbExecRgx = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i;\nconst rgbaExecRgx = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)\\s*\\)/i;\nconst hslExecRgx = /hsl\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*\\)/i;\nconst hslaExecRgx = /hsla\\(\\s*(-?\\d+|-?\\d*.\\d+)\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)%\\s*,\\s*(-?\\d+|-?\\d*.\\d+)\\s*\\)/i;\n// export const digitWithExponentRgx = /[-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?/g;\nconst digitWithExponentRgx = /[-+]?\\d*\\.?\\d+(?:e[-+]?\\d)?/gi;\n// export const unitsExecRgx = /^([-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)+([a-z]+|%)$/i;\nconst unitsExecRgx = /^([-+]?\\d*\\.?\\d+(?:e[-+]?\\d+)?)([a-z]+|%)$/i;\nconst lowerCaseRgx = /([a-z])([A-Z])/g;\nconst transformsExecRgx = /(\\w+)(\\([^)]+\\)+)/g; // Match inline transforms with cacl() values, returns the value wrapped in ()\nconst relativeValuesExecRgx = /(\\*=|\\+=|-=)/;\n\n\n\n\n/** @type {DefaultsParams} */\nconst defaults = {\n  id: null,\n  keyframes: null,\n  playbackEase: null,\n  playbackRate: 1,\n  frameRate: maxFps,\n  loop: 0,\n  reversed: false,\n  alternate: false,\n  autoplay: true,\n  duration: K,\n  delay: 0,\n  loopDelay: 0,\n  ease: 'out(2)',\n  composition: compositionTypes.replace,\n  modifier: v => v,\n  onBegin: noop,\n  onBeforeUpdate: noop,\n  onUpdate: noop,\n  onLoop: noop,\n  onPause: noop,\n  onComplete: noop,\n  onRender: noop,\n};\n\nconst globals = {\n  /** @type {DefaultsParams} */\n  defaults,\n  /** @type {Document|DOMTarget} */\n  root: doc,\n  /** @type {Scope} */\n  scope: null,\n  /** @type {Number} */\n  precision: 4,\n  /** @type {Number} */\n  timeScale: 1,\n  /** @type {Number} */\n  tickThreshold: 200,\n};\n\nconst globalVersions = { version: '4.0.2', engine: null };\n\nif (isBrowser) {\n  if (!win.AnimeJS) win.AnimeJS = [];\n  win.AnimeJS.push(globalVersions);\n}\n\n// Strings\n\n/**\n * @param  {String} str\n * @return {String}\n */\nconst toLowerCase = str => str.replace(lowerCaseRgx, '$1-$2').toLowerCase();\n\n/**\n * Prioritize this method instead of regex when possible\n * @param  {String} str\n * @param  {String} sub\n * @return {Boolean}\n */\nconst stringStartsWith = (str, sub) => str.indexOf(sub) === 0;\n\n// Time\n// Note: Date.now is used instead of performance.now since it is precise enough for timings calculations, performs slightly faster and works in Node.js environement.\nconst now = Date.now;\n\n// Types checkers\n\nconst isArr = Array.isArray;\n/**@param {any} a @return {a is Record<String, any>} */\nconst isObj = a => a && a.constructor === Object;\n/**@param {any} a @return {a is Number} */\nconst isNum = a => typeof a === 'number' && !isNaN(a);\n/**@param {any} a @return {a is String} */\nconst isStr = a => typeof a === 'string';\n/**@param {any} a @return {a is Function} */\nconst isFnc = a => typeof a === 'function';\n/**@param {any} a @return {a is undefined} */\nconst isUnd = a => typeof a === 'undefined';\n/**@param {any} a @return {a is null | undefined} */\nconst isNil = a => isUnd(a) || a === null;\n/**@param {any} a @return {a is SVGElement} */\nconst isSvg = a => isBrowser && a instanceof SVGElement;\n/**@param {any} a @return {Boolean} */\nconst isHex = a => hexTestRgx.test(a);\n/**@param {any} a @return {Boolean} */\nconst isRgb = a => stringStartsWith(a, 'rgb');\n/**@param {any} a @return {Boolean} */\nconst isHsl = a => stringStartsWith(a, 'hsl');\n/**@param {any} a @return {Boolean} */\nconst isCol = a => isHex(a) || isRgb(a) || isHsl(a);\n/**@param {any} a @return {Boolean} */\nconst isKey = a => !globals.defaults.hasOwnProperty(a);\n\n// Number\n\n/**\n * @param  {Number|String} str\n * @return {Number}\n */\nconst parseNumber = str => isStr(str) ?\n  parseFloat(/** @type {String} */(str)) :\n  /** @type {Number} */(str);\n\n// Math\n\nconst pow = Math.pow;\nconst sqrt = Math.sqrt;\nconst sin = Math.sin;\nconst cos = Math.cos;\nconst abs = Math.abs;\nconst exp = Math.exp;\nconst ceil = Math.ceil;\nconst floor = Math.floor;\nconst asin = Math.asin;\nconst max = Math.max;\nconst atan2 = Math.atan2;\nconst PI = Math.PI;\nconst _round = Math.round;\n\n/**\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nconst clamp = (v, min, max) => v < min ? min : v > max ? max : v;\n\nconst powCache = {};\n\n/**\n * @param  {Number} v\n * @param  {Number} decimalLength\n * @return {Number}\n */\nconst round = (v, decimalLength) => {\n  if (decimalLength < 0) return v;\n  if (!decimalLength) return _round(v);\n  let p = powCache[decimalLength];\n  if (!p) p = powCache[decimalLength] = 10 ** decimalLength;\n  return _round(v * p) / p;\n};\n\n/**\n * @param  {Number} v\n * @param  {Number|Array<Number>} increment\n * @return {Number}\n */\nconst snap = (v, increment) => isArr(increment) ? increment.reduce((closest, cv) => (abs(cv - v) < abs(closest - v) ? cv : closest)) : increment ? _round(v / increment) * increment : v;\n\n/**\n * @param  {Number} start\n * @param  {Number} end\n * @param  {Number} progress\n * @return {Number}\n */\nconst interpolate = (start, end, progress) => start + (end - start) * progress;\n\n/**\n * @param  {Number} v\n * @return {Number}\n */\nconst clampInfinity = v => v === Infinity ? maxValue : v === -Infinity ? -1e12 : v;\n\n/**\n * @param  {Number} v\n * @return {Number}\n */\nconst normalizeTime = v => v <= minValue ? minValue : clampInfinity(round(v, 11));\n\n// Arrays\n\n/**\n * @template T\n * @param {T[]} a\n * @return {T[]}\n */\nconst cloneArray = a => isArr(a) ? [ ...a ] : a;\n\n// Objects\n\n/**\n * @template T\n * @template U\n * @param {T} o1\n * @param {U} o2\n * @return {T & U}\n */\nconst mergeObjects = (o1, o2) => {\n  const merged = /** @type {T & U} */({ ...o1 });\n  for (let p in o2) {\n    const o1p = /** @type {T & U} */(o1)[p];\n    merged[p] = isUnd(o1p) ? /** @type {T & U} */(o2)[p] : o1p;\n  }  return merged;\n};\n\n// Linked lists\n\n/**\n * @param {Object} parent\n * @param {Function} callback\n * @param {Boolean} [reverse]\n * @param {String} [prevProp]\n * @param {String} [nextProp]\n * @return {void}\n */\nconst forEachChildren = (parent, callback, reverse, prevProp = '_prev', nextProp = '_next') => {\n  let next = parent._head;\n  let adjustedNextProp = nextProp;\n  if (reverse) {\n    next = parent._tail;\n    adjustedNextProp = prevProp;\n  }\n  while (next) {\n    const currentNext = next[adjustedNextProp];\n    callback(next);\n    next = currentNext;\n  }\n};\n\n/**\n * @param  {Object} parent\n * @param  {Object} child\n * @param  {String} [prevProp]\n * @param  {String} [nextProp]\n * @return {void}\n */\nconst removeChild = (parent, child, prevProp = '_prev', nextProp = '_next') => {\n  const prev = child[prevProp];\n  const next = child[nextProp];\n  prev ? prev[nextProp] = next : parent._head = next;\n  next ? next[prevProp] = prev : parent._tail = prev;\n  child[prevProp] = null;\n  child[nextProp] = null;\n};\n\n/**\n * @param  {Object} parent\n * @param  {Object} child\n * @param  {Function} [sortMethod]\n * @param  {String} prevProp\n * @param  {String} nextProp\n * @return {void}\n */\nconst addChild = (parent, child, sortMethod, prevProp = '_prev', nextProp = '_next') => {\n  let prev = parent._tail;\n  while (prev && sortMethod && sortMethod(prev, child)) prev = prev[prevProp];\n  const next = prev ? prev[nextProp] : parent._head;\n  prev ? prev[nextProp] = child : parent._head = child;\n  next ? next[prevProp] = child : parent._tail = child;\n  child[prevProp] = prev;\n  child[nextProp] = next;\n};\n\n/*\n * Base class to control framerate and playback rate.\n * Inherited by Engine, Timer, Animation and Timeline.\n */\nclass Clock {\n\n  /** @param {Number} [initTime] */\n  constructor(initTime = 0) {\n    /** @type {Number} */\n    this.deltaTime = 0;\n    /** @type {Number} */\n    this._currentTime = initTime;\n    /** @type {Number} */\n    this._elapsedTime = initTime;\n    /** @type {Number} */\n    this._startTime = initTime;\n    /** @type {Number} */\n    this._lastTime = initTime;\n    /** @type {Number} */\n    this._scheduledTime = 0;\n    /** @type {Number} */\n    this._frameDuration = round(K / maxFps, 0);\n    /** @type {Number} */\n    this._fps = maxFps;\n    /** @type {Number} */\n    this._speed = 1;\n    /** @type {Boolean} */\n    this._hasChildren = false;\n    /** @type {Tickable|Tween} */\n    this._head = null;\n    /** @type {Tickable|Tween} */\n    this._tail = null;\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  set fps(frameRate) {\n    const previousFrameDuration = this._frameDuration;\n    const fr = +frameRate;\n    const fps = fr < minValue ? minValue : fr;\n    const frameDuration = round(K / fps, 0);\n    this._fps = fps;\n    this._frameDuration = frameDuration;\n    this._scheduledTime += frameDuration - previousFrameDuration;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(playbackRate) {\n    const pbr = +playbackRate;\n    this._speed = pbr < minValue ? minValue : pbr;\n  }\n\n  /**\n   * @param  {Number} time\n   * @return {tickModes}\n   */\n  requestTick(time) {\n    const scheduledTime = this._scheduledTime;\n    const elapsedTime = this._elapsedTime;\n    this._elapsedTime += (time - elapsedTime);\n    // If the elapsed time is lower than the scheduled time\n    // this means not enough time has passed to hit one frameDuration\n    // so skip that frame\n    if (elapsedTime < scheduledTime) return tickModes.NONE;\n    const frameDuration = this._frameDuration;\n    const frameDelta = elapsedTime - scheduledTime;\n    // Ensures that _scheduledTime progresses in steps of at least 1 frameDuration.\n    // Skips ahead if the actual elapsed time is higher.\n    this._scheduledTime += frameDelta < frameDuration ? frameDuration : frameDelta;\n    return tickModes.AUTO;\n  }\n\n  /**\n   * @param  {Number} time\n   * @return {Number}\n   */\n  computeDeltaTime(time) {\n    const delta = time - this._lastTime;\n    this.deltaTime = delta;\n    this._lastTime = time;\n    return delta;\n  }\n\n}\n\n\n\n\n/**\n * @param  {Tickable} tickable\n * @param  {Number} time\n * @param  {Number} muteCallbacks\n * @param  {Number} internalRender\n * @param  {tickModes} tickMode\n * @return {Number}\n */\nconst render = (tickable, time, muteCallbacks, internalRender, tickMode) => {\n\n  const parent = tickable.parent;\n  const duration = tickable.duration;\n  const completed = tickable.completed;\n  const iterationDuration = tickable.iterationDuration;\n  const iterationCount = tickable.iterationCount;\n  const _currentIteration = tickable._currentIteration;\n  const _loopDelay = tickable._loopDelay;\n  const _reversed = tickable._reversed;\n  const _alternate = tickable._alternate;\n  const _hasChildren = tickable._hasChildren;\n  const tickableDelay = tickable._delay;\n  const tickablePrevAbsoluteTime = tickable._currentTime; // TODO: rename ._currentTime to ._absoluteCurrentTime\n\n  const tickableEndTime = tickableDelay + iterationDuration;\n  const tickableAbsoluteTime = time - tickableDelay;\n  const tickablePrevTime = clamp(tickablePrevAbsoluteTime, -tickableDelay, duration);\n  const tickableCurrentTime = clamp(tickableAbsoluteTime, -tickableDelay, duration);\n  const deltaTime = tickableAbsoluteTime - tickablePrevAbsoluteTime;\n  const isCurrentTimeAboveZero = tickableCurrentTime > 0;\n  const isCurrentTimeEqualOrAboveDuration = tickableCurrentTime >= duration;\n  const isSetter = duration <= minValue;\n  const forcedTick = tickMode === tickModes.FORCE;\n\n  let isOdd = 0;\n  let iterationElapsedTime = tickableAbsoluteTime;\n  // Render checks\n  // Used to also check if the children have rendered in order to trigger the onRender callback on the parent timer\n  let hasRendered = 0;\n\n  // Execute the \"expensive\" iterations calculations only when necessary\n  if (iterationCount > 1) {\n    // bitwise NOT operator seems to be generally faster than Math.floor() across browsers\n    const currentIteration = ~~(tickableCurrentTime / (iterationDuration + (isCurrentTimeEqualOrAboveDuration ? 0 : _loopDelay)));\n    tickable._currentIteration = clamp(currentIteration, 0, iterationCount);\n    // Prevent the iteration count to go above the max iterations when reaching the end of the animation\n    if (isCurrentTimeEqualOrAboveDuration) tickable._currentIteration--;\n    isOdd = tickable._currentIteration % 2;\n    iterationElapsedTime = tickableCurrentTime % (iterationDuration + _loopDelay) || 0;\n  }\n\n  // Checks if exactly one of _reversed and (_alternate && isOdd) is true\n  const isReversed = _reversed ^ (_alternate && isOdd);\n  const _ease = /** @type {Renderable} */(tickable)._ease;\n  let iterationTime = isCurrentTimeEqualOrAboveDuration ? isReversed ? 0 : duration : isReversed ? iterationDuration - iterationElapsedTime : iterationElapsedTime;\n  if (_ease) iterationTime = iterationDuration * _ease(iterationTime / iterationDuration) || 0;\n  const isRunningBackwards = (parent ? parent.backwards : tickableAbsoluteTime < tickablePrevAbsoluteTime) ? !isReversed : !!isReversed;\n\n  tickable._currentTime = tickableAbsoluteTime;\n  tickable._iterationTime = iterationTime;\n  tickable.backwards = isRunningBackwards;\n\n  if (isCurrentTimeAboveZero && !tickable.began) {\n    tickable.began = true;\n    if (!muteCallbacks && !(parent && (isRunningBackwards || !parent.began))) {\n      tickable.onBegin(/** @type {CallbackArgument} */(tickable));\n    }\n  } else if (tickableAbsoluteTime <= 0) {\n    tickable.began = false;\n  }\n\n  // Only triggers onLoop for tickable without children, otherwise call the the onLoop callback in the tick function\n  // Make sure to trigger the onLoop before rendering to allow .refresh() to pickup the current values\n  if (!muteCallbacks && !_hasChildren && isCurrentTimeAboveZero && tickable._currentIteration !== _currentIteration) {\n    tickable.onLoop(/** @type {CallbackArgument} */(tickable));\n  }\n\n  if (\n    forcedTick ||\n    tickMode === tickModes.AUTO && (\n      time >= tickableDelay && time <= tickableEndTime || // Normal render\n      time <= tickableDelay && tickablePrevTime > tickableDelay || // Playhead is before the animation start time so make sure the animation is at its initial state\n      time >= tickableEndTime && tickablePrevTime !== duration // Playhead is after the animation end time so make sure the animation is at its end state\n    ) ||\n    iterationTime >= tickableEndTime && tickablePrevTime !== duration ||\n    iterationTime <= tickableDelay && tickablePrevTime > 0 ||\n    time <= tickablePrevTime && tickablePrevTime === duration && completed || // Force a render if a seek occurs on an completed animation\n    isCurrentTimeEqualOrAboveDuration && !completed && isSetter // This prevents 0 duration tickables to be skipped\n  ) {\n\n    if (isCurrentTimeAboveZero) {\n      // Trigger onUpdate callback before rendering\n      tickable.computeDeltaTime(tickablePrevTime);\n      if (!muteCallbacks) tickable.onBeforeUpdate(/** @type {CallbackArgument} */(tickable));\n    }\n\n    // Start tweens rendering\n    if (!_hasChildren) {\n\n      // Time has jumped more than globals.tickThreshold so consider this tick manual\n      const forcedRender = forcedTick || (isRunningBackwards ? deltaTime * -1 : deltaTime) >= globals.tickThreshold;\n      const absoluteTime = tickable._offset + (parent ? parent._offset : 0) + tickableDelay + iterationTime;\n\n      // Only Animation can have tweens, Timer returns undefined\n      let tween = /** @type {Tween} */(/** @type {JSAnimation} */(tickable)._head);\n      let tweenTarget;\n      let tweenStyle;\n      let tweenTargetTransforms;\n      let tweenTargetTransformsProperties;\n      let tweenTransformsNeedUpdate = 0;\n\n      while (tween) {\n\n        const tweenComposition = tween._composition;\n        const tweenCurrentTime = tween._currentTime;\n        const tweenChangeDuration = tween._changeDuration;\n        const tweenAbsEndTime = tween._absoluteStartTime + tween._changeDuration;\n        const tweenNextRep = tween._nextRep;\n        const tweenPrevRep = tween._prevRep;\n        const tweenHasComposition = tweenComposition !== compositionTypes.none;\n\n        if ((forcedRender || (\n            (tweenCurrentTime !== tweenChangeDuration || absoluteTime <= tweenAbsEndTime + (tweenNextRep ? tweenNextRep._delay : 0)) &&\n            (tweenCurrentTime !== 0 || absoluteTime >= tween._absoluteStartTime)\n          )) && (!tweenHasComposition || (\n            !tween._isOverridden &&\n            (!tween._isOverlapped || absoluteTime <= tweenAbsEndTime) &&\n            (!tweenNextRep || (tweenNextRep._isOverridden || absoluteTime <= tweenNextRep._absoluteStartTime)) &&\n            (!tweenPrevRep || (tweenPrevRep._isOverridden || (absoluteTime >= (tweenPrevRep._absoluteStartTime + tweenPrevRep._changeDuration) + tween._delay)))\n          ))\n        ) {\n\n          const tweenNewTime = tween._currentTime = clamp(iterationTime - tween._startTime, 0, tweenChangeDuration);\n          const tweenProgress = tween._ease(tweenNewTime / tween._updateDuration);\n          const tweenModifier = tween._modifier;\n          const tweenValueType = tween._valueType;\n          const tweenType = tween._tweenType;\n          const tweenIsObject = tweenType === tweenTypes.OBJECT;\n          const tweenIsNumber = tweenValueType === valueTypes.NUMBER;\n          // Only round the in-between frames values if the final value is a string\n          const tweenPrecision = (tweenIsNumber && tweenIsObject) || tweenProgress === 0 || tweenProgress === 1 ? -1 : globals.precision;\n\n          // Recompose tween value\n          /** @type {String|Number} */\n          let value;\n          /** @type {Number} */\n          let number;\n\n          if (tweenIsNumber) {\n            value = number = /** @type {Number} */(tweenModifier(round(interpolate(tween._fromNumber, tween._toNumber,  tweenProgress), tweenPrecision )));\n          } else if (tweenValueType === valueTypes.UNIT) {\n            // Rounding the values speed up string composition\n            number = /** @type {Number} */(tweenModifier(round(interpolate(tween._fromNumber, tween._toNumber,  tweenProgress), tweenPrecision)));\n            value = `${number}${tween._unit}`;\n          } else if (tweenValueType === valueTypes.COLOR) {\n            const fn = tween._fromNumbers;\n            const tn = tween._toNumbers;\n            const r = round(clamp(/** @type {Number} */(tweenModifier(interpolate(fn[0], tn[0], tweenProgress))), 0, 255), 0);\n            const g = round(clamp(/** @type {Number} */(tweenModifier(interpolate(fn[1], tn[1], tweenProgress))), 0, 255), 0);\n            const b = round(clamp(/** @type {Number} */(tweenModifier(interpolate(fn[2], tn[2], tweenProgress))), 0, 255), 0);\n            const a = clamp(/** @type {Number} */(tweenModifier(round(interpolate(fn[3], tn[3], tweenProgress), tweenPrecision))), 0, 1);\n            value = `rgba(${r},${g},${b},${a})`;\n            if (tweenHasComposition) {\n              const ns = tween._numbers;\n              ns[0] = r;\n              ns[1] = g;\n              ns[2] = b;\n              ns[3] = a;\n            }\n          } else if (tweenValueType === valueTypes.COMPLEX) {\n            value = tween._strings[0];\n            for (let j = 0, l = tween._toNumbers.length; j < l; j++) {\n              const n = /** @type {Number} */(tweenModifier(round(interpolate(tween._fromNumbers[j], tween._toNumbers[j], tweenProgress), tweenPrecision)));\n              const s = tween._strings[j + 1];\n              value += `${s ? n + s : n}`;\n              if (tweenHasComposition) {\n                tween._numbers[j] = n;\n              }\n            }\n          }\n\n          // For additive tweens and Animatables\n          if (tweenHasComposition) {\n            tween._number = number;\n          }\n\n          if (!internalRender && tweenComposition !== compositionTypes.blend) {\n\n            const tweenProperty = tween.property;\n            tweenTarget = tween.target;\n\n            if (tweenIsObject) {\n              tweenTarget[tweenProperty] = value;\n            } else if (tweenType === tweenTypes.ATTRIBUTE) {\n              /** @type {DOMTarget} */(tweenTarget).setAttribute(tweenProperty, /** @type {String} */(value));\n            } else {\n              tweenStyle = /** @type {DOMTarget} */(tweenTarget).style;\n              if (tweenType === tweenTypes.TRANSFORM) {\n                if (tweenTarget !== tweenTargetTransforms) {\n                  tweenTargetTransforms = tweenTarget;\n                  // NOTE: Referencing the cachedTransforms in the tween property directly can be a little bit faster but appears to increase memory usage.\n                  tweenTargetTransformsProperties = tweenTarget[transformsSymbol];\n                }\n                tweenTargetTransformsProperties[tweenProperty] = value;\n                tweenTransformsNeedUpdate = 1;\n              } else if (tweenType === tweenTypes.CSS) {\n                tweenStyle[tweenProperty] = value;\n              } else if (tweenType === tweenTypes.CSS_VAR) {\n                tweenStyle.setProperty(tweenProperty,/** @type {String} */(value));\n              }\n            }\n\n            if (isCurrentTimeAboveZero) hasRendered = 1;\n\n          } else {\n            // Used for composing timeline tweens without having to do a real render\n            tween._value = value;\n          }\n\n        }\n\n        // NOTE: Possible improvement: Use translate(x,y) / translate3d(x,y,z) syntax\n        // to reduce memory usage on string composition\n        if (tweenTransformsNeedUpdate && tween._renderTransforms) {\n          let str = emptyString;\n          for (let key in tweenTargetTransformsProperties) {\n            str += `${transformsFragmentStrings[key]}${tweenTargetTransformsProperties[key]}) `;\n          }\n          tweenStyle.transform = str;\n          tweenTransformsNeedUpdate = 0;\n        }\n\n        tween = tween._next;\n      }\n\n      if (!muteCallbacks && hasRendered) {\n        /** @type {JSAnimation} */(tickable).onRender(/** @type {JSAnimation} */(tickable));\n      }\n    }\n\n    if (!muteCallbacks && isCurrentTimeAboveZero) {\n      tickable.onUpdate(/** @type {CallbackArgument} */(tickable));\n    }\n\n  }\n\n  // End tweens rendering\n\n  // Handle setters on timeline differently and allow re-trigering the onComplete callback when seeking backwards\n  if (parent && isSetter) {\n    if (!muteCallbacks && (\n      (parent.began && !isRunningBackwards && tickableAbsoluteTime >= duration && !completed) ||\n      (isRunningBackwards && tickableAbsoluteTime <= minValue && completed)\n    )) {\n      tickable.onComplete(/** @type {CallbackArgument} */(tickable));\n      tickable.completed = !isRunningBackwards;\n    }\n  // If currentTime is both above 0 and at least equals to duration, handles normal onComplete or infinite loops\n  } else if (isCurrentTimeAboveZero && isCurrentTimeEqualOrAboveDuration) {\n    if (iterationCount === Infinity) {\n      // Offset the tickable _startTime with its duration to reset _currentTime to 0 and continue the infinite timer\n      tickable._startTime += tickable.duration;\n    } else if (tickable._currentIteration >= iterationCount - 1) {\n      // By setting paused to true, we tell the engine loop to not render this tickable and removes it from the list on the next tick\n      tickable.paused = true;\n      if (!completed && !_hasChildren) {\n        // If the tickable has children, triggers onComplete() only when all children have completed in the tick function\n        tickable.completed = true;\n        if (!muteCallbacks && !(parent && (isRunningBackwards || !parent.began))) {\n          tickable.onComplete(/** @type {CallbackArgument} */(tickable));\n          tickable._resolve(/** @type {CallbackArgument} */(tickable));\n        }\n      }\n    }\n  // Otherwise set the completed flag to false\n  } else {\n    tickable.completed = false;\n  }\n\n  // NOTE: hasRendered * direction (negative for backwards) this way we can remove the tickable.backwards property completly ?\n  return hasRendered;\n};\n\n/**\n * @param  {Tickable} tickable\n * @param  {Number} time\n * @param  {Number} muteCallbacks\n * @param  {Number} internalRender\n * @param  {Number} tickMode\n * @return {void}\n */\nconst tick = (tickable, time, muteCallbacks, internalRender, tickMode) => {\n  const _currentIteration = tickable._currentIteration;\n  render(tickable, time, muteCallbacks, internalRender, tickMode);\n  if (tickable._hasChildren) {\n    const tl = /** @type {Timeline} */(tickable);\n    const tlIsRunningBackwards = tl.backwards;\n    const tlChildrenTime = internalRender ? time : tl._iterationTime;\n    const tlCildrenTickTime = now();\n\n    let tlChildrenHasRendered = 0;\n    let tlChildrenHaveCompleted = true;\n\n    // If the timeline has looped forward, we need to manually triggers children skipped callbacks\n    if (!internalRender && tl._currentIteration !== _currentIteration) {\n      const tlIterationDuration = tl.iterationDuration;\n      forEachChildren(tl, (/** @type {JSAnimation} */child) => {\n        if (!tlIsRunningBackwards) {\n          // Force an internal render to trigger the callbacks if the child has not completed on loop\n          if (!child.completed && !child.backwards && child._currentTime < child.iterationDuration) {\n            render(child, tlIterationDuration, muteCallbacks, 1, tickModes.FORCE);\n          }\n          // Reset their began and completed flags to allow retrigering callbacks on the next iteration\n          child.began = false;\n          child.completed = false;\n        } else {\n          const childDuration = child.duration;\n          const childStartTime = child._offset + child._delay;\n          const childEndTime = childStartTime + childDuration;\n          // Triggers the onComplete callback on reverse for children on the edges of the timeline\n          if (!muteCallbacks && childDuration <= minValue && (!childStartTime || childEndTime === tlIterationDuration)) {\n            child.onComplete(child);\n          }\n        }\n      });\n      if (!muteCallbacks) tl.onLoop(/** @type {CallbackArgument} */(tl));\n    }\n\n    forEachChildren(tl, (/** @type {JSAnimation} */child) => {\n      const childTime = round((tlChildrenTime - child._offset) * child._speed, 12); // Rounding is needed when using seconds\n      const childTickMode = child._fps < tl._fps ? child.requestTick(tlCildrenTickTime) : tickMode;\n      tlChildrenHasRendered += render(child, childTime, muteCallbacks, internalRender, childTickMode);\n      if (!child.completed && tlChildrenHaveCompleted) tlChildrenHaveCompleted = false;\n    }, tlIsRunningBackwards);\n\n    // Renders on timeline are triggered by its children so it needs to be set after rendering the children\n    if (!muteCallbacks && tlChildrenHasRendered) tl.onRender(/** @type {CallbackArgument} */(tl));\n\n    // Triggers the timeline onComplete() once all chindren all completed and the current time has reached the end\n    if (tlChildrenHaveCompleted && tl._currentTime >= tl.duration) {\n      // Make sure the paused flag is false in case it has been skipped in the render function\n      tl.paused = true;\n      if (!tl.completed) {\n        tl.completed = true;\n        if (!muteCallbacks) {\n          tl.onComplete(/** @type {CallbackArgument} */(tl));\n          tl._resolve(/** @type {CallbackArgument} */(tl));\n        }\n      }\n    }\n  }\n};\n\n\n\n\nconst additive = {\n  animation: null,\n  update: noop,\n};\n\n/**\n * @typedef AdditiveAnimation\n * @property {Number} duration\n * @property {Number} _offset\n * @property {Number} _delay\n * @property {Tween} _head\n * @property {Tween} _tail\n */\n\n/**\n * @param  {TweenAdditiveLookups} lookups\n * @return {AdditiveAnimation}\n */\nconst addAdditiveAnimation = lookups => {\n  let animation = additive.animation;\n  if (!animation) {\n    animation = {\n      duration: minValue,\n      computeDeltaTime: noop,\n      _offset: 0,\n      _delay: 0,\n      _head: null,\n      _tail: null,\n    };\n    additive.animation = animation;\n    additive.update = () => {\n      lookups.forEach(propertyAnimation => {\n        for (let propertyName in propertyAnimation) {\n          const tweens = propertyAnimation[propertyName];\n          const lookupTween = tweens._head;\n          if (lookupTween) {\n            const valueType = lookupTween._valueType;\n            const additiveValues = valueType === valueTypes.COMPLEX || valueType === valueTypes.COLOR ? cloneArray(lookupTween._fromNumbers) : null;\n            let additiveValue = lookupTween._fromNumber;\n            let tween = tweens._tail;\n            while (tween && tween !== lookupTween) {\n              if (additiveValues) {\n                for (let i = 0, l = tween._numbers.length; i < l; i++) additiveValues[i] += tween._numbers[i];\n              } else {\n                additiveValue += tween._number;\n              }\n              tween = tween._prevAdd;\n            }\n            lookupTween._toNumber = additiveValue;\n            lookupTween._toNumbers = additiveValues;\n          }\n        }\n      });\n      // TODO: Avoid polymorphism here, idealy the additive animation should be a regular animation with a higher priority in the render loop\n      render(animation, 1, 1, 0, tickModes.FORCE);\n    };\n  }\n  return animation;\n};\n\nconst engineTickMethod = isBrowser ? requestAnimationFrame : setImmediate;\nconst engineCancelMethod = isBrowser ? cancelAnimationFrame : clearImmediate;\n\nclass Engine extends Clock {\n\n  /** @param {Number} [initTime] */\n  constructor(initTime) {\n    super(initTime);\n    this.useDefaultMainLoop = true;\n    this.pauseOnDocumentHidden = true;\n    /** @type {DefaultsParams} */\n    this.defaults = defaults;\n    this.paused = isBrowser && doc.hidden ? true  : false;\n    /** @type {Number|NodeJS.Immediate} */\n    this.reqId = null;\n  }\n\n  update() {\n    const time = this._currentTime = now();\n    if (this.requestTick(time)) {\n      this.computeDeltaTime(time);\n      const engineSpeed = this._speed;\n      const engineFps = this._fps;\n      let activeTickable = /** @type {Tickable} */(this._head);\n      while (activeTickable) {\n        const nextTickable = activeTickable._next;\n        if (!activeTickable.paused) {\n          tick(\n            activeTickable,\n            (time - activeTickable._startTime) * activeTickable._speed * engineSpeed,\n            0, // !muteCallbacks\n            0, // !internalRender\n            activeTickable._fps < engineFps ? activeTickable.requestTick(time) : tickModes.AUTO\n          );\n        } else {\n          removeChild(this, activeTickable);\n          this._hasChildren = !!this._tail;\n          activeTickable._running = false;\n          if (activeTickable.completed && !activeTickable._cancelled) {\n            activeTickable.cancel();\n          }\n        }\n        activeTickable = nextTickable;\n      }\n      additive.update();\n    }\n  }\n\n  wake() {\n    if (this.useDefaultMainLoop && !this.reqId && !this.paused) {\n      this.reqId = engineTickMethod(tickEngine);\n    }\n    return this;\n  }\n\n  pause() {\n    this.paused = true;\n    return killEngine();\n  }\n\n  resume() {\n    if (!this.paused) return;\n    this.paused = false;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.resetTime());\n    return this.wake();\n  }\n\n  // Getter and setter for speed\n  get speed() {\n    return this._speed * (globals.timeScale === 1 ? 1 : K);\n  }\n\n  set speed(playbackRate) {\n    this._speed = playbackRate * globals.timeScale;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.speed = child._speed);\n  }\n\n  // Getter and setter for timeUnit\n  get timeUnit() {\n    return globals.timeScale === 1 ? 'ms' : 's';\n  };\n\n  set timeUnit(unit) {\n    const secondsScale = 0.001;\n    const isSecond = unit === 's';\n    const newScale = isSecond ? secondsScale : 1;\n    if (globals.timeScale !== newScale) {\n      globals.timeScale = newScale;\n      globals.tickThreshold = 200 * newScale;\n      const scaleFactor = isSecond ? secondsScale : K;\n      /** @type {Number} */\n      (this.defaults.duration) *= scaleFactor;\n      this._speed *= scaleFactor;\n    }\n  }\n\n  // Getter and setter for precision\n  get precision() {\n    return globals.precision;\n  }\n\n  set precision(precision) {\n    globals.precision = precision;\n  }\n\n}\nconst engine = /*#__PURE__*/(() => {\n  const engine = new Engine(now());\n  if (isBrowser) {\n    globalVersions.engine = engine;\n    doc.addEventListener('visibilitychange', () => {\n      if (!engine.pauseOnDocumentHidden) return;\n      doc.hidden ? engine.pause() : engine.resume();\n    });\n  }\n  return engine;\n})();\n\n\nconst tickEngine = () => {\n  if (engine._head) {\n    engine.reqId = engineTickMethod(tickEngine);\n    engine.update();\n  } else {\n    engine.reqId = 0;\n  }\n};\n\nconst killEngine = () => {\n  engineCancelMethod(/** @type {NodeJS.Immediate & Number} */(engine.reqId));\n  engine.reqId = 0;\n  return engine;\n};\n\n\n\n\n/**\n * @param  {DOMTarget} target\n * @param  {String} propName\n * @param  {Object} animationInlineStyles\n * @return {String}\n */\nconst parseInlineTransforms = (target, propName, animationInlineStyles) => {\n  const inlineTransforms = target.style.transform;\n  let inlinedStylesPropertyValue;\n  if (inlineTransforms) {\n    const cachedTransforms = target[transformsSymbol];\n    let t; while (t = transformsExecRgx.exec(inlineTransforms)) {\n      const inlinePropertyName = t[1];\n      // const inlinePropertyValue = t[2];\n      const inlinePropertyValue = t[2].slice(1, -1);\n      cachedTransforms[inlinePropertyName] = inlinePropertyValue;\n      if (inlinePropertyName === propName) {\n        inlinedStylesPropertyValue = inlinePropertyValue;\n        // Store the new parsed inline styles if animationInlineStyles is provided\n        if (animationInlineStyles) {\n          animationInlineStyles[propName] = inlinePropertyValue;\n        }\n      }\n    }\n  }\n  return inlineTransforms && !isUnd(inlinedStylesPropertyValue) ? inlinedStylesPropertyValue :\n    stringStartsWith(propName, 'scale') ? '1' :\n    stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew') ? '0deg' : '0px';\n};\n\n\n\n\n/**\n * @param  {DOMTargetsParam|TargetsParam} v\n * @return {NodeList|HTMLCollection}\n */\nfunction getNodeList(v) {\n  const n = isStr(v) ? globals.root.querySelectorAll(v) : v;\n  if (n instanceof NodeList || n instanceof HTMLCollection) return n;\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction parseTargets(targets) {\n  if (isNil(targets)) return /** @type {TargetsArray} */([]);\n  if (isArr(targets)) {\n    const flattened = targets.flat(Infinity);\n    /** @type {TargetsArray} */\n    const parsed = [];\n    for (let i = 0, l = flattened.length; i < l; i++) {\n      const item = flattened[i];\n      if (!isNil(item)) {\n        const nodeList = getNodeList(item);\n        if (nodeList) {\n          for (let j = 0, jl = nodeList.length; j < jl; j++) {\n            const subItem = nodeList[j];\n            if (!isNil(subItem)) {\n              let isDuplicate = false;\n              for (let k = 0, kl = parsed.length; k < kl; k++) {\n                if (parsed[k] === subItem) {\n                  isDuplicate = true;\n                  break;\n                }\n              }\n              if (!isDuplicate) {\n                parsed.push(subItem);\n              }\n            }\n          }\n        } else {\n          let isDuplicate = false;\n          for (let j = 0, jl = parsed.length; j < jl; j++) {\n            if (parsed[j] === item) {\n              isDuplicate = true;\n              break;\n            }\n          }\n          if (!isDuplicate) {\n            parsed.push(item);\n          }\n        }\n      }\n    }\n    return parsed;\n  }\n  if (!isBrowser) return /** @type {JSTargetsArray} */([targets]);\n  const nodeList = getNodeList(targets);\n  if (nodeList) return /** @type {DOMTargetsArray} */(Array.from(nodeList));\n  return /** @type {TargetsArray} */([targets]);\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction registerTargets(targets) {\n  const parsedTargetsArray = parseTargets(targets);\n  const parsedTargetsLength = parsedTargetsArray.length;\n  if (parsedTargetsLength) {\n    for (let i = 0; i < parsedTargetsLength; i++) {\n      const target = parsedTargetsArray[i];\n      if (!target[isRegisteredTargetSymbol]) {\n        target[isRegisteredTargetSymbol] = true;\n        const isSvgType = isSvg(target);\n        const isDom = /** @type {DOMTarget} */(target).nodeType || isSvgType;\n        if (isDom) {\n          target[isDomSymbol] = true;\n          target[isSvgSymbol] = isSvgType;\n          target[transformsSymbol] = {};\n        }\n      }\n    }\n  }\n  return parsedTargetsArray;\n}\n\n\n\n\n/**\n * @param  {TargetsParam} path\n * @return {SVGGeometryElement|undefined}\n */\nconst getPath = path => {\n  const parsedTargets = parseTargets(path);\n  const $parsedSvg = /** @type {SVGGeometryElement} */(parsedTargets[0]);\n  if (!$parsedSvg || !isSvg($parsedSvg)) return;\n  return $parsedSvg;\n};\n\n/**\n * @param  {TargetsParam} path2\n * @param  {Number} [precision]\n * @return {FunctionValue}\n */\nconst morphTo = (path2, precision = .33) => ($path1) => {\n  const $path2 = /** @type {SVGGeometryElement} */(getPath(path2));\n  if (!$path2) return;\n  const isPath = $path1.tagName === 'path';\n  const separator = isPath ? ' ' : ',';\n  const previousPoints = $path1[morphPointsSymbol];\n  if (previousPoints) $path1.setAttribute(isPath ? 'd' : 'points', previousPoints);\n\n  let v1 = '', v2 = '';\n\n  if (!precision) {\n    v1 = $path1.getAttribute(isPath ? 'd' : 'points');\n    v2 = $path2.getAttribute(isPath ? 'd' : 'points');\n  } else {\n    const length1 = /** @type {SVGGeometryElement} */($path1).getTotalLength();\n    const length2 = $path2.getTotalLength();\n    const maxPoints = Math.max(Math.ceil(length1 * precision), Math.ceil(length2 * precision));\n    for (let i = 0; i < maxPoints; i++) {\n      const t = i / (maxPoints - 1);\n      const pointOnPath1 = /** @type {SVGGeometryElement} */($path1).getPointAtLength(length1 * t);\n      const pointOnPath2 = $path2.getPointAtLength(length2 * t);\n      const prefix = isPath ? (i === 0 ? 'M' : 'L') : '';\n      v1 += prefix + round(pointOnPath1.x, 3) + separator + pointOnPath1.y + ' ';\n      v2 += prefix + round(pointOnPath2.x, 3) + separator + pointOnPath2.y + ' ';\n    }\n  }\n\n  $path1[morphPointsSymbol] = v2;\n\n  return [v1, v2];\n};\n\n/**\n * @param {SVGGeometryElement} [$el]\n * @return {Number}\n */\nconst getScaleFactor = $el => {\n  let scaleFactor = 1;\n  if ($el && $el.getCTM) {\n    const ctm = $el.getCTM();\n    if (ctm) {\n      const scaleX = sqrt(ctm.a * ctm.a + ctm.b * ctm.b);\n      const scaleY = sqrt(ctm.c * ctm.c + ctm.d * ctm.d);\n      scaleFactor = (scaleX + scaleY) / 2;\n    }\n  }\n  return scaleFactor;\n};\n\n/**\n * Creates a proxy that wraps an SVGGeometryElement and adds drawing functionality.\n * @param {SVGGeometryElement} $el - The SVG element to transform into a drawable\n * @param {number} start - Starting position (0-1)\n * @param {number} end - Ending position (0-1)\n * @return {DrawableSVGGeometry} - Returns a proxy that preserves the original element's type with additional 'draw' attribute functionality\n */\nconst createDrawableProxy = ($el, start, end) => {\n  const pathLength = K;\n  const computedStyles = getComputedStyle($el);\n  const strokeLineCap = computedStyles.strokeLinecap;\n  // @ts-ignore\n  const $scalled = computedStyles.vectorEffect === 'non-scaling-stroke' ? $el : null;\n  let currentCap = strokeLineCap;\n\n  const proxy = new Proxy($el, {\n    get(target, property) {\n      const value = target[property];\n      if (property === proxyTargetSymbol) return target;\n      if (property === 'setAttribute') {\n        return (...args) => {\n          if (args[0] === 'draw') {\n            const value = args[1];\n            const values = value.split(' ');\n            const v1 = +values[0];\n            const v2 = +values[1];\n            // TOTO: Benchmark if performing two slices is more performant than one split\n            // const spaceIndex = value.indexOf(' ');\n            // const v1 = round(+value.slice(0, spaceIndex), precision);\n            // const v2 = round(+value.slice(spaceIndex + 1), precision);\n            const scaleFactor = getScaleFactor($scalled);\n            const os = v1 * -1e3 * scaleFactor;\n            const d1 = (v2 * pathLength * scaleFactor) + os;\n            const d2 = (pathLength * scaleFactor +\n                      ((v1 === 0 && v2 === 1) || (v1 === 1 && v2 === 0) ? 0 : 10 * scaleFactor) - d1);\n            if (strokeLineCap !== 'butt') {\n              const newCap = v1 === v2 ? 'butt' : strokeLineCap;\n              if (currentCap !== newCap) {\n                target.style.strokeLinecap = `${newCap}`;\n                currentCap = newCap;\n              }\n            }\n            target.setAttribute('stroke-dashoffset', `${os}`);\n            target.setAttribute('stroke-dasharray', `${d1} ${d2}`);\n          }\n          return Reflect.apply(value, target, args);\n        };\n      }\n\n      if (isFnc(value)) {\n        return (...args) => Reflect.apply(value, target, args);\n      } else {\n        return value;\n      }\n    }\n  });\n\n  if ($el.getAttribute('pathLength') !== `${pathLength}`) {\n    $el.setAttribute('pathLength', `${pathLength}`);\n    proxy.setAttribute('draw', `${start} ${end}`);\n  }\n\n  return /** @type {DrawableSVGGeometry} */(proxy);\n};\n\n/**\n * Creates drawable proxies for multiple SVG elements.\n * @param {TargetsParam} selector - CSS selector, SVG element, or array of elements and selectors\n * @param {number} [start=0] - Starting position (0-1)\n * @param {number} [end=0] - Ending position (0-1)\n * @return {Array<DrawableSVGGeometry>} - Array of proxied elements with drawing functionality\n */\nconst createDrawable = (selector, start = 0, end = 0) => {\n  const els = parseTargets(selector);\n  return els.map($el => createDrawableProxy(\n    /** @type {SVGGeometryElement} */($el),\n    start,\n    end\n  ));\n};\n\n// Motion path animation\n\n/**\n * @param {SVGGeometryElement} $path\n * @param {Number} progress\n * @param {Number}lookup\n * @return {DOMPoint}\n */\nconst getPathPoint = ($path, progress, lookup = 0) => {\n  return $path.getPointAtLength(progress + lookup >= 1 ? progress + lookup : 0);\n};\n\n/**\n * @param {SVGGeometryElement} $path\n * @param {String} pathProperty\n * @return {FunctionValue}\n */\nconst getPathProgess = ($path, pathProperty) => {\n  return $el => {\n    const totalLength = +($path.getTotalLength());\n    const inSvg = $el[isSvgSymbol];\n    const ctm = $path.getCTM();\n    /** @type {TweenObjectValue} */\n    return {\n      from: 0,\n      to: totalLength,\n      /** @type {TweenModifier} */\n      modifier: progress => {\n        if (pathProperty === 'a') {\n          const p0 = getPathPoint($path, progress, -1);\n          const p1 = getPathPoint($path, progress, 1);\n          return atan2(p1.y - p0.y, p1.x - p0.x) * 180 / PI;\n        } else {\n          const p = getPathPoint($path, progress, 0);\n          return pathProperty === 'x' ?\n            inSvg || !ctm ? p.x : p.x * ctm.a + p.y * ctm.c + ctm.e :\n            inSvg || !ctm ? p.y : p.x * ctm.b + p.y * ctm.d + ctm.f\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {TargetsParam} path\n */\nconst createMotionPath = path => {\n  const $path = getPath(path);\n  if (!$path) return;\n  return {\n    translateX: getPathProgess($path, 'x'),\n    translateY: getPathProgess($path, 'y'),\n    rotate: getPathProgess($path, 'a'),\n  }\n};\n\n// Check for valid SVG attribute\n\nconst cssReservedProperties = ['opacity', 'rotate', 'overflow', 'color'];\n\n/**\n * @param  {Target} el\n * @param  {String} propertyName\n * @return {Boolean}\n */\nconst isValidSVGAttribute = (el, propertyName) => {\n  // Return early and use CSS opacity animation instead (already better default values (opacity: 1 instead of 0)) and rotate should be considered a transform\n  if (cssReservedProperties.includes(propertyName)) return false;\n  if (el.getAttribute(propertyName) || propertyName in el) {\n    if (propertyName === 'scale') { // Scale\n      const elParentNode = /** @type {SVGGeometryElement} */(/** @type {DOMTarget} */(el).parentNode);\n      // Only consider scale as a valid SVG attribute on filter element\n      return elParentNode && elParentNode.tagName === 'filter';\n    }\n    return true;\n  }\n};\n\nconst svg = {\n  morphTo,\n  createMotionPath,\n  createDrawable,\n};\n\n\n\n\n/**\n * RGB / RGBA Color value string -> RGBA values array\n * @param  {String} rgbValue\n * @return {ColorArray}\n */\nconst rgbToRgba = rgbValue => {\n  const rgba = rgbExecRgx.exec(rgbValue) || rgbaExecRgx.exec(rgbValue);\n  const a = !isUnd(rgba[4]) ? +rgba[4] : 1;\n  return [\n    +rgba[1],\n    +rgba[2],\n    +rgba[3],\n    a\n  ]\n};\n\n/**\n * HEX3 / HEX3A / HEX6 / HEX6A Color value string -> RGBA values array\n * @param  {String} hexValue\n * @return {ColorArray}\n */\nconst hexToRgba = hexValue => {\n  const hexLength = hexValue.length;\n  const isShort = hexLength === 4 || hexLength === 5;\n  return [\n    +('0x' + hexValue[1] + hexValue[isShort ? 1 : 2]),\n    +('0x' + hexValue[isShort ? 2 : 3] + hexValue[isShort ? 2 : 4]),\n    +('0x' + hexValue[isShort ? 3 : 5] + hexValue[isShort ? 3 : 6]),\n    ((hexLength === 5 || hexLength === 9) ? +(+('0x' + hexValue[isShort ? 4 : 7] + hexValue[isShort ? 4 : 8]) / 255).toFixed(3) : 1)\n  ]\n};\n\n/**\n * @param  {Number} p\n * @param  {Number} q\n * @param  {Number} t\n * @return {Number}\n */\nconst hue2rgb = (p, q, t) => {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  return t < 1 / 6 ? p + (q - p) * 6 * t :\n         t < 1 / 2 ? q :\n         t < 2 / 3 ? p + (q - p) * (2 / 3 - t) * 6 :\n         p;\n};\n\n/**\n * HSL / HSLA Color value string -> RGBA values array\n * @param  {String} hslValue\n * @return {ColorArray}\n */\nconst hslToRgba = hslValue => {\n  const hsla = hslExecRgx.exec(hslValue) || hslaExecRgx.exec(hslValue);\n  const h = +hsla[1] / 360;\n  const s = +hsla[2] / 100;\n  const l = +hsla[3] / 100;\n  const a = !isUnd(hsla[4]) ? +hsla[4] : 1;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < .5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = round(hue2rgb(p, q, h + 1 / 3) * 255, 0);\n    g = round(hue2rgb(p, q, h) * 255, 0);\n    b = round(hue2rgb(p, q, h - 1 / 3) * 255, 0);\n  }\n  return [r, g, b, a];\n};\n\n/**\n * All in one color converter that converts a color string value into an array of RGBA values\n * @param  {String} colorString\n * @return {ColorArray}\n */\nconst convertColorStringValuesToRgbaArray = colorString => {\n  return isRgb(colorString) ? rgbToRgba(colorString) :\n         isHex(colorString) ? hexToRgba(colorString) :\n         isHsl(colorString) ? hslToRgba(colorString) :\n         [0, 0, 0, 1];\n};\n\n\n\n\n/**\n * @template T, D\n * @param {T|undefined} targetValue\n * @param {D} defaultValue\n * @return {T|D}\n */\nconst setValue = (targetValue, defaultValue) => {\n  return isUnd(targetValue) ? defaultValue : targetValue;\n};\n\n/**\n * @param  {TweenPropValue} value\n * @param  {Target} target\n * @param  {Number} index\n * @param  {Number} total\n * @param  {Object} [store]\n * @return {any}\n */\nconst getFunctionValue = (value, target, index, total, store) => {\n  if (isFnc(value)) {\n    const func = () => {\n      const computed = /** @type {Function} */(value)(target, index, total);\n      // Fallback to 0 if the function returns undefined / NaN / null / false / 0\n      return !isNaN(+computed) ? +computed : computed || 0;\n    };\n    if (store) {\n      store.func = func;\n    }\n    return func();\n  } else {\n    return value;\n  }\n};\n\n/**\n * @param  {Target} target\n * @param  {String} prop\n * @return {tweenTypes}\n */\nconst getTweenType = (target, prop) => {\n  return !target[isDomSymbol] ? tweenTypes.OBJECT :\n    // Handle SVG attributes\n    target[isSvgSymbol] && isValidSVGAttribute(target, prop) ? tweenTypes.ATTRIBUTE :\n    // Handle CSS Transform properties differently than CSS to allow individual animations\n    validTransforms.includes(prop) || shortTransforms.get(prop) ? tweenTypes.TRANSFORM :\n    // CSS variables\n    stringStartsWith(prop, '--') ? tweenTypes.CSS_VAR :\n    // All other CSS properties\n    prop in /** @type {DOMTarget} */(target).style ? tweenTypes.CSS :\n    // Handle other DOM Attributes\n    prop in target ? tweenTypes.OBJECT :\n    tweenTypes.ATTRIBUTE;\n};\n\n/**\n * @param  {DOMTarget} target\n * @param  {String} propName\n * @param  {Object} animationInlineStyles\n * @return {String}\n */\nconst getCSSValue = (target, propName, animationInlineStyles) => {\n  const inlineStyles = target.style[propName];\n  if (inlineStyles && animationInlineStyles) {\n    animationInlineStyles[propName] = inlineStyles;\n  }\n  const value = inlineStyles || getComputedStyle(target[proxyTargetSymbol] || target).getPropertyValue(propName);\n  return value === 'auto' ? '0' : value;\n};\n\n/**\n * @param {Target} target\n * @param {String} propName\n * @param {tweenTypes} [tweenType]\n * @param {Object|void} [animationInlineStyles]\n * @return {String|Number}\n */\nconst getOriginalAnimatableValue = (target, propName, tweenType, animationInlineStyles) => {\n  const type = !isUnd(tweenType) ? tweenType : getTweenType(target, propName);\n  return type === tweenTypes.OBJECT ? target[propName] || 0 :\n         type === tweenTypes.ATTRIBUTE ? /** @type {DOMTarget} */(target).getAttribute(propName) :\n         type === tweenTypes.TRANSFORM ? parseInlineTransforms(/** @type {DOMTarget} */(target), propName, animationInlineStyles) :\n         type === tweenTypes.CSS_VAR ? getCSSValue(/** @type {DOMTarget} */(target), propName, animationInlineStyles).trimStart() :\n         getCSSValue(/** @type {DOMTarget} */(target), propName, animationInlineStyles);\n};\n\n/**\n * @param  {Number} x\n * @param  {Number} y\n * @param  {String} operator\n * @return {Number}\n */\nconst getRelativeValue = (x, y, operator) => {\n  return operator === '-' ? x - y :\n         operator === '+' ? x + y :\n         x * y;\n};\n\n/** @return {TweenDecomposedValue} */\nconst createDecomposedValueTargetObject = () => {\n  return {\n    /** @type {valueTypes} */\n    t: valueTypes.NUMBER,\n    n: 0,\n    u: null,\n    o: null,\n    d: null,\n    s: null,\n  }\n};\n\n/**\n * @param  {String|Number} rawValue\n * @param  {TweenDecomposedValue} targetObject\n * @return {TweenDecomposedValue}\n */\nconst decomposeRawValue = (rawValue, targetObject) => {\n  /** @type {valueTypes} */\n  targetObject.t = valueTypes.NUMBER;\n  targetObject.n = 0;\n  targetObject.u = null;\n  targetObject.o = null;\n  targetObject.d = null;\n  targetObject.s = null;\n  if (!rawValue) return targetObject;\n  const num = +rawValue;\n  if (!isNaN(num)) {\n    // It's a number\n    targetObject.n = num;\n    return targetObject;\n  } else {\n    // let str = /** @type {String} */(rawValue).trim();\n    let str = /** @type {String} */(rawValue);\n    // Parsing operators (+=, -=, *=) manually is much faster than using regex here\n    if (str[1] === '=') {\n      targetObject.o = str[0];\n      str = str.slice(2);\n    }\n    // Skip exec regex if the value type is complex or color to avoid long regex backtracking\n    const unitMatch = str.includes(' ') ? false : unitsExecRgx.exec(str);\n    if (unitMatch) {\n      // Has a number and a unit\n      targetObject.t = valueTypes.UNIT;\n      targetObject.n = +unitMatch[1];\n      targetObject.u = unitMatch[2];\n      return targetObject;\n    } else if (targetObject.o) {\n      // Has an operator (+=, -=, *=)\n      targetObject.n = +str;\n      return targetObject;\n    } else if (isCol(str)) {\n      // Is a color\n      targetObject.t = valueTypes.COLOR;\n      targetObject.d = convertColorStringValuesToRgbaArray(str);\n      return targetObject;\n    } else {\n      // Is a more complex string (generally svg coords, calc() or filters CSS values)\n      const matchedNumbers = str.match(digitWithExponentRgx);\n      targetObject.t = valueTypes.COMPLEX;\n      targetObject.d = matchedNumbers ? matchedNumbers.map(Number) : [];\n      targetObject.s = str.split(digitWithExponentRgx) || [];\n      return targetObject;\n    }\n  }\n};\n\n/**\n * @param  {Tween} tween\n * @param  {TweenDecomposedValue} targetObject\n * @return {TweenDecomposedValue}\n */\nconst decomposeTweenValue = (tween, targetObject) => {\n  targetObject.t = tween._valueType;\n  targetObject.n = tween._toNumber;\n  targetObject.u = tween._unit;\n  targetObject.o = null;\n  targetObject.d = cloneArray(tween._toNumbers);\n  targetObject.s = cloneArray(tween._strings);\n  return targetObject;\n};\n\nconst decomposedOriginalValue = createDecomposedValueTargetObject();\n\n\n\n\nconst lookups = {\n  /** @type {TweenReplaceLookups} */\n  _rep: new WeakMap(),\n  /** @type {TweenAdditiveLookups} */\n  _add: new Map(),\n};\n\n/**\n * @param  {Target} target\n * @param  {String} property\n * @param  {String} lookup\n * @return {TweenPropertySiblings}\n */\nconst getTweenSiblings = (target, property, lookup = '_rep') => {\n  const lookupMap = lookups[lookup];\n  let targetLookup = lookupMap.get(target);\n  if (!targetLookup) {\n    targetLookup = {};\n    lookupMap.set(target, targetLookup);\n  }\n  return targetLookup[property] ? targetLookup[property] : targetLookup[property] = {\n    _head: null,\n    _tail: null,\n  }\n};\n\n/**\n * @param  {Tween} p\n * @param  {Tween} c\n * @return {Number|Boolean}\n */\nconst addTweenSortMethod = (p, c) => {\n  return p._isOverridden || p._absoluteStartTime > c._absoluteStartTime;\n};\n\n/**\n * @param {Tween} tween\n */\nconst overrideTween = tween => {\n  tween._isOverlapped = 1;\n  tween._isOverridden = 1;\n  tween._changeDuration = minValue;\n  tween._currentTime = minValue;\n};\n\n/**\n * @param  {Tween} tween\n * @param  {TweenPropertySiblings} siblings\n * @return {Tween}\n */\nconst composeTween = (tween, siblings) => {\n\n  const tweenCompositionType = tween._composition;\n\n  // Handle replaced tweens\n\n  if (tweenCompositionType === compositionTypes.replace) {\n\n    const tweenAbsStartTime = tween._absoluteStartTime;\n\n    addChild(siblings, tween, addTweenSortMethod, '_prevRep', '_nextRep');\n\n    const prevSibling = tween._prevRep;\n\n    // Update the previous siblings for composition replace tweens\n\n    if (prevSibling) {\n\n      const prevParent = prevSibling.parent;\n      const prevAbsEndTime = prevSibling._absoluteStartTime + prevSibling._changeDuration;\n\n      // Handle looped animations tween\n\n      if (\n        // Check if the previous tween is from a different animation\n        tween.parent.id !== prevParent.id &&\n        // Check if the animation has loops\n        prevParent.iterationCount> 1 &&\n        // Check if _absoluteChangeEndTime of last loop overlaps the current tween\n        prevAbsEndTime + (prevParent.duration - prevParent.iterationDuration) > tweenAbsStartTime\n      ) {\n\n        // TODO: Find a way to only override the iterations overlapping with the tween\n        overrideTween(prevSibling);\n\n        let prevPrevSibling = prevSibling._prevRep;\n\n        // If the tween was part of a set of keyframes, override its siblings\n        while (prevPrevSibling && prevPrevSibling.parent.id === prevParent.id) {\n          overrideTween(prevPrevSibling);\n          prevPrevSibling = prevPrevSibling._prevRep;\n        }\n\n      }\n\n      const absoluteUpdateStartTime = tweenAbsStartTime - tween._delay;\n\n      if (prevAbsEndTime > absoluteUpdateStartTime) {\n\n        const prevChangeStartTime = prevSibling._startTime;\n        const prevTLOffset = prevAbsEndTime - (prevChangeStartTime + prevSibling._updateDuration);\n\n        prevSibling._changeDuration = absoluteUpdateStartTime - prevTLOffset - prevChangeStartTime;\n        prevSibling._currentTime = prevSibling._changeDuration;\n        prevSibling._isOverlapped = 1;\n\n        if (prevSibling._changeDuration < minValue) {\n          overrideTween(prevSibling);\n        }\n      }\n\n      // Pause (and cancel) the parent if it only contains overlapped tweens\n\n      let pausePrevParentAnimation = true;\n\n      forEachChildren(prevParent, (/** @type Tween */t) => {\n        if (!t._isOverlapped) pausePrevParentAnimation = false;\n      });\n\n      if (pausePrevParentAnimation) {\n        const prevParentTL = prevParent.parent;\n        if (prevParentTL) {\n          let pausePrevParentTL = true;\n          forEachChildren(prevParentTL, (/** @type JSAnimation */a) => {\n            if (a !== prevParent) {\n              forEachChildren(a, (/** @type Tween */t) => {\n                if (!t._isOverlapped) pausePrevParentTL = false;\n              });\n            }\n          });\n          if (pausePrevParentTL) {\n            prevParentTL.cancel();\n          }\n        } else {\n          prevParent.cancel();\n          // Previously, calling .cancel() on a timeline child would affect the render order of other children\n          // Worked around this by marking it as .completed and using .pause() for safe removal in the engine loop\n          // This is no longer needed since timeline tween composition is now handled separatly\n          // Keeping this here for reference\n          // prevParent.completed = true;\n          // prevParent.pause();\n        }\n      }\n\n    }\n\n    // let nextSibling = tween._nextRep;\n\n    // // All the next siblings are automatically overridden\n\n    // if (nextSibling && nextSibling._absoluteStartTime >= tweenAbsStartTime) {\n    //   while (nextSibling) {\n    //     overrideTween(nextSibling);\n    //     nextSibling = nextSibling._nextRep;\n    //   }\n    // }\n\n    // if (nextSibling && nextSibling._absoluteStartTime < tweenAbsStartTime) {\n    //   while (nextSibling) {\n    //     overrideTween(nextSibling);\n    //     console.log(tween.id, nextSibling.id);\n    //     nextSibling = nextSibling._nextRep;\n    //   }\n    // }\n\n  // Handle additive tweens composition\n\n  } else if (tweenCompositionType === compositionTypes.blend) {\n\n    const additiveTweenSiblings = getTweenSiblings(tween.target, tween.property, '_add');\n    const additiveAnimation = addAdditiveAnimation(lookups._add);\n\n    let lookupTween = additiveTweenSiblings._head;\n\n    if (!lookupTween) {\n      lookupTween = { ...tween };\n      lookupTween._composition = compositionTypes.replace;\n      lookupTween._updateDuration = minValue;\n      lookupTween._startTime = 0;\n      lookupTween._numbers = cloneArray(tween._fromNumbers);\n      lookupTween._number = 0;\n      lookupTween._next = null;\n      lookupTween._prev = null;\n      addChild(additiveTweenSiblings, lookupTween);\n      addChild(additiveAnimation, lookupTween);\n    }\n\n    // Convert the values of TO to FROM and set TO to 0\n\n    const toNumber = tween._toNumber;\n    tween._fromNumber = lookupTween._fromNumber - toNumber;\n    tween._toNumber = 0;\n    tween._numbers = cloneArray(tween._fromNumbers);\n    tween._number = 0;\n    lookupTween._fromNumber = toNumber;\n\n    if (tween._toNumbers) {\n      const toNumbers = cloneArray(tween._toNumbers);\n      if (toNumbers) {\n        toNumbers.forEach((value, i) => {\n          tween._fromNumbers[i] = lookupTween._fromNumbers[i] - value;\n          tween._toNumbers[i] = 0;\n        });\n      }\n      lookupTween._fromNumbers = toNumbers;\n    }\n\n    addChild(additiveTweenSiblings, tween, null, '_prevAdd', '_nextAdd');\n\n  }\n\n  return tween;\n\n};\n\n/**\n * @param  {Tween} tween\n * @return {Tween}\n */\nconst removeTweenSliblings = tween => {\n  const tweenComposition = tween._composition;\n  if (tweenComposition !== compositionTypes.none) {\n    const tweenTarget = tween.target;\n    const tweenProperty = tween.property;\n    const replaceTweensLookup = lookups._rep;\n    const replaceTargetProps = replaceTweensLookup.get(tweenTarget);\n    const tweenReplaceSiblings = replaceTargetProps[tweenProperty];\n    removeChild(tweenReplaceSiblings, tween, '_prevRep', '_nextRep');\n    if (tweenComposition === compositionTypes.blend) {\n      const addTweensLookup = lookups._add;\n      const addTargetProps = addTweensLookup.get(tweenTarget);\n      if (!addTargetProps) return;\n      const additiveTweenSiblings = addTargetProps[tweenProperty];\n      const additiveAnimation = additive.animation;\n      removeChild(additiveTweenSiblings, tween, '_prevAdd', '_nextAdd');\n      // If only one tween is left in the additive lookup, it's the tween lookup\n      const lookupTween = additiveTweenSiblings._head;\n      if (lookupTween && lookupTween === additiveTweenSiblings._tail) {\n        removeChild(additiveTweenSiblings, lookupTween, '_prevAdd', '_nextAdd');\n        removeChild(additiveAnimation, lookupTween);\n        let shouldClean = true;\n        for (let prop in addTargetProps) {\n          if (addTargetProps[prop]._head) {\n            shouldClean = false;\n            break;\n          }\n        }\n        if (shouldClean) {\n          addTweensLookup.delete(tweenTarget);\n        }\n      }\n    }\n  }\n  return tween;\n};\n\n\n\n\n/**\n * @param  {Timer} timer\n * @return {Timer}\n */\nconst resetTimerProperties = timer => {\n  timer.paused = true;\n  timer.began = false;\n  timer.completed = false;\n  return timer;\n};\n\n/**\n * @param  {Timer} timer\n * @return {Timer}\n */\nconst reviveTimer = timer => {\n  if (!timer._cancelled) return timer;\n  if (timer._hasChildren) {\n    forEachChildren(timer, reviveTimer);\n  } else {\n    forEachChildren(timer, (/** @type {Tween} tween*/tween) => {\n      if (tween._composition !== compositionTypes.none) {\n        composeTween(tween, getTweenSiblings(tween.target, tween.property));\n      }\n    });\n  }\n  timer._cancelled = 0;\n  return timer;\n};\n\nlet timerId = 0;\n\n/**\n * Base class used to create Timers, Animations and Timelines\n */\nclass Timer extends Clock {\n  /**\n   * @param {TimerParams} [parameters]\n   * @param {Timeline} [parent]\n   * @param {Number} [parentPosition]\n   */\n  constructor(parameters = {}, parent = null, parentPosition = 0) {\n\n    super(0);\n\n    const {\n      id,\n      delay,\n      duration,\n      reversed,\n      alternate,\n      loop,\n      loopDelay,\n      autoplay,\n      frameRate,\n      playbackRate,\n      onComplete,\n      onLoop,\n      onPause,\n      onBegin,\n      onBeforeUpdate,\n      onUpdate,\n    } = parameters;\n\n    if (globals.scope) globals.scope.revertibles.push(this);\n\n    const timerInitTime = parent ? 0 : engine._elapsedTime;\n    const timerDefaults = parent ? parent.defaults : globals.defaults;\n    const timerDelay = /** @type {Number} */(isFnc(delay) || isUnd(delay) ? timerDefaults.delay : +delay);\n    const timerDuration = isFnc(duration) || isUnd(duration) ? Infinity : +duration;\n    const timerLoop = setValue(loop, timerDefaults.loop);\n    const timerLoopDelay = setValue(loopDelay, timerDefaults.loopDelay);\n    const timerIterationCount = timerLoop === true ||\n                                timerLoop === Infinity ||\n                                /** @type {Number} */(timerLoop) < 0 ? Infinity :\n                                /** @type {Number} */(timerLoop) + 1;\n\n    let offsetPosition = 0;\n\n    if (parent) {\n      offsetPosition = parentPosition;\n    } else {\n      let startTime = now();\n      // Make sure to tick the engine once if suspended to avoid big gaps with the following offsetPosition calculation\n      if (engine.paused) {\n        engine.requestTick(startTime);\n        startTime = engine._elapsedTime;\n      }\n      offsetPosition = startTime - engine._startTime;\n    }\n\n    // Timer's parameters\n    this.id = !isUnd(id) ? id : ++timerId;\n    /** @type {Timeline} */\n    this.parent = parent;\n    // Total duration of the timer\n    this.duration = clampInfinity(((timerDuration + timerLoopDelay) * timerIterationCount) - timerLoopDelay) || minValue;\n    /** @type {Boolean} */\n    this.backwards = false;\n    /** @type {Boolean} */\n    this.paused = true;\n    /** @type {Boolean} */\n    this.began = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Callback<this>} */\n    this.onBegin = onBegin || timerDefaults.onBegin;\n    /** @type {Callback<this>} */\n    this.onBeforeUpdate = onBeforeUpdate || timerDefaults.onBeforeUpdate;\n    /** @type {Callback<this>} */\n    this.onUpdate = onUpdate || timerDefaults.onUpdate;\n    /** @type {Callback<this>} */\n    this.onLoop = onLoop || timerDefaults.onLoop;\n    /** @type {Callback<this>} */\n    this.onPause = onPause || timerDefaults.onPause;\n    /** @type {Callback<this>} */\n    this.onComplete = onComplete || timerDefaults.onComplete;\n    /** @type {Number} */\n    this.iterationDuration = timerDuration; // Duration of one loop\n    /** @type {Number} */\n    this.iterationCount = timerIterationCount; // Number of loops\n    /** @type {Boolean|ScrollObserver} */\n    this._autoplay = parent ? false : setValue(autoplay, timerDefaults.autoplay);\n    /** @type {Number} */\n    this._offset = offsetPosition;\n    /** @type {Number} */\n    this._delay = timerDelay;\n    /** @type {Number} */\n    this._loopDelay = timerLoopDelay;\n    /** @type {Number} */\n    this._iterationTime = 0;\n    /** @type {Number} */\n    this._currentIteration = 0; // Current loop index\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Boolean} */\n    this._running = false;\n    /** @type {Number} */\n    this._reversed = +setValue(reversed, timerDefaults.reversed);\n    /** @type {Number} */\n    this._reverse = this._reversed;\n    /** @type {Number} */\n    this._cancelled = 0;\n    /** @type {Boolean} */\n    this._alternate = setValue(alternate, timerDefaults.alternate);\n    /** @type {Renderable} */\n    this._prev = null;\n    /** @type {Renderable} */\n    this._next = null;\n\n    // Clock's parameters\n    /** @type {Number} */\n    this._elapsedTime = timerInitTime;\n    /** @type {Number} */\n    this._startTime = timerInitTime;\n    /** @type {Number} */\n    this._lastTime = timerInitTime;\n    /** @type {Number} */\n    this._fps = setValue(frameRate, timerDefaults.frameRate);\n    /** @type {Number} */\n    this._speed = setValue(playbackRate, timerDefaults.playbackRate);\n  }\n\n  get cancelled() {\n    return !!this._cancelled;\n  }\n\n  /** @param {Boolean} cancelled  */\n  set cancelled(cancelled) {\n    cancelled ? this.cancel() : this.reset(1).play();\n  }\n\n  get currentTime() {\n    return clamp(round(this._currentTime, globals.precision), -this._delay, this.duration);\n  }\n\n  /** @param {Number} time  */\n  set currentTime(time) {\n    const paused = this.paused;\n    // Pausing the timer is necessary to avoid time jumps on a running instance\n    this.pause().seek(+time);\n    if (!paused) this.resume();\n  }\n\n  get iterationCurrentTime() {\n    return round(this._iterationTime, globals.precision);\n  }\n\n  /** @param {Number} time  */\n  set iterationCurrentTime(time) {\n    this.currentTime = (this.iterationDuration * this._currentIteration) + time;\n  }\n\n  get progress() {\n    return clamp(round(this._currentTime / this.duration, 5), 0, 1);\n  }\n\n  /** @param {Number} progress  */\n  set progress(progress) {\n    this.currentTime = this.duration * progress;\n  }\n\n  get iterationProgress() {\n    return clamp(round(this._iterationTime / this.iterationDuration, 5), 0, 1);\n  }\n\n  /** @param {Number} progress  */\n  set iterationProgress(progress) {\n    const iterationDuration = this.iterationDuration;\n    this.currentTime = (iterationDuration * this._currentIteration) + (iterationDuration * progress);\n  }\n\n  get currentIteration() {\n    return this._currentIteration;\n  }\n\n  /** @param {Number} iterationCount  */\n  set currentIteration(iterationCount) {\n    this.currentTime = (this.iterationDuration * clamp(+iterationCount, 0, this.iterationCount - 1));\n  }\n\n  get reversed() {\n    return !!this._reversed;\n  }\n\n  /** @param {Boolean} reverse  */\n  set reversed(reverse) {\n    reverse ? this.reverse() : this.play();\n  }\n\n  get speed() {\n    return super.speed;\n  }\n\n  /** @param {Number} playbackRate  */\n  set speed(playbackRate) {\n    super.speed = playbackRate;\n    this.resetTime();\n  }\n\n  /**\n   * @param  {Number} internalRender\n   * @return {this}\n   */\n  reset(internalRender = 0) {\n    // If cancelled, revive the timer before rendering in order to have propertly composed tweens siblings\n    reviveTimer(this);\n    if (this._reversed && !this._reverse) this.reversed = false;\n    // Rendering before updating the completed flag to prevent skips and to make sure the properties are not overridden\n    // Setting the iterationTime at the end to force the rendering to happend backwards, otherwise calling .reset() on Timelines might not render children in the right order\n    // NOTE: This is only required for Timelines and might be better to move to the Timeline class?\n    this._iterationTime = this.iterationDuration;\n    // Set tickMode to tickModes.FORCE to force rendering\n    tick(this, 0, 1, internalRender, tickModes.FORCE);\n    // Reset timer properties after revive / render to make sure the props are not updated again\n    resetTimerProperties(this);\n    // Also reset children properties\n    if (this._hasChildren) {\n      forEachChildren(this, resetTimerProperties);\n    }\n    return this;\n  }\n\n  /**\n   * @param  {Number} internalRender\n   * @return {this}\n   */\n  init(internalRender = 0) {\n    this.fps = this._fps;\n    this.speed = this._speed;\n    // Manually calling .init() on timelines should render all children intial state\n    // Forces all children to render once then render to 0 when reseted\n    if (!internalRender && this._hasChildren) {\n      tick(this, this.duration, 1, internalRender, tickModes.FORCE);\n    }\n    this.reset(internalRender);\n    // Make sure to set autoplay to false to child timers so it doesn't attempt to autoplay / link\n    const autoplay = this._autoplay;\n    if (autoplay === true) {\n      this.resume();\n    } else if (autoplay && !isUnd(/** @type {ScrollObserver} */(autoplay).linked)) {\n      /** @type {ScrollObserver} */(autoplay).link(this);\n    }\n    return this;\n  }\n\n  /** @return {this} */\n  resetTime() {\n    const timeScale = 1 / (this._speed * engine._speed);\n    this._startTime = now() - (this._currentTime + this._delay) * timeScale;\n    return this;\n  }\n\n  /** @return {this} */\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    this.onPause(this);\n    return this;\n  }\n\n  /** @return {this} */\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // We can safely imediatly render a timer that has no duration and no children\n    if (this.duration <= minValue && !this._hasChildren) {\n      tick(this, minValue, 0, 0, tickModes.FORCE);\n    } else {\n      if (!this._running) {\n        addChild(engine, this);\n        engine._hasChildren = true;\n        this._running = true;\n      }\n      this.resetTime();\n      // Forces the timer to advance by at least one frame when the next tick occurs\n      this._startTime -= 12;\n      engine.wake();\n    }\n    return this;\n  }\n\n  /** @return {this} */\n  restart() {\n    return this.reset(0).resume();\n  }\n\n  /**\n   * @param  {Number} time\n   * @param  {Boolean|Number} [muteCallbacks]\n   * @param  {Boolean|Number} [internalRender]\n   * @return {this}\n   */\n  seek(time, muteCallbacks = 0, internalRender = 0) {\n    // Recompose the tween siblings in case the timer has been cancelled\n    reviveTimer(this);\n    // If you seek a completed animation, otherwise the next play will starts at 0\n    this.completed = false;\n    const isPaused = this.paused;\n    this.paused = true;\n    // timer, time, muteCallbacks, internalRender, tickMode\n    tick(this, time + this._delay, ~~muteCallbacks, ~~internalRender, tickModes.AUTO);\n    return isPaused ? this : this.resume();\n  }\n\n  /** @return {this} */\n  alternate() {\n    const reversed = this._reversed;\n    const count = this.iterationCount;\n    const duration = this.iterationDuration;\n    // Calculate the maximum iterations possible given the iteration duration\n    const iterations = count === Infinity ? floor(maxValue / duration) : count;\n    this._reversed = +(this._alternate && !(iterations % 2) ? reversed : !reversed);\n    if (count === Infinity) {\n      // Handle infinite loops to loop on themself\n      this.iterationProgress = this._reversed ? 1 - this.iterationProgress : this.iterationProgress;\n    } else {\n      this.seek((duration * iterations) - this._currentTime);\n    }\n    this.resetTime();\n    return this;\n  }\n\n  /** @return {this} */\n  play() {\n    if (this._reversed) this.alternate();\n    return this.resume();\n  }\n\n  /** @return {this} */\n  reverse() {\n    if (!this._reversed) this.alternate();\n    return this.resume();\n  }\n\n  // TODO: Move all the animation / tweens / children related code to Animation / Timeline\n\n  /** @return {this} */\n  cancel() {\n    if (this._hasChildren) {\n      forEachChildren(this, (/** @type {Renderable} */child) => child.cancel(), true);\n    } else {\n      forEachChildren(this, removeTweenSliblings);\n    }\n    this._cancelled = 1;\n    // Pausing the timer removes it from the engine\n    return this.pause();\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    const normlizedDuration = normalizeTime(newDuration);\n    if (currentDuration === normlizedDuration) return this;\n    const timeScale = newDuration / currentDuration;\n    const isSetter = newDuration <= minValue;\n    this.duration = isSetter ? minValue : normlizedDuration;\n    this.iterationDuration = isSetter ? minValue : normalizeTime(this.iterationDuration * timeScale);\n    this._offset *= timeScale;\n    this._delay *= timeScale;\n    this._loopDelay *= timeScale;\n    return this;\n  }\n\n /**\n   * Cancels the timer by seeking it back to 0 and reverting the attached scroller if necessary\n   * @return {this}\n   */\n  revert() {\n    tick(this, 0, 1, 0, tickModes.AUTO);\n    const ap = /** @type {ScrollObserver} */(this._autoplay);\n    if (ap && ap.linked && ap.linked === this) ap.revert();\n    return this.cancel();\n  }\n\n /**\n   * Imediatly completes the timer, cancels it and triggers the onComplete callback\n   * @return {this}\n   */\n  complete() {\n    return this.seek(this.duration).cancel();\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      // this.then = null prevents infinite recursion if returned by an async function\n      // https://github.com/juliangarnierorg/anime-beta/issues/26\n      this.then = null;\n      callback(this);\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      // Make sure to resolve imediatly if the timer has already completed\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n\n}\n\n\n/**\n * @param {TimerParams} [parameters]\n * @return {Timer}\n */\nconst createTimer = parameters => new Timer(parameters, null, 0).init();\n\n\n\n\n/** @type {EasingFunction} */\nconst none = t => t;\n\n// Cubic Bezier solver adapted from https://github.com/gre/bezier-ease © Gaëtan Renaudeau\n\n/**\n * @param  {Number} aT\n * @param  {Number} aA1\n * @param  {Number} aA2\n * @return {Number}\n */\nconst calcBezier = (aT, aA1, aA2) => (((1 - 3 * aA2 + 3 * aA1) * aT + (3 * aA2 - 6 * aA1)) * aT + (3 * aA1)) * aT;\n\n/**\n * @param  {Number} aX\n * @param  {Number} mX1\n * @param  {Number} mX2\n * @return {Number}\n */\nconst binarySubdivide = (aX, mX1, mX2) => {\n  let aA = 0, aB = 1, currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (abs(currentX) > .0000001 && ++i < 100);\n  return currentT;\n};\n\n/**\n * @param  {Number} [mX1]\n * @param  {Number} [mY1]\n * @param  {Number} [mX2]\n * @param  {Number} [mY2]\n * @return {EasingFunction}\n */\n\nconst cubicBezier = (mX1 = 0.5, mY1 = 0.0, mX2 = 0.5, mY2 = 1.0) => (mX1 === mY1 && mX2 === mY2) ? none :\n  t => t === 0 || t === 1 ? t :\n  calcBezier(binarySubdivide(t, mX1, mX2), mY1, mY2);\n\n/**\n * Steps ease implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n * Only covers 'end' and 'start' jumpterms\n * @param  {Number} steps\n * @param  {Boolean} [fromStart]\n * @return {EasingFunction}\n */\nconst steps = (steps = 10, fromStart) => {\n  const roundMethod = fromStart ? ceil : floor;\n  return t => roundMethod(clamp(t, 0, 1) * steps) * (1 / steps);\n};\n\n/**\n * Without parameters, the linear function creates a non-eased transition.\n * Parameters, if used, creates a piecewise linear easing by interpolating linearly between the specified points.\n * @param  {...String|Number} [args] - Points\n * @return {EasingFunction}\n */\nconst linear = (...args) => {\n  const argsLength = args.length;\n  if (!argsLength) return none;\n  const totalPoints = argsLength - 1;\n  const firstArg = args[0];\n  const lastArg = args[totalPoints];\n  const xPoints = [0];\n  const yPoints = [parseNumber(firstArg)];\n  for (let i = 1; i < totalPoints; i++) {\n    const arg = args[i];\n    const splitValue = isStr(arg) ?\n    /** @type {String} */(arg).trim().split(' ') :\n    [arg];\n    const value = splitValue[0];\n    const percent = splitValue[1];\n    xPoints.push(!isUnd(percent) ? parseNumber(percent) / 100 : i / totalPoints);\n    yPoints.push(parseNumber(value));\n  }\n  yPoints.push(parseNumber(lastArg));\n  xPoints.push(1);\n  return function easeLinear(t) {\n    for (let i = 1, l = xPoints.length; i < l; i++) {\n      const currentX = xPoints[i];\n      if (t <= currentX) {\n        const prevX = xPoints[i - 1];\n        const prevY = yPoints[i - 1];\n        return prevY + (yPoints[i] - prevY) * (t - prevX) / (currentX - prevX);\n      }\n    }\n    return yPoints[yPoints.length - 1];\n  }\n};\n\n/**\n * Generate random steps\n * @param  {Number} [length] - The number of steps\n * @param  {Number} [randomness] - How strong the randomness is\n * @return {EasingFunction}\n */\nconst irregular = (length = 10, randomness = 1) => {\n  const values = [0];\n  const total = length - 1;\n  for (let i = 1; i < total; i++) {\n    const previousValue = values[i - 1];\n    const spacing = i / total;\n    const segmentEnd = (i + 1) / total;\n    const randomVariation = spacing + (segmentEnd - spacing) * Math.random();\n    // Mix the even spacing and random variation based on the randomness parameter\n    const randomValue = spacing * (1 - randomness) + randomVariation * randomness;\n    values.push(clamp(randomValue, previousValue, 1));\n  }\n  values.push(1);\n  return linear(...values);\n};\n\n// Easing functions adapted from http://www.robertpenner.com/ease © Robert Penner\n\n/**\n * @callback PowerEasing\n * @param {Number|String} [power=1.675]\n * @return {EasingFunction}\n */\n\n/**\n * @callback BackEasing\n * @param {Number|String} [overshoot=1.70158]\n * @return {EasingFunction}\n */\n\n/**\n * @callback ElasticEasing\n * @param {Number|String} [amplitude=1]\n * @param {Number|String} [period=.3]\n * @return {EasingFunction}\n */\n\n/**\n * @callback EaseFactory\n * @param {Number|String} [paramA]\n * @param {Number|String} [paramB]\n * @return {EasingFunction|Number}\n */\n\n/** @typedef {PowerEasing|BackEasing|ElasticEasing} EasesFactory */\n\nconst halfPI = PI / 2;\nconst doublePI = PI * 2;\n/** @type {PowerEasing} */\nconst easeInPower = (p = 1.68) => t => pow(t, +p);\n\n/** @type {Record<String, EasesFactory|EasingFunction>} */\nconst easeInFunctions = {\n  [emptyString]: easeInPower,\n  Quad: easeInPower(2),\n  Cubic: easeInPower(3),\n  Quart: easeInPower(4),\n  Quint: easeInPower(5),\n  /** @type {EasingFunction} */\n  Sine: t => 1 - cos(t * halfPI),\n  /** @type {EasingFunction} */\n  Circ: t => 1 - sqrt(1 - t * t),\n  /** @type {EasingFunction} */\n  Expo: t => t ? pow(2, 10 * t - 10) : 0,\n  /** @type {EasingFunction} */\n  Bounce: t => {\n    let pow2, b = 4;\n    while (t < ((pow2 = pow(2, --b)) - 1) / 11);\n    return 1 / pow(4, 3 - b) - 7.5625 * pow((pow2 * 3 - 2) / 22 - t, 2);\n  },\n  /** @type {BackEasing} */\n  Back: (overshoot = 1.70158) => t => (+overshoot + 1) * t * t * t - +overshoot * t * t,\n  /** @type {ElasticEasing} */\n  Elastic: (amplitude = 1, period = .3) => {\n    const a = clamp(+amplitude, 1, 10);\n    const p = clamp(+period, minValue, 2);\n    const s = (p / doublePI) * asin(1 / a);\n    const e = doublePI / p;\n    return t => t === 0 || t === 1 ? t : -a * pow(2, -10 * (1 - t)) * sin(((1 - t) - s) * e);\n  }\n};\n\n/**\n * @callback EaseType\n * @param {EasingFunction} Ease\n * @return {EasingFunction}\n */\n\n/** @type {Record<String, EaseType>} */\nconst easeTypes = {\n  in: easeIn => t => easeIn(t),\n  out: easeIn => t => 1 - easeIn(1 - t),\n  inOut: easeIn => t => t < .5 ? easeIn(t * 2) / 2 : 1 - easeIn(t * -2 + 2) / 2,\n  outIn: easeIn => t => t < .5 ? (1 - easeIn(1 - t * 2)) / 2 : (easeIn(t * 2 - 1) + 1) / 2,\n};\n\n/**\n * @param  {String} string\n * @param  {Record<String, EasesFactory|EasingFunction>} easesFunctions\n * @param  {Object} easesLookups\n * @return {EasingFunction}\n */\nconst parseEaseString = (string, easesFunctions, easesLookups) => {\n  if (easesLookups[string]) return easesLookups[string];\n  if (string.indexOf('(') <= -1) {\n    const hasParams = easeTypes[string] || string.includes('Back') || string.includes('Elastic');\n    const parsedFn = /** @type {EasingFunction} */(hasParams ? /** @type {EasesFactory} */(easesFunctions[string])() : easesFunctions[string]);\n    return parsedFn ? easesLookups[string] = parsedFn : none;\n  } else {\n    const split = string.slice(0, -1).split('(');\n    const parsedFn = /** @type {EasesFactory} */(easesFunctions[split[0]]);\n    return parsedFn ? easesLookups[string] = parsedFn(...split[1].split(',')) : none;\n  }\n};\n\n/**\n * @typedef  {Object} EasesFunctions\n * @property {typeof linear} linear\n * @property {typeof irregular} irregular\n * @property {typeof steps} steps\n * @property {typeof cubicBezier} cubicBezier\n * @property {PowerEasing} in\n * @property {PowerEasing} out\n * @property {PowerEasing} inOut\n * @property {PowerEasing} outIn\n * @property {EasingFunction} inQuad\n * @property {EasingFunction} outQuad\n * @property {EasingFunction} inOutQuad\n * @property {EasingFunction} outInQuad\n * @property {EasingFunction} inCubic\n * @property {EasingFunction} outCubic\n * @property {EasingFunction} inOutCubic\n * @property {EasingFunction} outInCubic\n * @property {EasingFunction} inQuart\n * @property {EasingFunction} outQuart\n * @property {EasingFunction} inOutQuart\n * @property {EasingFunction} outInQuart\n * @property {EasingFunction} inQuint\n * @property {EasingFunction} outQuint\n * @property {EasingFunction} inOutQuint\n * @property {EasingFunction} outInQuint\n * @property {EasingFunction} inSine\n * @property {EasingFunction} outSine\n * @property {EasingFunction} inOutSine\n * @property {EasingFunction} outInSine\n * @property {EasingFunction} inCirc\n * @property {EasingFunction} outCirc\n * @property {EasingFunction} inOutCirc\n * @property {EasingFunction} outInCirc\n * @property {EasingFunction} inExpo\n * @property {EasingFunction} outExpo\n * @property {EasingFunction} inOutExpo\n * @property {EasingFunction} outInExpo\n * @property {EasingFunction} inBounce\n * @property {EasingFunction} outBounce\n * @property {EasingFunction} inOutBounce\n * @property {EasingFunction} outInBounce\n * @property {BackEasing} inBack\n * @property {BackEasing} outBack\n * @property {BackEasing} inOutBack\n * @property {BackEasing} outInBack\n * @property {ElasticEasing} inElastic\n * @property {ElasticEasing} outElastic\n * @property {ElasticEasing} inOutElastic\n * @property {ElasticEasing} outInElastic\n */\n\nconst eases = (/*#__PURE__*/ (() => {\n  const list = { linear, irregular, steps, cubicBezier };\n  for (let type in easeTypes) {\n    for (let name in easeInFunctions) {\n      const easeIn = easeInFunctions[name];\n      const easeType = easeTypes[type];\n      list[type + name] = /** @type {EasesFactory|EasingFunction} */(\n        name === emptyString || name === 'Back' || name === 'Elastic' ?\n        (a, b) => easeType(/** @type {EasesFactory} */(easeIn)(a, b)) :\n        easeType(/** @type {EasingFunction} */(easeIn))\n      );\n    }\n  }\n  return /** @type {EasesFunctions} */(list);\n})());\n\n/** @type {Record<String, EasingFunction>} */\nconst JSEasesLookups = { linear: none };\n\n/**\n * @param  {EasingParam} ease\n * @return {EasingFunction}\n */\nconst parseEasings = ease => isFnc(ease) ? ease :\n  isStr(ease) ? parseEaseString(/** @type {String} */(ease), eases, JSEasesLookups) :\n  none;\n\n\n\n\nconst propertyNamesCache = {};\n\n/**\n * @param  {String} propertyName\n * @param  {Target} target\n * @param  {tweenTypes} tweenType\n * @return {String}\n */\nconst sanitizePropertyName = (propertyName, target, tweenType) => {\n  if (tweenType === tweenTypes.TRANSFORM) {\n    const t = shortTransforms.get(propertyName);\n    return t ? t : propertyName;\n  } else if (\n    tweenType === tweenTypes.CSS ||\n    // Handle special cases where properties like \"strokeDashoffset\" needs to be set as \"stroke-dashoffset\"\n    // but properties like \"baseFrequency\" should stay in lowerCamelCase\n    (tweenType === tweenTypes.ATTRIBUTE && (isSvg(target) && propertyName in /** @type {DOMTarget} */(target).style))\n  ) {\n    const cachedPropertyName = propertyNamesCache[propertyName];\n    if (cachedPropertyName) {\n      return cachedPropertyName;\n    } else {\n      const lowerCaseName = propertyName ? toLowerCase(propertyName) : propertyName;\n      propertyNamesCache[propertyName] = lowerCaseName;\n      return lowerCaseName;\n    }\n  } else {\n    return propertyName;\n  }\n};\n\n\n\n\nconst angleUnitsMap = { 'deg': 1, 'rad': 180 / PI, 'turn': 360 };\nconst convertedValuesCache = {};\n\n/**\n * @param  {DOMTarget} el\n * @param  {TweenDecomposedValue} decomposedValue\n * @param  {String} unit\n * @param  {Boolean} [force]\n * @return {TweenDecomposedValue}\n */\nconst convertValueUnit = (el, decomposedValue, unit, force = false) => {\n  const currentUnit = decomposedValue.u;\n  const currentNumber = decomposedValue.n;\n  if (decomposedValue.t === valueTypes.UNIT && currentUnit === unit) { // TODO: Check if checking against the same unit string is necessary\n    return decomposedValue;\n  }\n  const cachedKey = currentNumber + currentUnit + unit;\n  const cached = convertedValuesCache[cachedKey];\n  if (!isUnd(cached) && !force) {\n    decomposedValue.n = cached;\n  } else {\n    let convertedValue;\n    if (currentUnit in angleUnitsMap) {\n      convertedValue = currentNumber * angleUnitsMap[currentUnit] / angleUnitsMap[unit];\n    } else {\n      const baseline = 100;\n      const tempEl = /** @type {DOMTarget} */(el.cloneNode());\n      const parentNode = el.parentNode;\n      const parentEl = (parentNode && (parentNode !== doc)) ? parentNode : doc.body;\n      parentEl.appendChild(tempEl);\n      const elStyle = tempEl.style;\n      elStyle.width = baseline + currentUnit;\n      const currentUnitWidth = /** @type {HTMLElement} */(tempEl).offsetWidth || baseline;\n      elStyle.width = baseline + unit;\n      const newUnitWidth = /** @type {HTMLElement} */(tempEl).offsetWidth || baseline;\n      const factor = currentUnitWidth / newUnitWidth;\n      parentEl.removeChild(tempEl);\n      convertedValue = factor * currentNumber;\n    }\n    decomposedValue.n = convertedValue;\n    convertedValuesCache[cachedKey] = convertedValue;\n  }\n  decomposedValue.t === valueTypes.UNIT;\n  decomposedValue.u = unit;\n  return decomposedValue;\n};\n\n\n\n\n/**\n * @template {Renderable} T\n * @param {T} renderable\n * @return {T}\n */\nconst cleanInlineStyles = renderable => {\n  // Allow cleanInlineStyles() to be called on timelines\n  if (renderable._hasChildren) {\n    forEachChildren(renderable, cleanInlineStyles, true);\n  } else {\n    const animation = /** @type {JSAnimation} */(renderable);\n    animation.pause();\n    forEachChildren(animation, (/** @type {Tween} */tween) => {\n      const tweenProperty = tween.property;\n      const tweenTarget = tween.target;\n      if (tweenTarget[isDomSymbol]) {\n        const targetStyle = /** @type {DOMTarget} */(tweenTarget).style;\n        const originalInlinedValue = animation._inlineStyles[tweenProperty];\n        if (tween._tweenType === tweenTypes.TRANSFORM) {\n          const cachedTransforms = tweenTarget[transformsSymbol];\n          if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n            delete cachedTransforms[tweenProperty];\n          } else {\n            cachedTransforms[tweenProperty] = originalInlinedValue;\n          }\n          if (tween._renderTransforms) {\n            if (!Object.keys(cachedTransforms).length) {\n              targetStyle.removeProperty('transform');\n            } else {\n              let str = emptyString;\n              for (let key in cachedTransforms) {\n                str += transformsFragmentStrings[key] + cachedTransforms[key] + ') ';\n              }\n              targetStyle.transform = str;\n            }\n          }\n        } else {\n          if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n            targetStyle.removeProperty(tweenProperty);\n          } else {\n            targetStyle[tweenProperty] = originalInlinedValue;\n          }\n        }\n        if (animation._tail === tween) {\n          animation.targets.forEach(t => {\n            if (t.getAttribute && t.getAttribute('style') === emptyString) {\n              t.removeAttribute('style');\n            }          });\n        }\n      }\n    });\n  }\n  return renderable;\n};\n\n// Defines decomposed values target objects only once and mutate their properties later to avoid GC\n// TODO: Maybe move the objects creation to values.js and use the decompose function to create the base object\nconst fromTargetObject = createDecomposedValueTargetObject();\nconst toTargetObject = createDecomposedValueTargetObject();\nconst toFunctionStore = { func: null };\nconst keyframesTargetArray = [null];\nconst fastSetValuesArray = [null, null];\n/** @type {TweenKeyValue} */\nconst keyObjectTarget = { to: null };\n\nlet tweenId = 0;\nlet keyframes;\n/** @type {TweenParamsOptions & TweenValues} */\nlet key;\n\n/**\n * @param {DurationKeyframes | PercentageKeyframes} keyframes\n * @param {AnimationParams} parameters\n * @return {AnimationParams}\n */\nconst generateKeyframes = (keyframes, parameters) => {\n  /** @type {AnimationParams} */\n  const properties = {};\n  if (isArr(keyframes)) {\n    const propertyNames = [].concat(.../** @type {DurationKeyframes} */(keyframes).map(key => Object.keys(key))).filter(isKey);\n    for (let i = 0, l = propertyNames.length; i < l; i++) {\n      const propName = propertyNames[i];\n      const propArray = /** @type {DurationKeyframes} */(keyframes).map(key => {\n        /** @type {TweenKeyValue} */\n        const newKey = {};\n        for (let p in key) {\n          const keyValue = /** @type {TweenPropValue} */(key[p]);\n          if (isKey(p)) {\n            if (p === propName) {\n              newKey.to = keyValue;\n            }\n          } else {\n            newKey[p] = keyValue;\n          }\n        }\n        return newKey;\n      });\n      properties[propName] = /** @type {ArraySyntaxValue} */(propArray);\n    }\n\n  } else {\n    const totalDuration = /** @type {Number} */(setValue(parameters.duration, globals.defaults.duration));\n    const keys = Object.keys(keyframes)\n    .map(key => { return {o: parseFloat(key) / 100, p: keyframes[key]} })\n    .sort((a, b) => a.o - b.o);\n    keys.forEach(key => {\n      const offset = key.o;\n      const prop = key.p;\n      for (let name in prop) {\n        if (isKey(name)) {\n          let propArray = /** @type {Array} */(properties[name]);\n          if (!propArray) propArray = properties[name] = [];\n          const duration = offset * totalDuration;\n          let length = propArray.length;\n          let prevKey = propArray[length - 1];\n          const keyObj = { to: prop[name] };\n          let durProgress = 0;\n          for (let i = 0; i < length; i++) {\n            durProgress += propArray[i].duration;\n          }\n          if (length === 1) {\n            keyObj.from = prevKey.to;\n          }\n          if (prop.ease) {\n            keyObj.ease = prop.ease;\n          }\n          keyObj.duration = duration - (length ? durProgress : 0);\n          propArray.push(keyObj);\n        }\n      }\n      return key;\n    });\n\n    for (let name in properties) {\n      const propArray = /** @type {Array} */(properties[name]);\n      let prevEase;\n      // let durProgress = 0\n      for (let i = 0, l = propArray.length; i < l; i++) {\n        const prop = propArray[i];\n        // Emulate WAPPI easing parameter position\n        const currentEase = prop.ease;\n        prop.ease = prevEase ? prevEase : undefined;\n        prevEase = currentEase;\n        // durProgress += prop.duration;\n        // if (i === l - 1 && durProgress !== totalDuration) {\n        //   propArray.push({ from: prop.to, ease: prop.ease, duration: totalDuration - durProgress })\n        // }\n      }\n      if (!propArray[0].duration) {\n        propArray.shift();\n      }\n    }\n\n  }\n\n  return properties;\n};\n\nclass JSAnimation extends Timer {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimationParams} parameters\n   * @param {Timeline} [parent]\n   * @param {Number} [parentPosition]\n   * @param {Boolean} [fastSet=false]\n   * @param {Number} [index=0]\n   * @param {Number} [length=0]\n   */\n  constructor(\n    targets,\n    parameters,\n    parent,\n    parentPosition,\n    fastSet = false,\n    index = 0,\n    length = 0\n  ) {\n\n    super(/** @type {TimerParams&AnimationParams} */(parameters), parent, parentPosition);\n\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n\n    // If the parameters object contains a \"keyframes\" property, convert all the keyframes values to regular properties\n\n    const kfParams = /** @type {AnimationParams} */(parameters).keyframes;\n    const params = /** @type {AnimationParams} */(kfParams ? mergeObjects(generateKeyframes(/** @type {DurationKeyframes} */(kfParams), parameters), parameters) : parameters);\n\n    const {\n      delay,\n      duration,\n      ease,\n      playbackEase,\n      modifier,\n      composition,\n      onRender,\n    } = params;\n\n    const animDefaults = parent ? parent.defaults : globals.defaults;\n    const animaPlaybackEase = setValue(playbackEase, animDefaults.playbackEase);\n    const animEase = animaPlaybackEase ? parseEasings(animaPlaybackEase) : null;\n    const hasSpring = !isUnd(ease) && !isUnd(/** @type {Spring} */(ease).ease);\n    const tEasing = hasSpring ? /** @type {Spring} */(ease).ease : setValue(ease, animEase ? 'linear' : animDefaults.ease);\n    const tDuration = hasSpring ? /** @type {Spring} */(ease).duration : setValue(duration, animDefaults.duration);\n    const tDelay = setValue(delay, animDefaults.delay);\n    const tModifier = modifier || animDefaults.modifier;\n    // If no composition is defined and the targets length is high (>= 1000) set the composition to 'none' (0) for faster tween creation\n    const tComposition = isUnd(composition) && targetsLength >= K ? compositionTypes.none : !isUnd(composition) ? composition : animDefaults.composition;\n    // TODO: Do not create an empty object until we know the animation will generate inline styles\n    const animInlineStyles = {};\n    // const absoluteOffsetTime = this._offset;\n    const absoluteOffsetTime = this._offset + (parent ? parent._offset : 0);\n\n    let iterationDuration = NaN;\n    let iterationDelay = NaN;\n    let animationAnimationLength = 0;\n    let shouldTriggerRender = 0;\n\n    for (let targetIndex = 0; targetIndex < targetsLength; targetIndex++) {\n\n      const target = parsedTargets[targetIndex];\n      const ti = index || targetIndex;\n      const tl = length || targetsLength;\n\n      let lastTransformGroupIndex = NaN;\n      let lastTransformGroupLength = NaN;\n\n      for (let p in params) {\n\n        if (isKey(p)) {\n\n          const tweenType = getTweenType(target, p);\n\n          const propName = sanitizePropertyName(p, target, tweenType);\n\n          let propValue = params[p];\n\n          const isPropValueArray = isArr(propValue);\n\n          if (fastSet && !isPropValueArray) {\n            fastSetValuesArray[0] = propValue;\n            fastSetValuesArray[1] = propValue;\n            propValue = fastSetValuesArray;\n          }\n\n          // TODO: Allow nested keyframes inside ObjectValue value (prop: { to: [.5, 1, .75, 2, 3] })\n          // Normalize property values to valid keyframe syntax:\n          // [x, y] to [{to: [x, y]}] or {to: x} to [{to: x}] or keep keys syntax [{}, {}, {}...]\n          // const keyframes = isArr(propValue) ? propValue.length === 2 && !isObj(propValue[0]) ? [{ to: propValue }] : propValue : [propValue];\n          if (isPropValueArray) {\n            const arrayLength = /** @type {Array} */(propValue).length;\n            const isNotObjectValue = !isObj(propValue[0]);\n            // Convert [x, y] to [{to: [x, y]}]\n            if (arrayLength === 2 && isNotObjectValue) {\n              keyObjectTarget.to = /** @type {TweenParamValue} */(/** @type {unknown} */(propValue));\n              keyframesTargetArray[0] = keyObjectTarget;\n              keyframes = keyframesTargetArray;\n            // Convert [x, y, z] to [[x, y], z]\n            } else if (arrayLength > 2 && isNotObjectValue) {\n              keyframes = [];\n              /** @type {Array.<Number>} */(propValue).forEach((v, i) => {\n                if (!i) {\n                  fastSetValuesArray[0] = v;\n                } else if (i === 1) {\n                  fastSetValuesArray[1] = v;\n                  keyframes.push(fastSetValuesArray);\n                } else {\n                  keyframes.push(v);\n                }\n              });\n            } else {\n              keyframes = /** @type {Array.<TweenKeyValue>} */(propValue);\n            }\n          } else {\n            keyframesTargetArray[0] = propValue;\n            keyframes = keyframesTargetArray;\n          }\n\n          let siblings = null;\n          let prevTween = null;\n          let firstTweenChangeStartTime = NaN;\n          let lastTweenChangeEndTime = 0;\n          let tweenIndex = 0;\n\n          for (let l = keyframes.length; tweenIndex < l; tweenIndex++) {\n\n            const keyframe = keyframes[tweenIndex];\n\n            if (isObj(keyframe)) {\n              key = keyframe;\n            } else {\n              keyObjectTarget.to = /** @type {TweenParamValue} */(keyframe);\n              key = keyObjectTarget;\n            }\n\n            toFunctionStore.func = null;\n\n            const computedToValue = getFunctionValue(key.to, target, ti, tl, toFunctionStore);\n\n            let tweenToValue;\n            // Allows function based values to return an object syntax value ({to: v})\n            if (isObj(computedToValue) && !isUnd(computedToValue.to)) {\n              key = computedToValue;\n              tweenToValue = computedToValue.to;\n            } else {\n              tweenToValue = computedToValue;\n            }\n            const tweenFromValue = getFunctionValue(key.from, target, ti, tl);\n            const keyEasing = key.ease;\n            const hasSpring = !isUnd(keyEasing) && !isUnd(/** @type {Spring} */(keyEasing).ease);\n            // Easing are treated differently and don't accept function based value to prevent having to pass a function wrapper that returns an other function all the time\n            const tweenEasing = hasSpring ? /** @type {Spring} */(keyEasing).ease : keyEasing || tEasing;\n            // Calculate default individual keyframe duration by dividing the tl of keyframes\n            const tweenDuration = hasSpring ? /** @type {Spring} */(keyEasing).duration : getFunctionValue(setValue(key.duration, (l > 1 ? getFunctionValue(tDuration, target, ti, tl) / l : tDuration)), target, ti, tl);\n            // Default delay value should only be applied to the first tween\n            const tweenDelay = getFunctionValue(setValue(key.delay, (!tweenIndex ? tDelay : 0)), target, ti, tl);\n            const computedComposition = getFunctionValue(setValue(key.composition, tComposition), target, ti, tl);\n            const tweenComposition = isNum(computedComposition) ? computedComposition : compositionTypes[computedComposition];\n            // Modifiers are treated differently and don't accept function based value to prevent having to pass a function wrapper\n            const tweenModifier = key.modifier || tModifier;\n            const hasFromvalue = !isUnd(tweenFromValue);\n            const hasToValue = !isUnd(tweenToValue);\n            const isFromToArray = isArr(tweenToValue);\n            const isFromToValue = isFromToArray || (hasFromvalue && hasToValue);\n            const tweenStartTime = prevTween ? lastTweenChangeEndTime + tweenDelay : tweenDelay;\n            const absoluteStartTime = absoluteOffsetTime + tweenStartTime;\n\n            // Force a onRender callback if the animation contains at least one from value and autoplay is set to false\n            if (!shouldTriggerRender && (hasFromvalue || isFromToArray)) shouldTriggerRender = 1;\n\n            let prevSibling = prevTween;\n\n            if (tweenComposition !== compositionTypes.none) {\n              if (!siblings) siblings = getTweenSiblings(target, propName);\n              let nextSibling = siblings._head;\n              // Iterate trough all the next siblings until we find a sibling with an equal or inferior start time\n              while (nextSibling && !nextSibling._isOverridden && nextSibling._absoluteStartTime <= absoluteStartTime) {\n                prevSibling = nextSibling;\n                nextSibling = nextSibling._nextRep;\n                // Overrides all the next siblings if the next sibling starts at the same time of after as the new tween start time\n                if (nextSibling && nextSibling._absoluteStartTime >= absoluteStartTime) {\n                  while (nextSibling) {\n                    overrideTween(nextSibling);\n                    // This will ends both the current while loop and the upper one once all the next sibllings have been overriden\n                    nextSibling = nextSibling._nextRep;\n                  }\n                }\n              }\n            }\n\n            // Decompose values\n            if (isFromToValue) {\n              decomposeRawValue(isFromToArray ? getFunctionValue(tweenToValue[0], target, ti, tl) : tweenFromValue, fromTargetObject);\n              decomposeRawValue(isFromToArray ? getFunctionValue(tweenToValue[1], target, ti, tl, toFunctionStore) : tweenToValue, toTargetObject);\n              if (fromTargetObject.t === valueTypes.NUMBER) {\n                if (prevSibling) {\n                  if (prevSibling._valueType === valueTypes.UNIT) {\n                    fromTargetObject.t = valueTypes.UNIT;\n                    fromTargetObject.u = prevSibling._unit;\n                  }\n                } else {\n                  decomposeRawValue(\n                    getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles),\n                    decomposedOriginalValue\n                  );\n                  if (decomposedOriginalValue.t === valueTypes.UNIT) {\n                    fromTargetObject.t = valueTypes.UNIT;\n                    fromTargetObject.u = decomposedOriginalValue.u;\n                  }\n                }\n              }\n            } else {\n              if (hasToValue) {\n                decomposeRawValue(tweenToValue, toTargetObject);\n              } else {\n                if (prevTween) {\n                  decomposeTweenValue(prevTween, toTargetObject);\n                } else {\n                  // No need to get and parse the original value if the tween is part of a timeline and has a previous sibling part of the same timeline\n                  decomposeRawValue(parent && prevSibling && prevSibling.parent.parent === parent ? prevSibling._value :\n                  getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), toTargetObject);\n                }\n              }\n              if (hasFromvalue) {\n                decomposeRawValue(tweenFromValue, fromTargetObject);\n              } else {\n                if (prevTween) {\n                  decomposeTweenValue(prevTween, fromTargetObject);\n                } else {\n                  decomposeRawValue(parent && prevSibling && prevSibling.parent.parent === parent ? prevSibling._value :\n                  // No need to get and parse the original value if the tween is part of a timeline and has a previous sibling part of the same timeline\n                  getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles), fromTargetObject);\n                }\n              }\n            }\n\n            // Apply operators\n            if (fromTargetObject.o) {\n              fromTargetObject.n = getRelativeValue(\n                !prevSibling ? decomposeRawValue(\n                  getOriginalAnimatableValue(target, propName, tweenType, animInlineStyles),\n                  decomposedOriginalValue\n                ).n : prevSibling._toNumber,\n                fromTargetObject.n,\n                fromTargetObject.o\n              );\n            }\n\n            if (toTargetObject.o) {\n              toTargetObject.n = getRelativeValue(fromTargetObject.n, toTargetObject.n, toTargetObject.o);\n            }\n\n            // Values omogenisation in cases of type difference between \"from\" and \"to\"\n            if (fromTargetObject.t !== toTargetObject.t) {\n              if (fromTargetObject.t === valueTypes.COMPLEX || toTargetObject.t === valueTypes.COMPLEX) {\n                const complexValue = fromTargetObject.t === valueTypes.COMPLEX ? fromTargetObject : toTargetObject;\n                const notComplexValue = fromTargetObject.t === valueTypes.COMPLEX ? toTargetObject : fromTargetObject;\n                notComplexValue.t = valueTypes.COMPLEX;\n                notComplexValue.s = cloneArray(complexValue.s);\n                notComplexValue.d = complexValue.d.map(() => notComplexValue.n);\n              } else if (fromTargetObject.t === valueTypes.UNIT || toTargetObject.t === valueTypes.UNIT) {\n                const unitValue = fromTargetObject.t === valueTypes.UNIT ? fromTargetObject : toTargetObject;\n                const notUnitValue = fromTargetObject.t === valueTypes.UNIT ? toTargetObject : fromTargetObject;\n                notUnitValue.t = valueTypes.UNIT;\n                notUnitValue.u = unitValue.u;\n              } else if (fromTargetObject.t === valueTypes.COLOR || toTargetObject.t === valueTypes.COLOR) {\n                const colorValue = fromTargetObject.t === valueTypes.COLOR ? fromTargetObject : toTargetObject;\n                const notColorValue = fromTargetObject.t === valueTypes.COLOR ? toTargetObject : fromTargetObject;\n                notColorValue.t = valueTypes.COLOR;\n                notColorValue.s = colorValue.s;\n                notColorValue.d = [0, 0, 0, 1];\n              }\n            }\n\n            // Unit conversion\n            if (fromTargetObject.u !== toTargetObject.u) {\n              let valueToConvert = toTargetObject.u ? fromTargetObject : toTargetObject;\n              valueToConvert = convertValueUnit(/** @type {DOMTarget} */(target), valueToConvert, toTargetObject.u ? toTargetObject.u : fromTargetObject.u, false);\n              // TODO:\n              // convertValueUnit(target, to.u ? from : to, to.u ? to.u : from.u);\n            }\n\n            // Fill in non existing complex values\n            if (toTargetObject.d && fromTargetObject.d && (toTargetObject.d.length !== fromTargetObject.d.length)) {\n              const longestValue = fromTargetObject.d.length > toTargetObject.d.length ? fromTargetObject : toTargetObject;\n              const shortestValue = longestValue === fromTargetObject ? toTargetObject : fromTargetObject;\n              // TODO: Check if n should be used instead of 0 for default complex values\n              shortestValue.d = longestValue.d.map((_, i) => isUnd(shortestValue.d[i]) ? 0 : shortestValue.d[i]);\n              shortestValue.s = cloneArray(longestValue.s);\n            }\n\n            // Tween factory\n\n            // Rounding is necessary here to minimize floating point errors\n            const tweenUpdateDuration = round(+tweenDuration || minValue, 12);\n\n            /** @type {Tween} */\n            const tween = {\n              parent: this,\n              id: tweenId++,\n              property: propName,\n              target: target,\n              _value: null,\n              _func: toFunctionStore.func,\n              _ease: parseEasings(tweenEasing),\n              _fromNumbers: cloneArray(fromTargetObject.d),\n              _toNumbers: cloneArray(toTargetObject.d),\n              _strings: cloneArray(toTargetObject.s),\n              _fromNumber: fromTargetObject.n,\n              _toNumber: toTargetObject.n,\n              _numbers: cloneArray(fromTargetObject.d), // For additive tween and animatables\n              _number: fromTargetObject.n, // For additive tween and animatables\n              _unit: toTargetObject.u,\n              _modifier: tweenModifier,\n              _currentTime: 0,\n              _startTime: tweenStartTime,\n              _delay: +tweenDelay,\n              _updateDuration: tweenUpdateDuration,\n              _changeDuration: tweenUpdateDuration,\n              _absoluteStartTime: absoluteStartTime,\n              // NOTE: Investigate bit packing to stores ENUM / BOOL\n              _tweenType: tweenType,\n              _valueType: toTargetObject.t,\n              _composition: tweenComposition,\n              _isOverlapped: 0,\n              _isOverridden: 0,\n              _renderTransforms: 0,\n              _prevRep: null, // For replaced tween\n              _nextRep: null, // For replaced tween\n              _prevAdd: null, // For additive tween\n              _nextAdd: null, // For additive tween\n              _prev: null,\n              _next: null,\n            };\n\n            if (tweenComposition !== compositionTypes.none) {\n              composeTween(tween, siblings);\n            }\n\n            if (isNaN(firstTweenChangeStartTime)) {\n              firstTweenChangeStartTime = tween._startTime;\n            }\n            // Rounding is necessary here to minimize floating point errors\n            lastTweenChangeEndTime = round(tweenStartTime + tweenUpdateDuration, 12);\n            prevTween = tween;\n            animationAnimationLength++;\n\n            addChild(this, tween);\n\n          }\n\n          // Update animation timings with the added tweens properties\n\n          if (isNaN(iterationDelay) || firstTweenChangeStartTime < iterationDelay) {\n            iterationDelay = firstTweenChangeStartTime;\n          }\n\n          if (isNaN(iterationDuration) || lastTweenChangeEndTime > iterationDuration) {\n            iterationDuration = lastTweenChangeEndTime;\n          }\n\n          // TODO: Find a way to inline tween._renderTransforms = 1 here\n          if (tweenType === tweenTypes.TRANSFORM) {\n            lastTransformGroupIndex = animationAnimationLength - tweenIndex;\n            lastTransformGroupLength = animationAnimationLength;\n          }\n\n        }\n\n      }\n\n      // Set _renderTransforms to last transform property to correctly render the transforms list\n      if (!isNaN(lastTransformGroupIndex)) {\n        let i = 0;\n        forEachChildren(this, (/** @type {Tween} */tween) => {\n          if (i >= lastTransformGroupIndex && i < lastTransformGroupLength) {\n            tween._renderTransforms = 1;\n            if (tween._composition === compositionTypes.blend) {\n              forEachChildren(additive.animation, (/** @type {Tween} */additiveTween) => {\n                if (additiveTween.id === tween.id) {\n                  additiveTween._renderTransforms = 1;\n                }\n              });\n            }\n          }\n          i++;\n        });\n      }\n\n    }\n\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n\n    if (iterationDelay) {\n      forEachChildren(this, (/** @type {Tween} */tween) => {\n        // If (startTime - delay) equals 0, this means the tween is at the begining of the animation so we need to trim the delay too\n        if (!(tween._startTime - tween._delay)) {\n          tween._delay -= iterationDelay;\n        }\n        tween._startTime -= iterationDelay;\n      });\n      iterationDuration -= iterationDelay;\n    } else {\n      iterationDelay = 0;\n    }\n\n    // Prevents iterationDuration to be NaN if no valid animatable props have been provided\n    // Prevents _iterationCount to be NaN if no valid animatable props have been provided\n    if (!iterationDuration) {\n      iterationDuration = minValue;\n      this.iterationCount = 0;\n    }\n    /** @type {TargetsArray} */\n    this.targets = parsedTargets;\n    /** @type {Number} */\n    this.duration = iterationDuration === minValue ? minValue : clampInfinity(((iterationDuration + this._loopDelay) * this.iterationCount) - this._loopDelay) || minValue;\n    /** @type {Callback<this>} */\n    this.onRender = onRender || animDefaults.onRender;\n    /** @type {EasingFunction} */\n    this._ease = animEase;\n    /** @type {Number} */\n    this._delay = iterationDelay;\n    // NOTE: I'm keeping delay values separated from offsets in timelines because delays can override previous tweens and it could be confusing to debug a timeline with overridden tweens and no associated visible delays.\n    // this._delay = parent ? 0 : iterationDelay;\n    // this._offset += parent ? iterationDelay : 0;\n    /** @type {Number} */\n    this.iterationDuration = iterationDuration;\n    /** @type {{}} */\n    this._inlineStyles = animInlineStyles;\n\n    if (!this._autoplay && shouldTriggerRender) this.onRender(this);\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    if (currentDuration === normalizeTime(newDuration)) return this;\n    const timeScale = newDuration / currentDuration;\n    // NOTE: Find a better way to handle the stretch of an animation after stretch = 0\n    forEachChildren(this, (/** @type {Tween} */tween) => {\n      // Rounding is necessary here to minimize floating point errors\n      tween._updateDuration = normalizeTime(tween._updateDuration * timeScale);\n      tween._changeDuration = normalizeTime(tween._changeDuration * timeScale);\n      tween._currentTime *= timeScale;\n      tween._startTime *= timeScale;\n      tween._absoluteStartTime *= timeScale;\n    });\n    return super.stretch(newDuration);\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    forEachChildren(this, (/** @type {Tween} */tween) => {\n      const ogValue = getOriginalAnimatableValue(tween.target, tween.property, tween._tweenType);\n      decomposeRawValue(ogValue, decomposedOriginalValue);\n      tween._fromNumbers = cloneArray(decomposedOriginalValue.d);\n      tween._fromNumber = decomposedOriginalValue.n;\n      if (tween._func) {\n        decomposeRawValue(tween._func(), toTargetObject);\n        tween._toNumbers = cloneArray(toTargetObject.d);\n        tween._strings = cloneArray(toTargetObject.s);\n        tween._toNumber = toTargetObject.n;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Cancel the animation and revert all the values affected by this animation to their original state\n   * @return {this}\n   */\n  revert() {\n    super.revert();\n    return cleanInlineStyles(this);\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback) {\n    return super.then(callback);\n  }\n\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimationParams} parameters\n * @return {JSAnimation}\n */\nconst animate = (targets, parameters) => new JSAnimation(targets, parameters, null, 0, false).init();\n\n\n\n\n/**\n * Converts an easing function into a valid CSS linear() timing function string\n * @param {EasingFunction} fn\n * @param {number} [samples=100]\n * @returns {string} CSS linear() timing function\n */\nconst easingToLinear = (fn, samples = 100) => {\n  const points = [];\n  for (let i = 0; i <= samples; i++) points.push(fn(i / samples));\n  return `linear(${points.join(', ')})`;\n};\n\nconst WAAPIEasesLookups = {\n  in: 'ease-in',\n  out: 'ease-out',\n  inOut: 'ease-in-out',\n};\n\nconst WAAPIeases = /*#__PURE__*/(() => {\n  const list = {};\n  for (let type in easeTypes) list[type] = a => easeTypes[type](easeInPower(a));\n  return /** @type {Record<String, EasingFunction>} */(list);\n})();\n\n/**\n * @param  {EasingParam} ease\n * @return {String}\n */\nconst parseWAAPIEasing = (ease) => {\n  let parsedEase = WAAPIEasesLookups[ease];\n  if (parsedEase) return parsedEase;\n  parsedEase = 'linear';\n  if (isStr(ease)) {\n    if (\n      stringStartsWith(ease, 'linear') ||\n      stringStartsWith(ease, 'cubic-') ||\n      stringStartsWith(ease, 'steps') ||\n      stringStartsWith(ease, 'ease')\n    ) {\n      parsedEase = ease;\n    } else if (stringStartsWith(ease, 'cubicB')) {\n      parsedEase = toLowerCase(ease);\n    } else {\n      const parsed = parseEaseString(ease, WAAPIeases, WAAPIEasesLookups);\n      if (isFnc(parsed)) parsedEase = parsed === none ? 'linear' : easingToLinear(parsed);\n    }\n    WAAPIEasesLookups[ease] = parsedEase;\n  } else if (isFnc(ease)) {\n    const easing = easingToLinear(ease);\n    if (easing) parsedEase = easing;\n  } else if (/** @type {Spring} */(ease).ease) {\n    parsedEase = easingToLinear(/** @type {Spring} */(ease).ease);\n  }\n  return parsedEase;\n};\n\n/**\n * @typedef {String|Number|Array<String>|Array<Number>} WAAPITweenValue\n */\n\n/**\n * @callback WAAPIFunctionvalue\n * @param {DOMTarget} target - The animated target\n * @param {Number} index - The target index\n * @param {Number} length - The total number of animated targets\n * @return {WAAPITweenValue}\n */\n\n/**\n * @typedef {WAAPITweenValue|WAAPIFunctionvalue|Array<String|Number|WAAPIFunctionvalue>} WAAPIKeyframeValue\n */\n\n/**\n * @typedef {(animation: WAAPIAnimation) => void} WAAPICallback\n */\n\n/**\n * @typedef {Object} WAAPITweenOptions\n * @property {WAAPIKeyframeValue} [to]\n * @property {WAAPIKeyframeValue} [from]\n * @property {Number|WAAPIFunctionvalue} [duration]\n * @property {Number|WAAPIFunctionvalue} [delay]\n * @property {EasingParam} [ease]\n * @property {CompositeOperation} [composition]\n */\n\n/**\n * @typedef {Object} WAAPIAnimationOptions\n * @property {Number|Boolean} [loop]\n * @property {Boolean} [Reversed]\n * @property {Boolean} [Alternate]\n * @property {Boolean|ScrollObserver} [autoplay]\n * @property {Number} [playbackRate]\n * @property {Number|WAAPIFunctionvalue} [duration]\n * @property {Number|WAAPIFunctionvalue} [delay]\n * @property {EasingParam} [ease]\n * @property {CompositeOperation} [composition]\n * @property {WAAPICallback} [onComplete]\n */\n\n/**\n * @typedef {Record<String, WAAPIKeyframeValue | WAAPIAnimationOptions | Boolean | ScrollObserver | WAAPICallback | EasingParam | WAAPITweenOptions> & WAAPIAnimationOptions} WAAPIAnimationParams\n */\n\nconst transformsShorthands = ['x', 'y', 'z'];\nconst commonDefaultPXProperties = [\n  'perspective',\n  'width',\n  'height',\n  'margin',\n  'padding',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'borderWidth',\n  'fontSize',\n  'borderRadius',\n  ...transformsShorthands\n];\n\nconst validIndividualTransforms = [...transformsShorthands, ...validTransforms.filter(t => ['X', 'Y', 'Z'].some(axis => t.endsWith(axis)))];\n\n// Setting it to true in case CSS.registerProperty is not supported will automatically skip the registration and fallback to no animation\nlet transformsPropertiesRegistered = isBrowser && (isUnd(CSS) || !Object.hasOwnProperty.call(CSS, 'registerProperty'));\n\nconst registerTransformsProperties = () => {\n  if (transformsPropertiesRegistered) return;\n  validTransforms.forEach(t => {\n    const isSkew = stringStartsWith(t, 'skew');\n    const isScale = stringStartsWith(t, 'scale');\n    const isRotate = stringStartsWith(t, 'rotate');\n    const isTranslate = stringStartsWith(t, 'translate');\n    const isAngle = isRotate || isSkew;\n    const syntax = isAngle ? '<angle>' : isScale ? \"<number>\" : isTranslate ? \"<length-percentage>\" : \"*\";\n    try {\n      CSS.registerProperty({\n        name: '--' + t,\n        syntax,\n        inherits: false,\n        initialValue: isTranslate ? '0px' : isAngle ? '0deg' : isScale ? '1' : '0',\n      });\n    } catch {}  });\n  transformsPropertiesRegistered = true;\n};\n\nconst WAAPIAnimationsLookups = {\n  _head: null,\n  _tail: null,\n};\n\n/**\n * @param {DOMTarget} $el\n * @param {String} [property]\n * @param {WAAPIAnimation} [parent]\n */\nconst removeWAAPIAnimation = ($el, property, parent) => {\n  let nextLookup = WAAPIAnimationsLookups._head;\n  while (nextLookup) {\n    const next = nextLookup._next;\n    const matchTarget = nextLookup.$el === $el;\n    const matchProperty = !property || nextLookup.property === property;\n    const matchParent = !parent || nextLookup.parent === parent;\n    if (matchTarget && matchProperty && matchParent) {\n      const anim = nextLookup.animation;\n      try { anim.commitStyles(); } catch {}      anim.cancel();\n      removeChild(WAAPIAnimationsLookups, nextLookup);\n      const lookupParent = nextLookup.parent;\n      if (lookupParent) {\n        lookupParent._completed++;\n        if (lookupParent.animations.length === lookupParent._completed) {\n          lookupParent.completed = true;\n          if (!lookupParent.muteCallbacks) {\n            lookupParent.paused = true;\n            lookupParent.onComplete(lookupParent);\n            lookupParent._resolve(lookupParent);\n          }\n        }\n      }\n    }\n    nextLookup = next;\n  }\n};\n\n/**\n * @param {WAAPIAnimation} parent\n * @param {DOMTarget} $el\n * @param {String} property\n * @param {PropertyIndexedKeyframes} keyframes\n * @param {KeyframeAnimationOptions} params\n * @retun {Animation}\n */\nconst addWAAPIAnimation = (parent, $el, property, keyframes, params) => {\n  const animation = $el.animate(keyframes, params);\n  const animTotalDuration = params.delay + (+params.duration * params.iterations);\n  animation.playbackRate = parent._speed;\n  if (parent.paused) animation.pause();\n  if (parent.duration < animTotalDuration) {\n    parent.duration = animTotalDuration;\n    parent.controlAnimation = animation;\n  }\n  parent.animations.push(animation);\n  removeWAAPIAnimation($el, property);\n  addChild(WAAPIAnimationsLookups, { parent, animation, $el, property, _next: null, _prev: null });\n  const handleRemove = () => { removeWAAPIAnimation($el, property, parent); };\n  animation.onremove = handleRemove;\n  animation.onfinish = handleRemove;\n  return animation;\n};\n\n/**\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} value\n * @param  {DOMTarget} $el\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {String}\n */\nconst normalizeTweenValue = (propName, value, $el, i, targetsLength) => {\n  let v = getFunctionValue(/** @type {any} */(value), $el, i, targetsLength);\n  if (!isNum(v)) return v;\n  if (commonDefaultPXProperties.includes(propName) || stringStartsWith(propName, 'translate')) return `${v}px`;\n  if (stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew')) return `${v}deg`;\n  return `${v}`;\n};\n\n/**\n * @param  {DOMTarget} $el\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} from\n * @param  {WAAPIKeyframeValue} to\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {WAAPITweenValue}\n */\nconst parseIndividualTweenValue = ($el, propName, from, to, i, targetsLength) => {\n  /** @type {WAAPITweenValue} */\n  let tweenValue = '0';\n  const computedTo = !isUnd(to) ? normalizeTweenValue(propName, to, $el, i, targetsLength) : getComputedStyle($el)[propName];\n  if (!isUnd(from)) {\n    const computedFrom = normalizeTweenValue(propName, from, $el, i, targetsLength);\n    tweenValue = [computedFrom, computedTo];\n  } else {\n    tweenValue = isArr(to) ? to.map((/** @type {any} */v) => normalizeTweenValue(propName, v, $el, i, targetsLength)) : computedTo;\n  }\n  return tweenValue;\n};\n\nclass WAAPIAnimation {\n/**\n * @param {DOMTargetsParam} targets\n * @param {WAAPIAnimationParams} params\n */\n  constructor(targets, params) {\n\n    if (globals.scope) globals.scope.revertibles.push(this);\n\n    registerTransformsProperties();\n\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n\n    const ease = setValue(params.ease, parseWAAPIEasing(globals.defaults.ease));\n    const spring = /** @type {Spring} */(ease).ease && ease;\n    const autoplay = setValue(params.autoplay, globals.defaults.autoplay);\n    const scroll = autoplay && /** @type {ScrollObserver} */(autoplay).link ? autoplay : false;\n    const alternate = params.alternate && /** @type {Boolean} */(params.alternate) === true;\n    const reversed = params.reversed && /** @type {Boolean} */(params.reversed) === true;\n    const loop = setValue(params.loop, globals.defaults.loop);\n    const iterations = /** @type {Number} */((loop === true || loop === Infinity) ? Infinity : isNum(loop) ? loop + 1 : 1);\n    /** @type {PlaybackDirection} */\n    const direction = alternate ? reversed ? 'alternate-reverse' : 'alternate' : reversed ? 'reverse' : 'normal';\n    /** @type {FillMode} */\n    const fill = 'forwards';\n    /** @type {String} */\n    const easing = parseWAAPIEasing(ease);\n    const timeScale = (globals.timeScale === 1 ? 1 : K);\n\n    /** @type {DOMTargetsArray}] */\n    this.targets = parsedTargets;\n    /** @type {Array<globalThis.Animation>}] */\n    this.animations = [];\n    /** @type {globalThis.Animation}] */\n    this.controlAnimation = null;\n    /** @type {Callback<this>} */\n    this.onComplete = params.onComplete || noop;\n    /** @type {Number} */\n    this.duration = 0;\n    /** @type {Boolean} */\n    this.muteCallbacks = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.paused = !autoplay || scroll !== false;\n    /** @type {Boolean} */\n    this.reversed = reversed;\n    /** @type {Boolean|ScrollObserver} */\n    this.autoplay = autoplay;\n    /** @type {Number} */\n    this._speed = setValue(params.playbackRate, globals.defaults.playbackRate);\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Number} */\n    this._completed = 0;\n    /** @type {Array<Object>}] */\n    this._inlineStyles = parsedTargets.map($el => $el.getAttribute('style'));\n\n    parsedTargets.forEach(($el, i) => {\n\n      const cachedTransforms = $el[transformsSymbol];\n\n      const hasIndividualTransforms = validIndividualTransforms.some(t => params.hasOwnProperty(t));\n\n      /** @type {Number} */\n      const duration = (spring ? /** @type {Spring} */(spring).duration : getFunctionValue(setValue(params.duration, globals.defaults.duration), $el, i, targetsLength)) * timeScale;\n      /** @type {Number} */\n      const delay = getFunctionValue(setValue(params.delay, globals.defaults.delay), $el, i, targetsLength) * timeScale;\n      /** @type {CompositeOperation} */\n      const composite = /** @type {CompositeOperation} */(setValue(params.composition, 'replace'));\n\n      for (let name in params) {\n        if (!isKey(name)) continue;\n        /** @type {PropertyIndexedKeyframes} */\n        const keyframes = {};\n        /** @type {KeyframeAnimationOptions} */\n        const tweenParams = { iterations, direction, fill, easing, duration, delay, composite };\n        const propertyValue = params[name];\n        const individualTransformProperty = hasIndividualTransforms ? validTransforms.includes(name) ? name : shortTransforms.get(name) : false;\n        let parsedPropertyValue;\n        if (isObj(propertyValue)) {\n          const tweenOptions = /** @type {WAAPITweenOptions} */(propertyValue);\n          const tweenOptionsEase = setValue(tweenOptions.ease, ease);\n          const tweenOptionsSpring = /** @type {Spring} */(tweenOptionsEase).ease && tweenOptionsEase;\n          const to = /** @type {WAAPITweenOptions} */(tweenOptions).to;\n          const from = /** @type {WAAPITweenOptions} */(tweenOptions).from;\n          /** @type {Number} */\n          tweenParams.duration = (tweenOptionsSpring ? /** @type {Spring} */(tweenOptionsSpring).duration : getFunctionValue(setValue(tweenOptions.duration, duration), $el, i, targetsLength)) * timeScale;\n          /** @type {Number} */\n          tweenParams.delay = getFunctionValue(setValue(tweenOptions.delay, delay), $el, i, targetsLength) * timeScale;\n          /** @type {CompositeOperation} */\n          tweenParams.composite = /** @type {CompositeOperation} */(setValue(tweenOptions.composition, composite));\n          /** @type {String} */\n          tweenParams.easing = parseWAAPIEasing(tweenOptionsEase);\n          parsedPropertyValue = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n          if (!isUnd(from)) {\n            if (!individualTransformProperty) {\n              $el.style[name] = keyframes[name][0];\n            } else {\n              const key = `--${individualTransformProperty}`;\n              $el.style.setProperty(key, keyframes[key][0]);\n            }\n          }\n        } else {\n          parsedPropertyValue = isArr(propertyValue) ?\n                                propertyValue.map((/** @type {any} */v) => normalizeTweenValue(name, v, $el, i, targetsLength)) :\n                                normalizeTweenValue(name, /** @type {any} */(propertyValue), $el, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parsedPropertyValue;\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n        }\n      }\n      if (hasIndividualTransforms) {\n        let transforms = emptyString;\n        for (let t in cachedTransforms) {\n          transforms += `${transformsFragmentStrings[t]}var(--${t})) `;\n        }\n        $el.style.transform = transforms;\n      }\n    });\n\n    if (scroll) {\n      /** @type {ScrollObserver} */(this.autoplay).link(this);\n    }\n  }\n\n  /**\n   * @callback forEachCallback\n   * @param {globalThis.Animation} animation\n   */\n\n  /**\n   * @param  {forEachCallback|String} callback\n   * @return {this}\n   */\n  forEach(callback) {\n    const cb = isStr(callback) ? a => a[callback]() : callback;\n    this.animations.forEach(cb);\n    return this;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  /** @param {Number} speed */\n  set speed(speed) {\n    this._speed = +speed;\n    this.forEach(anim => anim.playbackRate = speed);\n  }\n\n  get currentTime() {\n    const controlAnimation = this.controlAnimation;\n    const timeScale = globals.timeScale;\n    return this.completed ? this.duration : controlAnimation ? +controlAnimation.currentTime * (timeScale === 1 ? 1 : timeScale) : 0;\n  }\n\n  /** @param {Number} time */\n  set currentTime(time) {\n    const t = time * (globals.timeScale === 1 ? 1 : K);\n    this.forEach(anim => {\n      // Make sure the animation playState is not 'paused' in order to properly trigger an onfinish callback.\n      // The \"paused\" play state supersedes the \"finished\" play state; if the animation is both paused and finished, the \"paused\" state is the one that will be reported.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Animation/finish_event\n      if (t >= this.duration) anim.play();\n      anim.currentTime = t;\n    });\n  }\n\n  get progress() {\n    return this.currentTime / this.duration;\n  }\n\n  /** @param {Number} progress */\n  set progress(progress) {\n    this.forEach(anim => anim.currentTime = progress * this.duration || 0);\n  }\n\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // TODO: Store the current time, and seek back to the last position\n    return this.forEach('play');\n  }\n\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    return this.forEach('pause');\n  }\n\n  alternate() {\n    this.reversed = !this.reversed;\n    this.forEach('reverse');\n    if (this.paused) this.forEach('pause');\n    return this;\n  }\n\n  play() {\n    if (this.reversed) this.alternate();\n    return this.resume();\n  }\n\n  reverse() {\n    if (!this.reversed) this.alternate();\n    return this.resume();\n  }\n\n /**\n  * @param {Number} time\n  * @param {Boolean} muteCallbacks\n  */\n  seek(time, muteCallbacks = false) {\n    if (muteCallbacks) this.muteCallbacks = true;\n    if (time < this.duration) this.completed = false;\n    this.currentTime = time;\n    this.muteCallbacks = false;\n    if (this.paused) this.pause();\n    return this;\n  }\n\n  restart() {\n    this.completed = false;\n    return this.seek(0, true).resume();\n  }\n\n  commitStyles() {\n    return this.forEach('commitStyles');\n  }\n\n  complete() {\n    return this.seek(this.duration);\n  }\n\n  cancel() {\n    this.forEach('cancel');\n    return this.pause();\n  }\n\n  revert() {\n    this.cancel();\n    this.targets.forEach(($el, i) => $el.setAttribute('style', this._inlineStyles[i]) );\n    return this;\n  }\n\n  /**\n   * @param  {WAAPICallback} [callback]\n   * @return {Promise}\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      this.then = null;\n      callback(this);\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n}\n\nconst waapi = {\n/**\n * @param {DOMTargetsParam} targets\n * @param {WAAPIAnimationParams} params\n * @return {WAAPIAnimation}\n */\n  animate: (targets, params) => new WAAPIAnimation(targets, params),\n  convertEase: easingToLinear\n};\n\n\n\n\n/**\n * @param  {Callback<Timer>} [callback]\n * @return {Timer}\n */\nconst sync = (callback = noop) => {\n  return new Timer({ duration: 1 * globals.timeScale, onComplete: callback }, null, 0).resume();\n};\n\n/**\n * @overload\n * @param  {DOMTargetSelector} targetSelector\n * @param  {String}            propName\n * @return {String}\n *\n * @overload\n * @param  {JSTargetsParam} targetSelector\n * @param  {String}         propName\n * @return {Number|String}\n *\n * @overload\n * @param  {DOMTargetsParam} targetSelector\n * @param  {String}          propName\n * @param  {String}          unit\n * @return {String}\n *\n * @overload\n * @param  {TargetsParam} targetSelector\n * @param  {String}       propName\n * @param  {Boolean}      unit\n * @return {Number}\n *\n * @param  {TargetsParam}   targetSelector\n * @param  {String}         propName\n * @param  {String|Boolean} [unit]\n */\nfunction getTargetValue(targetSelector, propName, unit) {\n  const targets = registerTargets(targetSelector);\n  if (!targets.length) return;\n  const [ target ] = targets;\n  const tweenType = getTweenType(target, propName);\n  const normalizePropName = sanitizePropertyName(propName, target, tweenType);\n  let originalValue = getOriginalAnimatableValue(target, normalizePropName);\n  if (isUnd(unit)) {\n    return originalValue;\n  } else {\n    decomposeRawValue(originalValue, decomposedOriginalValue);\n    if (decomposedOriginalValue.t === valueTypes.NUMBER || decomposedOriginalValue.t === valueTypes.UNIT) {\n      if (unit === false) {\n        return decomposedOriginalValue.n;\n      } else {\n        const convertedValue = convertValueUnit(/** @type {DOMTarget} */(target), decomposedOriginalValue, /** @type {String} */(unit), false);\n        return `${round(convertedValue.n, globals.precision)}${convertedValue.u}`;\n      }\n    }\n  }\n}\n\n/**\n * @param  {TargetsParam}    targets\n * @param  {AnimationParams} parameters\n * @return {JSAnimation}\n */\nconst setTargetValues = (targets, parameters) => {\n  if (isUnd(parameters)) return;\n  parameters.duration = minValue;\n  // Do not overrides currently active tweens by default\n  parameters.composition = setValue(parameters.composition, compositionTypes.none);\n  // Skip init() and force rendering by playing the animation\n  return new JSAnimation(targets, parameters, null, 0, true).resume();\n};\n\n/**\n * @param  {TargetsArray} targetsArray\n * @param  {JSAnimation}    animation\n * @param  {String}       [propertyName]\n * @return {Boolean}\n */\nconst removeTargetsFromAnimation = (targetsArray, animation, propertyName) => {\n  let tweensMatchesTargets = false;\n  forEachChildren(animation, (/**@type {Tween} */tween) => {\n    const tweenTarget = tween.target;\n    if (targetsArray.includes(tweenTarget)) {\n      const tweenName = tween.property;\n      const tweenType = tween._tweenType;\n      const normalizePropName = sanitizePropertyName(propertyName, tweenTarget, tweenType);\n      if (!normalizePropName || normalizePropName && normalizePropName === tweenName) {\n        // Make sure to flag the previous CSS transform tween to renderTransform\n        if (tween.parent._tail === tween &&\n            tween._tweenType === tweenTypes.TRANSFORM &&\n            tween._prev &&\n            tween._prev._tweenType === tweenTypes.TRANSFORM\n        ) {\n          tween._prev._renderTransforms = 1;\n        }\n        // Removes the tween from the selected animation\n        removeChild(animation, tween);\n        // Detach the tween from its siblings to make sure blended tweens are correctlly removed\n        removeTweenSliblings(tween);\n        tweensMatchesTargets = true;\n      }\n    }\n  }, true);\n  return tweensMatchesTargets;\n};\n\n/**\n * @param  {TargetsParam} targets\n * @param  {Renderable|WAAPIAnimation} [renderable]\n * @param  {String}                    [propertyName]\n * @return {TargetsArray}\n */\nconst remove = (targets, renderable, propertyName) => {\n  const targetsArray = parseTargets(targets);\n  const parent = /** @type {Renderable|typeof engine} **/(renderable ? renderable : engine);\n  const waapiAnimation = renderable && /** @type {WAAPIAnimation} */(renderable).controlAnimation && /** @type {WAAPIAnimation} */(renderable);\n  for (let i = 0, l = targetsArray.length; i < l; i++) {\n    const $el = /** @type {DOMTarget}  */(targetsArray[i]);\n    removeWAAPIAnimation($el, propertyName, waapiAnimation);\n  }\n  let removeMatches;\n  if (parent._hasChildren) {\n    let iterationDuration = 0;\n    forEachChildren(parent, (/** @type {Renderable} */child) => {\n      if (!child._hasChildren) {\n        removeMatches = removeTargetsFromAnimation(targetsArray, /** @type {JSAnimation} */(child), propertyName);\n        // Remove the child from its parent if no tweens and no children left after the removal\n        if (removeMatches && !child._head) {\n          child.cancel();\n          removeChild(parent, child);\n        } else {\n          // Calculate the new iterationDuration value to handle onComplete with last child in render()\n          const childTLOffset = child._offset + child._delay;\n          const childDur = childTLOffset + child.duration;\n          if (childDur > iterationDuration) {\n            iterationDuration = childDur;\n          }\n        }\n      }\n      // Make sure to also remove engine's children targets\n      // NOTE: Avoid recursion?\n      if (child._head) {\n        remove(targets, child, propertyName);\n      } else {\n        child._hasChildren = false;\n      }\n    }, true);\n    // Update iterationDuration value to handle onComplete with last child in render()\n    if (!isUnd(/** @type {Renderable} */(parent).iterationDuration)) {\n      /** @type {Renderable} */(parent).iterationDuration = iterationDuration;\n    }\n  } else {\n    removeMatches = removeTargetsFromAnimation(\n      targetsArray,\n      /** @type {JSAnimation} */(parent),\n      propertyName\n    );\n  }\n\n  if (removeMatches && !parent._head) {\n    parent._hasChildren = false;\n    // Cancel the parent if there are no tweens and no children left after the removal\n    // We have to check if the .cancel() method exist to handle cases where the parent is the engine itself\n    if (/** @type {Renderable} */(parent).cancel) /** @type {Renderable} */(parent).cancel();\n  }\n\n  return targetsArray;\n};\n\n/**\n * @param  {Number} min\n * @param  {Number} max\n * @param  {Number} [decimalLength]\n * @return {Number}\n */\nconst random = (min, max, decimalLength) => { const m = 10 ** (decimalLength || 0); return floor((Math.random() * (max - min + (1 / m)) + min) * m) / m };\n\n/**\n * @param  {String|Array} items\n * @return {any}\n */\nconst randomPick = items => items[random(0, items.length - 1)];\n\n/**\n * Adapted from https://bost.ocks.org/mike/shuffle/\n * @param  {Array} items\n * @return {Array}\n */\nconst shuffle = items => {\n  let m = items.length, t, i;\n  while (m) { i = random(0, --m); t = items[m]; items[m] = items[i]; items[i] = t; }\n  return items;\n};\n\n/**\n * @param  {Number|String} v\n * @param  {Number} decimalLength\n * @return {String}\n */\nconst roundPad = (v, decimalLength) => (+v).toFixed(decimalLength);\n\n/**\n * @param  {Number} v\n * @param  {Number} totalLength\n * @param  {String} padString\n * @return {String}\n */\nconst padStart = (v, totalLength, padString) => `${v}`.padStart(totalLength, padString);\n\n/**\n * @param  {Number} v\n * @param  {Number} totalLength\n * @param  {String} padString\n * @return {String}\n */\nconst padEnd = (v, totalLength, padString) => `${v}`.padEnd(totalLength, padString);\n\n/**\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nconst wrap = (v, min, max) => (((v - min) % (max - min) + (max - min)) % (max - min)) + min;\n\n/**\n * @param  {Number} value\n * @param  {Number} inLow\n * @param  {Number} inHigh\n * @param  {Number} outLow\n * @param  {Number} outHigh\n * @return {Number}\n */\nconst mapRange = (value, inLow, inHigh, outLow, outHigh) => outLow + ((value - inLow) / (inHigh - inLow)) * (outHigh - outLow);\n\n/**\n * @param  {Number} degrees\n * @return {Number}\n */\nconst degToRad = degrees => degrees * PI / 180;\n\n/**\n * @param  {Number} radians\n * @return {Number}\n */\nconst radToDeg = radians => radians * 180 / PI;\n\n/**\n * https://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n * @param  {Number} start\n * @param  {Number} end\n * @param  {Number} amount\n * @param  {Renderable|Boolean} [renderable]\n * @return {Number}\n */\nconst lerp = (start, end, amount, renderable) => {\n  let dt = K / globals.defaults.frameRate;\n  if (renderable !== false) {\n    const ticker = /** @type Renderable */\n                   (renderable) ||\n                   (engine._hasChildren && engine);\n    if (ticker && ticker.deltaTime) {\n      dt = ticker.deltaTime;\n    }\n  }\n  const t = 1 - Math.exp(-amount * dt * .1);\n  return !amount ? start : amount === 1 ? end : (1 - t) * start + t * end;\n};\n\n// Chain-able utilities\n\n/**\n * @callback UtilityFunction\n * @param {...*} args\n * @return {Number|String}\n *\n * @param {UtilityFunction} fn\n * @param {Number} [last=0]\n * @return {function(...(Number|String)): function(Number|String): (Number|String)}\n */\nconst curry = (fn, last = 0) => (...args) => last ? v => fn(...args, v) : v => fn(v, ...args);\n\n/**\n * @param {Function} fn\n * @return {function(...(Number|String))}\n */\nconst chain = fn => {\n   return (...args) => {\n    const result = fn(...args);\n    return new Proxy(noop, {\n      apply: (_, __, [v]) => result(v),\n      get: (_, prop) => chain(/**@param {...Number|String} nextArgs */(...nextArgs) => {\n        const nextResult = utils[prop](...nextArgs);\n        return (/**@type {Number|String} */v) => nextResult(result(v));\n      })\n    });\n  }\n};\n\n/**\n * @param {UtilityFunction} fn\n * @param {Number} [right]\n * @return {function(...(Number|String)): UtilityFunction}\n */\nconst makeChainable = (fn, right = 0) => (...args) => (args.length < fn.length ? chain(curry(fn, right)) : fn)(...args);\n\n/**\n * @callback ChainedUtilsResult\n * @param {Number} value\n * @return {Number}\n *\n * @typedef {Object} ChainableUtils\n * @property {ChainedClamp} clamp\n * @property {ChainedRound} round\n * @property {ChainedSnap} snap\n * @property {ChainedWrap} wrap\n * @property {ChainedInterpolate} interpolate\n * @property {ChainedMapRange} mapRange\n * @property {ChainedRoundPad} roundPad\n * @property {ChainedPadStart} padStart\n * @property {ChainedPadEnd} padEnd\n * @property {ChainedDegToRad} degToRad\n * @property {ChainedRadToDeg} radToDeg\n *\n * @typedef {ChainableUtils & ChainedUtilsResult} ChainableUtil\n *\n * @callback ChainedClamp\n * @param {Number} min\n * @param {Number} max\n * @return {ChainableUtil}\n *\n * @callback ChainedRound\n * @param {Number} decimalLength\n * @return {ChainableUtil}\n *\n * @callback ChainedSnap\n * @param {Number} increment\n * @return {ChainableUtil}\n *\n * @callback ChainedWrap\n * @param {Number} min\n * @param {Number} max\n * @return {ChainableUtil}\n *\n * @callback ChainedInterpolate\n * @param {Number} start\n * @param {Number} end\n * @return {ChainableUtil}\n *\n * @callback ChainedMapRange\n * @param {Number} inLow\n * @param {Number} inHigh\n * @param {Number} outLow\n * @param {Number} outHigh\n * @return {ChainableUtil}\n *\n * @callback ChainedRoundPad\n * @param {Number} decimalLength\n * @return {ChainableUtil}\n *\n * @callback ChainedPadStart\n * @param {Number} totalLength\n * @param {String} padString\n * @return {ChainableUtil}\n *\n * @callback ChainedPadEnd\n * @param {Number} totalLength\n * @param {String} padString\n * @return {ChainableUtil}\n *\n * @callback ChainedDegToRad\n * @return {ChainableUtil}\n *\n * @callback ChainedRadToDeg\n * @return {ChainableUtil}\n */\n\nconst utils = {\n  $: registerTargets,\n  get: getTargetValue,\n  set: setTargetValues,\n  remove,\n  cleanInlineStyles,\n  random,\n  randomPick,\n  shuffle,\n  lerp,\n  sync,\n  clamp: /** @type {typeof clamp & ChainedClamp} */(makeChainable(clamp)),\n  round: /** @type {typeof round & ChainedRound} */(makeChainable(round)),\n  snap: /** @type {typeof snap & ChainedSnap} */(makeChainable(snap)),\n  wrap: /** @type {typeof wrap & ChainedWrap} */(makeChainable(wrap)),\n  interpolate: /** @type {typeof interpolate & ChainedInterpolate} */(makeChainable(interpolate, 1)),\n  mapRange: /** @type {typeof mapRange & ChainedMapRange} */(makeChainable(mapRange)),\n  roundPad: /** @type {typeof roundPad & ChainedRoundPad} */(makeChainable(roundPad)),\n  padStart: /** @type {typeof padStart & ChainedPadStart} */(makeChainable(padStart)),\n  padEnd: /** @type {typeof padEnd & ChainedPadEnd} */(makeChainable(padEnd)),\n  degToRad: /** @type {typeof degToRad & ChainedDegToRad} */(makeChainable(degToRad)),\n  radToDeg: /** @type {typeof radToDeg & ChainedRadToDeg} */(makeChainable(radToDeg)),\n};\n\n\n\n\n/**\n * @typedef {Number|String|Function} TimePosition\n */\n\n/**\n * Timeline's children offsets positions parser\n * @param  {Timeline} timeline\n * @param  {String} timePosition\n * @return {Number}\n */\nconst getPrevChildOffset = (timeline, timePosition) => {\n  if (stringStartsWith(timePosition, '<')) {\n    const goToPrevAnimationOffset = timePosition[1] === '<';\n    const prevAnimation = /** @type {Tickable} */(timeline._tail);\n    const prevOffset = prevAnimation ? prevAnimation._offset + prevAnimation._delay : 0;\n    return goToPrevAnimationOffset ? prevOffset : prevOffset + prevAnimation.duration;\n  }\n};\n\n/**\n * @param  {Timeline} timeline\n * @param  {TimePosition} [timePosition]\n * @return {Number}\n */\nconst parseTimelinePosition = (timeline, timePosition) => {\n  let tlDuration = timeline.iterationDuration;\n  if (tlDuration === minValue) tlDuration = 0;\n  if (isUnd(timePosition)) return tlDuration;\n  if (isNum(+timePosition)) return +timePosition;\n  const timePosStr = /** @type {String} */(timePosition);\n  const tlLabels = timeline ? timeline.labels : null;\n  const hasLabels = !isNil(tlLabels);\n  const prevOffset = getPrevChildOffset(timeline, timePosStr);\n  const hasSibling = !isUnd(prevOffset);\n  const matchedRelativeOperator = relativeValuesExecRgx.exec(timePosStr);\n  if (matchedRelativeOperator) {\n    const fullOperator = matchedRelativeOperator[0];\n    const split = timePosStr.split(fullOperator);\n    const labelOffset = hasLabels && split[0] ? tlLabels[split[0]] : tlDuration;\n    const parsedOffset = hasSibling ? prevOffset : hasLabels ? labelOffset : tlDuration;\n    const parsedNumericalOffset = +split[1];\n    return getRelativeValue(parsedOffset, parsedNumericalOffset, fullOperator[0]);\n  } else {\n    return hasSibling ? prevOffset :\n           hasLabels ? !isUnd(tlLabels[timePosStr]) ? tlLabels[timePosStr] :\n           tlDuration : tlDuration;\n  }\n};\n\n/**\n * @param {Timeline} tl\n * @return {Number}\n */\nfunction getTimelineTotalDuration(tl) {\n  return clampInfinity(((tl.iterationDuration + tl._loopDelay) * tl.iterationCount) - tl._loopDelay) || minValue;\n}\n\n/**\n * @overload\n * @param  {TimerParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @return {Timeline}\n *\n * @overload\n * @param  {AnimationParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @param  {TargetsParam} targets\n * @param  {Number} [index]\n * @param  {Number} [length]\n * @return {Timeline}\n *\n * @param  {TimerParams|AnimationParams} childParams\n * @param  {Timeline} tl\n * @param  {Number} timePosition\n * @param  {TargetsParam} [targets]\n * @param  {Number} [index]\n * @param  {Number} [length]\n */\nfunction addTlChild(childParams, tl, timePosition, targets, index, length) {\n  const isSetter = isNum(childParams.duration) && /** @type {Number} */(childParams.duration) <= minValue;\n  // Offset the tl position with -minValue for 0 duration animations or .set() calls in order to align their end value with the defined position\n  const adjustedPosition = isSetter ? timePosition - minValue : timePosition;\n  tick(tl, adjustedPosition, 1, 1, tickModes.AUTO);\n  const tlChild = targets ?\n    new JSAnimation(targets,/** @type {AnimationParams} */(childParams), tl, adjustedPosition, false, index, length) :\n    new Timer(/** @type {TimerParams} */(childParams), tl, adjustedPosition);\n  tlChild.init(1);\n  // TODO: Might be better to insert at a position relative to startTime?\n  addChild(tl, tlChild);\n  forEachChildren(tl, (/** @type {Renderable} */child) => {\n    const childTLOffset = child._offset + child._delay;\n    const childDur = childTLOffset + child.duration;\n    if (childDur > tl.iterationDuration) tl.iterationDuration = childDur;\n  });\n  tl.duration = getTimelineTotalDuration(tl);\n  return tl;\n}\n\nclass Timeline extends Timer {\n\n  /**\n   * @param {TimelineParams} [parameters]\n   */\n  constructor(parameters = {}) {\n    super(/** @type {TimerParams&TimelineParams} */(parameters), null, 0);\n    /** @type {Number} */\n    this.duration = 0; // TL duration starts at 0 and grows when adding children\n    /** @type {Record<String, Number>} */\n    this.labels = {};\n    const defaultsParams = parameters.defaults;\n    const globalDefaults = globals.defaults;\n    /** @type {DefaultsParams} */\n    this.defaults = defaultsParams ? mergeObjects(defaultsParams, globalDefaults) : globalDefaults;\n    /** @type {Callback<this>} */\n    this.onRender = parameters.onRender || globalDefaults.onRender;\n    const tlPlaybackEase = setValue(parameters.playbackEase, globalDefaults.playbackEase);\n    this._ease = tlPlaybackEase ? parseEasings(tlPlaybackEase) : null;\n    /** @type {Number} */\n    this.iterationDuration = 0;\n  }\n\n  /**\n   * @overload\n   * @param {TargetsParam} a1\n   * @param {AnimationParams} a2\n   * @param {TimePosition} [a3]\n   * @return {this}\n   *\n   * @overload\n   * @param {TimerParams} a1\n   * @param {TimePosition} [a2]\n   * @return {this}\n   *\n   * @param {TargetsParam|TimerParams} a1\n   * @param {AnimationParams|TimePosition} a2\n   * @param {TimePosition} [a3]\n   */\n  add(a1, a2, a3) {\n    const isAnim = isObj(a2);\n    const isTimer = isObj(a1);\n    if (isAnim || isTimer) {\n      this._hasChildren = true;\n      if (isAnim) {\n        const childParams = /** @type {AnimationParams} */(a2);\n        // Check for function for children stagger positions\n        if (isFnc(a3)) {\n          const staggeredPosition = /** @type {Function} */(a3);\n          const parsedTargetsArray = parseTargets(/** @type {TargetsParam} */(a1));\n          // Store initial duration before adding new children that will change the duration\n          const tlDuration = this.duration;\n          // Store initial _iterationDuration before adding new children that will change the duration\n          const tlIterationDuration = this.iterationDuration;\n          // Store the original id in order to add specific indexes to the new animations ids\n          const id = childParams.id;\n          let i = 0;\n          const parsedLength = parsedTargetsArray.length;\n          parsedTargetsArray.forEach((/** @type {Target} */target) => {\n            // Create a new parameter object for each staggered children\n            const staggeredChildParams = { ...childParams };\n            // Reset the duration of the timeline iteration before each stagger to prevent wrong start value calculation\n            this.duration = tlDuration;\n            this.iterationDuration = tlIterationDuration;\n            if (!isUnd(id)) staggeredChildParams.id = id + '-' + i;\n            addTlChild(\n              staggeredChildParams,\n              this,\n              staggeredPosition(target, i, parsedLength, this),\n              target,\n              i,\n              parsedLength\n            );\n            i++;\n          });\n        } else {\n          addTlChild(\n            childParams,\n            this,\n            parseTimelinePosition(this, a3),\n            /** @type {TargetsParam} */(a1),\n          );\n        }\n      } else {\n        // It's a Timer\n        addTlChild(\n          /** @type TimerParams */(a1),\n          this,\n          parseTimelinePosition(this,/** @type TimePosition */(a2)),\n        );\n      }\n      return this.init(1); // 1 = internalRender\n    }\n  }\n\n  /**\n   * @overload\n   * @param {Tickable} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @overload\n   * @param {globalThis.Animation} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @overload\n   * @param {WAAPIAnimation} [synced]\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   * @param {Tickable|WAAPIAnimation|globalThis.Animation} [synced]\n   * @param {TimePosition} [position]\n   */\n  sync(synced, position) {\n    if (isUnd(synced) || synced && isUnd(synced.pause)) return this;\n    synced.pause();\n    const duration = +(/** @type {globalThis.Animation} */(synced).effect ? /** @type {globalThis.Animation} */(synced).effect.getTiming().duration : /** @type {Tickable} */(synced).duration);\n    return this.add(synced, { currentTime: [0, duration], duration, ease: 'linear' }, position);\n  }\n\n  /**\n   * @param  {TargetsParam} targets\n   * @param  {AnimationParams} parameters\n   * @param  {TimePosition} [position]\n   * @return {this}\n   */\n  set(targets, parameters, position) {\n    if (isUnd(parameters)) return this;\n    parameters.duration = minValue;\n    parameters.composition = compositionTypes.replace;\n    return this.add(targets, parameters, position);\n  }\n\n  /**\n   * @param {Callback<Timer>} callback\n   * @param {TimePosition} [position]\n   * @return {this}\n   */\n  call(callback, position) {\n    if (isUnd(callback) || callback && !isFnc(callback)) return this;\n    return this.add({ duration: 0, onComplete: () => callback(this) }, position);\n  }\n\n  /**\n   * @param {String} labelName\n   * @param {TimePosition} [position]\n   * @return {this}\n   *\n   */\n  label(labelName, position) {\n    if (isUnd(labelName) || labelName && !isStr(labelName)) return this;\n    this.labels[labelName] = parseTimelinePosition(this,/** @type TimePosition */(position));\n    return this;\n  }\n\n  /**\n   * @param  {TargetsParam} targets\n   * @param  {String} [propertyName]\n   * @return {this}\n   */\n  remove(targets, propertyName) {\n    remove(targets, this, propertyName);\n    return this;\n  }\n\n  /**\n   * @param  {Number} newDuration\n   * @return {this}\n   */\n  stretch(newDuration) {\n    const currentDuration = this.duration;\n    if (currentDuration === normalizeTime(newDuration)) return this;\n    const timeScale = newDuration / currentDuration;\n    const labels = this.labels;\n    forEachChildren(this, (/** @type {JSAnimation} */child) => child.stretch(child.duration * timeScale));\n    for (let labelName in labels) labels[labelName] *= timeScale;\n    return super.stretch(newDuration);\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    forEachChildren(this, (/** @type {JSAnimation} */child) => {\n      if (child.refresh) child.refresh();\n    });\n    return this;\n  }\n\n  /**\n   * @return {this}\n   */\n  revert() {\n    super.revert();\n    forEachChildren(this, (/** @type {JSAnimation} */child) => child.revert, true);\n    return cleanInlineStyles(this);\n  }\n\n  /**\n   * @param  {Callback<this>} [callback]\n   * @return {Promise}\n   */\n  then(callback) {\n    return super.then(callback);\n  }\n}\n\n/**\n * @param {TimelineParams} [parameters]\n * @return {Timeline}\n */\nconst createTimeline = parameters => new Timeline(parameters).init();\n\n\n\n\nclass Animatable {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimatableParams} parameters\n   */\n  constructor(targets, parameters) {\n    if (globals.scope) globals.scope.revertibles.push(this);\n    /** @type {AnimationParams} */\n    const globalParams = {};\n    const properties = {};\n    this.targets = [];\n    this.animations = {};\n    if (isUnd(targets) || isUnd(parameters)) return;\n    for (let propName in parameters) {\n      const paramValue = parameters[propName];\n      if (isKey(propName)) {\n        properties[propName] = paramValue;\n      } else {\n        globalParams[propName] = paramValue;\n      }\n    }\n    for (let propName in properties) {\n      const propValue = properties[propName];\n      const isObjValue = isObj(propValue);\n      /** @type {TweenParamsOptions} */\n      let propParams = {};\n      let to = '+=0';\n      if (isObjValue) {\n        const unit = propValue.unit;\n        if (isStr(unit)) to += unit;\n      } else {\n        propParams.duration = propValue;\n      }\n      propParams[propName] = isObjValue ? mergeObjects({ to }, propValue) : to;\n      const animParams = mergeObjects(globalParams, propParams);\n      animParams.composition = compositionTypes.replace;\n      animParams.autoplay = false;\n      const animation = this.animations[propName] = new JSAnimation(targets, animParams, null, 0, false).init();\n      if (!this.targets.length) this.targets.push(...animation.targets);\n      /** @type {AnimatableProperty} */\n      this[propName] = (to, duration, ease) => {\n        const tween = /** @type {Tween} */(animation._head);\n        if (isUnd(to) && tween) {\n          const numbers = tween._numbers;\n          if (numbers && numbers.length) {\n            return numbers;\n          } else {\n            return tween._modifier(tween._number);\n          }\n        } else {\n          forEachChildren(animation, (/** @type {Tween} */tween) => {\n            if (isArr(to)) {\n              for (let i = 0, l = /** @type {Array} */(to).length; i < l; i++) {\n                if (!isUnd(tween._numbers[i])) {\n                  tween._fromNumbers[i] = /** @type {Number} */(tween._modifier(tween._numbers[i]));\n                  tween._toNumbers[i] = to[i];\n                }\n              }\n            } else {\n              tween._fromNumber = /** @type {Number} */(tween._modifier(tween._number));\n              tween._toNumber = /** @type {Number} */(to);\n            }\n            if (!isUnd(ease)) tween._ease = parseEasings(ease);\n            tween._currentTime = 0;\n          });\n          if (!isUnd(duration)) animation.stretch(duration);\n          animation.reset(1).resume();\n          return this;\n        }\n      };\n    }\n  }\n\n  revert() {\n    for (let propName in this.animations) {\n      this[propName] = noop;\n      this.animations[propName].revert();\n    }\n    this.animations = {};\n    this.targets.length = 0;\n    return this;\n  }\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimatableParams} parameters\n * @return {AnimatableObject}\n */\nconst createAnimatable = (targets, parameters) => /** @type {AnimatableObject} */(new Animatable(targets, parameters));\n\n\n\n\n/*\n * Spring ease solver adapted from https://webkit.org/demos/spring/spring.js\n * Webkit Copyright © 2016 Apple Inc\n */\n\n/**\n * @typedef {Object} SpringParams\n * @property {Number} [mass=1] - Mass, default 1\n * @property {Number} [stiffness=100] - Stiffness, default 100\n * @property {Number} [damping=10] - Damping, default 10\n * @property {Number} [velocity=0] - Initial velocity, default 0\n */\n\nclass Spring {\n  /**\n   * @param {SpringParams} [parameters]\n   */\n  constructor(parameters = {}) {\n    this.timeStep = .02; // Interval fed to the solver to calculate duration\n    this.restThreshold = .0005; // Values below this threshold are considered resting position\n    this.restDuration = 200; // Duration in ms used to check if the spring is resting after reaching restThreshold\n    this.maxDuration = 60000; // The maximum allowed spring duration in ms (default 1 min)\n    this.maxRestSteps = this.restDuration / this.timeStep / K; // How many steps allowed after reaching restThreshold before stopping the duration calculation\n    this.maxIterations = this.maxDuration / this.timeStep / K; // Calculate the maximum iterations allowed based on maxDuration\n    this.m = clamp(setValue(parameters.mass, 1), 0, K);\n    this.s = clamp(setValue(parameters.stiffness, 100), 1, K);\n    this.d = clamp(setValue(parameters.damping, 10), .1, K);\n    this.v = clamp(setValue(parameters.velocity, 0), -1e3, K);\n    this.w0 = 0;\n    this.zeta = 0;\n    this.wd = 0;\n    this.b = 0;\n    this.solverDuration = 0;\n    this.duration = 0;\n    this.compute();\n    /** @type {EasingFunction} */\n    this.ease = t => t === 0 || t === 1 ? t : this.solve(t * this.solverDuration);\n  }\n\n  /** @type {EasingFunction} */\n  solve(time) {\n    const { zeta, w0, wd, b } = this;\n    let t = time;\n    if (zeta < 1) {\n      t = exp(-t * zeta * w0) * (1 * cos(wd * t) + b * sin(wd * t));\n    } else {\n      t = (1 + b * t) * exp(-t * w0);\n    }\n    return 1 - t;\n  }\n\n  compute() {\n    const { maxRestSteps, maxIterations, restThreshold, timeStep, m, d, s, v } = this;\n    const w0 = this.w0 = clamp(sqrt(s / m), minValue, K);\n    const zeta = this.zeta = d / (2 * sqrt(s * m));\n    const wd = this.wd = zeta < 1 ? w0 * sqrt(1 - zeta * zeta) : 0;\n    this.b = zeta < 1 ? (zeta * w0 + -v) / wd : -v + w0;\n    let solverTime = 0;\n    let restSteps = 0;\n    let iterations = 0;\n    while (restSteps < maxRestSteps && iterations < maxIterations) {\n      if (abs(1 - this.solve(solverTime)) < restThreshold) {\n        restSteps++;\n      } else {\n        restSteps = 0;\n      }\n      this.solverDuration = solverTime;\n      solverTime += timeStep;\n      iterations++;\n    }\n    this.duration = round(this.solverDuration * K, 0) * globals.timeScale;\n  }\n\n  get mass() {\n    return this.m;\n  }\n\n  set mass(v) {\n    this.m = clamp(setValue(v, 1), 0, K);\n    this.compute();\n  }\n\n  get stiffness() {\n    return this.s;\n  }\n\n  set stiffness(v) {\n    this.s = clamp(setValue(v, 100), 1, K);\n    this.compute();\n  }\n\n  get damping() {\n    return this.d;\n  }\n\n  set damping(v) {\n    this.d = clamp(setValue(v, 10), .1, K);\n    this.compute();\n  }\n\n  get velocity() {\n    return this.v;\n  }\n\n  set velocity(v) {\n    this.v = clamp(setValue(v, 0), -1e3, K);\n    this.compute();\n  }\n}\n\n/**\n * @param {SpringParams} [parameters]\n * @returns {Spring}\n */\nconst createSpring = (parameters) => new Spring(parameters);\n\n\n\n\n/**\n * @param {Event} e\n */\nconst preventDefault = e => {\n  if (e.cancelable) e.preventDefault();\n};\n\nclass DOMProxy {\n  /** @param {Object} el */\n  constructor(el) {\n    this.el = el;\n    this.zIndex = 0;\n    this.parentElement = null;\n    this.classList = {\n      add: noop,\n      remove: noop,\n    };\n  }\n\n  get x() { return this.el.x || 0 };\n  set x(v) { this.el.x = v; };\n\n  get y() { return this.el.y || 0 };\n  set y(v) { this.el.y = v; };\n\n  get width() { return this.el.width || 0 };\n  set width(v) { this.el.width = v; };\n\n  get height() { return this.el.height || 0 };\n  set height(v) { this.el.height = v; };\n\n  getBoundingClientRect() {\n    return {\n      top: this.y,\n      right: this.x,\n      bottom: this.y + this.height,\n      left: this.x + this.width,\n    }\n  }\n}\n\nclass Transforms {\n  /**\n   * @param {DOMTarget|DOMProxy} $el\n   */\n  constructor($el) {\n    this.$el = $el;\n    this.inlineTransforms = [];\n    this.point = new DOMPoint();\n    this.inversedMatrix = this.getMatrix().inverse();\n  }\n\n  /**\n   * @param {Number} x\n   * @param {Number} y\n   * @return {DOMPoint}\n   */\n  normalizePoint(x, y) {\n    this.point.x = x;\n    this.point.y = y;\n    return this.point.matrixTransform(this.inversedMatrix);\n  }\n\n  /**\n   * @callback TraverseParentsCallback\n   * @param {DOMTarget} $el\n   * @param {Number} i\n   */\n\n  /**\n   * @param {TraverseParentsCallback} cb\n   */\n  traverseUp(cb) {\n    let $el = /** @type {DOMTarget|Document} */(this.$el.parentElement), i = 0;\n    while ($el && $el !== doc) {\n      cb(/** @type {DOMTarget} */($el), i);\n      $el = /** @type {DOMTarget} */($el.parentElement);\n      i++;\n    }\n  }\n\n  getMatrix() {\n    const matrix = new DOMMatrix();\n    this.traverseUp($el => {\n      const transformValue = getComputedStyle($el).transform;\n      if (transformValue) {\n        const elMatrix = new DOMMatrix(transformValue);\n        matrix.preMultiplySelf(elMatrix);\n      }\n    });\n    return matrix;\n  }\n\n  remove() {\n    this.traverseUp(($el, i) => {\n      this.inlineTransforms[i] = $el.style.transform;\n      $el.style.transform = 'none';\n    });\n  }\n\n  revert() {\n    this.traverseUp(($el, i) => {\n      const ct = this.inlineTransforms[i];\n      if (ct === '') {\n        $el.style.removeProperty('transform');\n      } else {\n        $el.style.transform = ct;\n      }\n    });\n  }\n}\n\n/**\n * @template {Array<Number>|DOMTargetSelector|String|Number|Boolean|Function|DraggableCursorParams} T\n * @param {T | ((draggable: Draggable) => T)} value\n * @param {Draggable} draggable\n * @return {T}\n */\nconst parseDraggableFunctionParameter = (value, draggable) => value && isFnc(value) ? /** @type {Function} */(value)(draggable) : value;\n\nlet zIndex = 0;\n\nclass Draggable {\n  /**\n   * @param {TargetsParam} target\n   * @param {DraggableParams} [parameters]\n   */\n  constructor(target, parameters = {}) {\n    if (!target) return;\n    if (globals.scope) globals.scope.revertibles.push(this);\n    const paramX = parameters.x;\n    const paramY = parameters.y;\n    const trigger = parameters.trigger;\n    const modifier = parameters.modifier;\n    const ease = parameters.releaseEase;\n    const customEase = ease && parseEasings(ease);\n    const hasSpring = !isUnd(ease) && !isUnd(/** @type {Spring} */(ease).ease);\n    const xProp = /** @type {String} */(isObj(paramX) && !isUnd(/** @type {Object} */(paramX).mapTo) ? /** @type {Object} */(paramX).mapTo : 'translateX');\n    const yProp = /** @type {String} */(isObj(paramY) && !isUnd(/** @type {Object} */(paramY).mapTo) ? /** @type {Object} */(paramY).mapTo : 'translateY');\n    const container = parseDraggableFunctionParameter(parameters.container, this);\n    this.containerArray = isArr(container) ? container : null;\n    this.$container = /** @type {HTMLElement} */(container && !this.containerArray ? parseTargets(/** @type {DOMTarget} */(container))[0] : doc.body);\n    this.useWin = this.$container === doc.body;\n    /** @type {Window | HTMLElement} */\n    this.$scrollContainer = this.useWin ? win : this.$container;\n    this.$target = /** @type {HTMLElement} */(isObj(target) ? new DOMProxy(target) : parseTargets(target)[0]);\n    this.$trigger = /** @type {HTMLElement} */(parseTargets(trigger ? trigger : target)[0]);\n    this.fixed = getTargetValue(this.$target, 'position') === 'fixed';\n    // Refreshable parameters\n    this.isFinePointer = true;\n    /** @type {[Number, Number, Number, Number]} */\n    this.containerPadding = [0, 0, 0, 0];\n    /** @type {Number} */\n    this.containerFriction = 0;\n    /** @type {Number} */\n    this.releaseContainerFriction = 0;\n    /** @type {Number|Array<Number>} */\n    this.snapX = 0;\n    /** @type {Number|Array<Number>} */\n    this.snapY = 0;\n    /** @type {Number} */\n    this.scrollSpeed = 0;\n    /** @type {Number} */\n    this.scrollThreshold = 0;\n    /** @type {Number} */\n    this.dragSpeed = 0;\n    /** @type {Number} */\n    this.maxVelocity = 0;\n    /** @type {Number} */\n    this.minVelocity = 0;\n    /** @type {Number} */\n    this.velocityMultiplier = 0;\n    /** @type {Boolean|DraggableCursorParams} */\n    this.cursor = false;\n    /** @type {Spring} */\n    this.releaseXSpring = hasSpring ? /** @type {Spring} */(ease) : createSpring({\n      mass: setValue(parameters.releaseMass, 1),\n      stiffness: setValue(parameters.releaseStiffness, 80),\n      damping: setValue(parameters.releaseDamping, 20),\n    });\n    /** @type {Spring} */\n    this.releaseYSpring = hasSpring ? /** @type {Spring} */(ease) : createSpring({\n      mass: setValue(parameters.releaseMass, 1),\n      stiffness: setValue(parameters.releaseStiffness, 80),\n      damping: setValue(parameters.releaseDamping, 20),\n    });\n    /** @type {EasingFunction} */\n    this.releaseEase = customEase || eases.outQuint;\n    /** @type {Boolean} */\n    this.hasReleaseSpring = hasSpring;\n    /** @type {Callback<this>} */\n    this.onGrab = parameters.onGrab || noop;\n    /** @type {Callback<this>} */\n    this.onDrag = parameters.onDrag || noop;\n    /** @type {Callback<this>} */\n    this.onRelease = parameters.onRelease || noop;\n    /** @type {Callback<this>} */\n    this.onUpdate = parameters.onUpdate || noop;\n    /** @type {Callback<this>} */\n    this.onSettle = parameters.onSettle || noop;\n    /** @type {Callback<this>} */\n    this.onSnap = parameters.onSnap || noop;\n    /** @type {Callback<this>} */\n    this.onResize = parameters.onResize || noop;\n    /** @type {Callback<this>} */\n    this.onAfterResize = parameters.onAfterResize || noop;\n    /** @type {[Number, Number]} */\n    this.disabled = [0, 0];\n    /** @type {AnimatableParams} */\n    const animatableParams = {};\n    if (modifier) animatableParams.modifier = modifier;\n    if (isUnd(paramX) || paramX === true) {\n      animatableParams[xProp] = 0;\n    } else if (isObj(paramX)) {\n      const paramXObject = /** @type {DraggableAxisParam} */(paramX);\n      const animatableXParams = {};\n      if (paramXObject.modifier) animatableXParams.modifier = paramXObject.modifier;\n      if (paramXObject.composition) animatableXParams.composition = paramXObject.composition;\n      animatableParams[xProp] = animatableXParams;\n    } else if (paramX === false) {\n      animatableParams[xProp] = 0;\n      this.disabled[0] = 1;\n    }\n    if (isUnd(paramY) || paramY === true) {\n      animatableParams[yProp] = 0;\n    } else if (isObj(paramY)) {\n      const paramYObject = /** @type {DraggableAxisParam} */(paramY);\n      const animatableYParams = {};\n      if (paramYObject.modifier) animatableYParams.modifier = paramYObject.modifier;\n      if (paramYObject.composition) animatableYParams.composition = paramYObject.composition;\n      animatableParams[yProp] = animatableYParams;\n    } else if (paramY === false) {\n      animatableParams[yProp] = 0;\n      this.disabled[1] = 1;\n    }\n    /** @type {AnimatableObject} */\n    this.animate = /** @type {AnimatableObject} */(new Animatable(this.$target, animatableParams));\n    // Internal props\n    this.xProp = xProp;\n    this.yProp = yProp;\n    this.destX = 0;\n    this.destY = 0;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.scroll = {x: 0, y: 0};\n    /** @type {[Number, Number, Number, Number]} */\n    this.coords = [this.x, this.y, 0, 0]; // x, y, temp x, temp y\n    /** @type {[Number, Number]} */\n    this.snapped = [0, 0]; // x, y\n    /** @type {[Number, Number, Number, Number, Number, Number, Number, Number]} */\n    this.pointer = [0, 0, 0, 0, 0, 0, 0, 0]; // x1, y1, x2, y2, temp x1, temp y1, temp x2, temp y2\n    /** @type {[Number, Number]} */\n    this.scrollView = [0, 0]; // w, h\n    /** @type {[Number, Number, Number, Number]} */\n    this.dragArea = [0, 0, 0, 0]; // x, y, w, h\n    /** @type {[Number, Number, Number, Number]} */\n    this.containerBounds = [-1e12, maxValue, maxValue, -1e12]; // t, r, b, l\n    /** @type {[Number, Number, Number, Number]} */\n    this.scrollBounds = [0, 0, 0, 0]; // t, r, b, l\n    /** @type {[Number, Number, Number, Number]} */\n    this.targetBounds = [0, 0, 0, 0]; // t, r, b, l\n    /** @type {[Number, Number]} */\n    this.window = [0, 0]; // w, h\n    /** @type {[Number, Number, Number]} */\n    this.velocityStack = [0, 0, 0];\n    /** @type {Number} */\n    this.velocityStackIndex = 0;\n    /** @type {Number} */\n    this.velocityTime = now();\n    /** @type {Number} */\n    this.velocity = 0;\n    /** @type {Number} */\n    this.angle = 0;\n    /** @type {JSAnimation} */\n    this.cursorStyles = null;\n    /** @type {JSAnimation} */\n    this.triggerStyles = null;\n    /** @type {JSAnimation} */\n    this.bodyStyles = null;\n    /** @type {JSAnimation} */\n    this.targetStyles = null;\n    /** @type {JSAnimation} */\n    this.touchActionStyles = null;\n    this.transforms = new Transforms(this.$target);\n    this.overshootCoords = { x: 0, y: 0 };\n    this.overshootXTicker = new Timer({ autoplay: false }, null, 0).init();\n    this.overshootYTicker = new Timer({ autoplay: false }, null, 0).init();\n    this.updateTicker = new Timer({ autoplay: false }, null, 0).init();\n    this.overshootXTicker.onUpdate = () => {\n      if (this.disabled[0]) return;\n      this.updated = true;\n      this.manual = true;\n      this.animate[this.xProp](this.overshootCoords.x, 0);\n    };\n    this.overshootXTicker.onComplete = () => {\n      if (this.disabled[0]) return;\n      this.manual = false;\n      this.animate[this.xProp](this.overshootCoords.x, 0);\n    };\n    this.overshootYTicker.onUpdate = () => {\n      if (this.disabled[1]) return;\n      this.updated = true;\n      this.manual = true;\n      this.animate[this.yProp](this.overshootCoords.y, 0);\n    };\n    this.overshootYTicker.onComplete = () => {\n      if (this.disabled[1]) return;\n      this.manual = false;\n      this.animate[this.yProp](this.overshootCoords.y, 0);\n    };\n    this.updateTicker.onUpdate = () => this.update();\n    this.contained = !isUnd(container);\n    this.manual = false;\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.enabled = false;\n    this.initialized = false;\n    this.activeProp = this.disabled[1] ? xProp : yProp;\n    this.animate.animations[this.activeProp].onRender = () => {\n      const hasUpdated = this.updated;\n      const hasMoved = this.grabbed && hasUpdated;\n      const hasReleased = !hasMoved && this.released;\n      const x = this.x;\n      const y = this.y;\n      const dx = x - this.coords[2];\n      const dy = y - this.coords[3];\n      this.deltaX = dx;\n      this.deltaY = dy;\n      this.coords[2] = x;\n      this.coords[3] = y;\n      if (hasUpdated) {\n        this.onUpdate(this);\n      }\n      if (!hasReleased) {\n        this.updated = false;\n      } else {\n        this.computeVelocity(dx, dy);\n        this.angle = atan2(dy, dx);\n      }\n    };\n    this.animate.animations[this.activeProp].onComplete = () => {\n      if ((!this.grabbed && this.released)) {\n        // Set eleased to false before calling onSettle to avoid recursion\n        this.released = false;\n      }\n      if (!this.manual) {\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.velocity = 0;\n        this.velocityStack[0] = 0;\n        this.velocityStack[1] = 0;\n        this.velocityStack[2] = 0;\n        this.velocityStackIndex = 0;\n        this.onSettle(this);\n      }\n    };\n    this.resizeTicker = new Timer({\n      autoplay: false,\n      duration: 150 * globals.timeScale,\n      onComplete: () => {\n        this.onResize(this);\n        this.refresh();\n        this.onAfterResize(this);\n      },\n    }).init();\n    this.parameters = parameters;\n    this.resizeObserver = new ResizeObserver(() => {\n      if (this.initialized) {\n        this.resizeTicker.restart();\n      } else {\n        this.initialized = true;\n      }\n    });\n    this.enable();\n    this.refresh();\n    this.resizeObserver.observe(this.$container);\n    if (!isObj(target)) this.resizeObserver.observe(this.$target);\n  }\n\n  /**\n   * @param  {Number} dx\n   * @param  {Number} dy\n   * @return {Number}\n   */\n  computeVelocity(dx, dy) {\n    const prevTime = this.velocityTime;\n    const curTime = now();\n    const elapsed = curTime - prevTime;\n    if (elapsed < 17) return this.velocity;\n    this.velocityTime = curTime;\n    const velocityStack = this.velocityStack;\n    const vMul = this.velocityMultiplier;\n    const minV = this.minVelocity;\n    const maxV = this.maxVelocity;\n    const vi = this.velocityStackIndex;\n    velocityStack[vi] = round(clamp((sqrt(dx * dx + dy * dy) / elapsed) * vMul, minV, maxV), 5);\n    const velocity = max(velocityStack[0], velocityStack[1], velocityStack[2]);\n    this.velocity = velocity;\n    this.velocityStackIndex = (vi + 1) % 3;\n    return velocity;\n  }\n\n  /**\n   * @param {Number}  x\n   * @param {Boolean} [muteUpdateCallback]\n   * @return {this}\n   */\n  setX(x, muteUpdateCallback = false) {\n    if (this.disabled[0]) return;\n    const v = round(x, 5);\n    this.overshootXTicker.pause();\n    this.manual = true;\n    this.updated = !muteUpdateCallback;\n    this.destX = v;\n    this.snapped[0] = snap(v, this.snapX);\n    this.animate[this.xProp](v, 0);\n    this.manual = false;\n    return this;\n  }\n\n  /**\n   * @param {Number}  y\n   * @param {Boolean} [muteUpdateCallback]\n   * @return {this}\n   */\n  setY(y, muteUpdateCallback = false) {\n    if (this.disabled[1]) return;\n    const v = round(y, 5);\n    this.overshootYTicker.pause();\n    this.manual = true;\n    this.updated = !muteUpdateCallback;\n    this.destY = v;\n    this.snapped[1] = snap(v, this.snapY);\n    this.animate[this.yProp](v, 0);\n    this.manual = false;\n    return this;\n  }\n\n  get x() {\n    return round(/** @type {Number} */(this.animate[this.xProp]()), globals.precision);\n  }\n\n  set x(x) {\n    this.setX(x, false);\n  }\n\n  get y() {\n    return round(/** @type {Number} */(this.animate[this.yProp]()), globals.precision);\n  }\n\n  set y(y) {\n    this.setY(y, false);\n  }\n\n  get progressX() {\n    return mapRange(this.x, this.containerBounds[3], this.containerBounds[1], 0, 1);\n  }\n\n  set progressX(x) {\n    this.setX(mapRange(x, 0, 1, this.containerBounds[3], this.containerBounds[1]), false);\n  }\n\n  get progressY() {\n    return mapRange(this.y, this.containerBounds[0], this.containerBounds[2], 0, 1);\n  }\n\n  set progressY(y) {\n    this.setY(mapRange(y, 0, 1, this.containerBounds[0], this.containerBounds[2]), false);\n  }\n\n  updateScrollCoords() {\n    const sx = round(this.useWin ? win.scrollX : this.$container.scrollLeft, 0);\n    const sy = round(this.useWin ? win.scrollY : this.$container.scrollTop, 0);\n    const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n    const threshold = this.scrollThreshold;\n    this.scroll.x = sx;\n    this.scroll.y = sy;\n    this.scrollBounds[0] = sy - this.targetBounds[0] + cpt - threshold;\n    this.scrollBounds[1] = sx - this.targetBounds[1] - cpr + threshold;\n    this.scrollBounds[2] = sy - this.targetBounds[2] - cpb + threshold;\n    this.scrollBounds[3] = sx - this.targetBounds[3] + cpl - threshold;\n  }\n\n  updateBoundingValues() {\n    const $container = this.$container;\n    const cx = this.x;\n    const cy = this.y;\n    const cx2 = this.coords[2];\n    const cy2 =  this.coords[3];\n    // Prevents interfering with the scroll area in cases the target is outside of the container\n    // Make sure the temp coords are also adjuset to prevents wrong delta calculation on updates\n    this.coords[2] = 0;\n    this.coords[3] = 0;\n    this.setX(0, true);\n    this.setY(0, true);\n    this.transforms.remove();\n    const iw = this.window[0] = win.innerWidth;\n    const ih = this.window[1] = win.innerHeight;\n    const uw = this.useWin;\n    const sw = $container.scrollWidth;\n    const sh = $container.scrollHeight;\n    const fx = this.fixed;\n    const transformContainerRect = $container.getBoundingClientRect();\n    const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n    this.dragArea[0] = uw ? 0 : transformContainerRect.left;\n    this.dragArea[1] = uw ? 0 : transformContainerRect.top;\n    this.scrollView[0] = uw ? clamp(sw, iw, sw) : sw;\n    this.scrollView[1] = uw ? clamp(sh, ih, sh) : sh;\n    this.updateScrollCoords();\n    const { width, height, left, top, right, bottom } = $container.getBoundingClientRect();\n    this.dragArea[2] = round(uw ? clamp(width, iw, iw) : width, 0);\n    this.dragArea[3] = round(uw ? clamp(height, ih, ih) : height, 0);\n    const containerOverflow = getTargetValue($container, 'overflow');\n    const visibleOverflow = containerOverflow === 'visible';\n    const hiddenOverflow = containerOverflow === 'hidden';\n    this.canScroll = fx ? false :\n      this.contained &&\n      (($container === doc.body && visibleOverflow) || (!hiddenOverflow && !visibleOverflow)) &&\n      (sw > this.dragArea[2] + cpl - cpr || sh > this.dragArea[3] + cpt - cpb) &&\n      (!this.containerArray || (this.containerArray && !isArr(this.containerArray)));\n    if (this.contained) {\n      const sx = this.scroll.x;\n      const sy = this.scroll.y;\n      const canScroll = this.canScroll;\n      const targetRect = this.$target.getBoundingClientRect();\n      const hiddenLeft = canScroll ? uw ? 0 : $container.scrollLeft : 0;\n      const hiddenTop = canScroll ? uw ? 0 : $container.scrollTop : 0;\n      const hiddenRight = canScroll ? this.scrollView[0] - hiddenLeft - width : 0;\n      const hiddenBottom = canScroll ? this.scrollView[1] - hiddenTop - height : 0;\n      this.targetBounds[0] = round((targetRect.top + sy) - (uw ? 0 : top), 0);\n      this.targetBounds[1] = round((targetRect.right + sx) - (uw ? iw : right), 0);\n      this.targetBounds[2] = round((targetRect.bottom + sy) - (uw ? ih : bottom), 0);\n      this.targetBounds[3] = round((targetRect.left + sx) - (uw ? 0 : left), 0);\n      if (this.containerArray) {\n        this.containerBounds[0] = this.containerArray[0] + cpt;\n        this.containerBounds[1] = this.containerArray[1] - cpr;\n        this.containerBounds[2] = this.containerArray[2] - cpb;\n        this.containerBounds[3] = this.containerArray[3] + cpl;\n      } else {\n        this.containerBounds[0] = -round(targetRect.top - (fx ? clamp(top, 0, ih) : top) + hiddenTop - cpt, 0);\n        this.containerBounds[1] = -round(targetRect.right - (fx ? clamp(right, 0, iw) : right) - hiddenRight + cpr, 0);\n        this.containerBounds[2] = -round(targetRect.bottom - (fx ? clamp(bottom, 0, ih) : bottom) - hiddenBottom + cpb, 0);\n        this.containerBounds[3] = -round(targetRect.left - (fx ? clamp(left, 0, iw) : left) + hiddenLeft - cpl, 0);\n      }\n    }\n    this.transforms.revert();\n    // Restore coordinates\n    this.coords[2] = cx2;\n    this.coords[3] = cy2;\n    this.setX(cx, true);\n    this.setY(cy, true);\n  }\n\n  /**\n   * Returns 0 if not OB, 1 if x is OB, 2 if y is OB, 3 if both x and y are OB\n   *\n   * @param  {Array} bounds\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {Number}\n   */\n  isOutOfBounds(bounds, x, y) {\n    if (!this.contained) return 0;\n    const [ bt, br, bb, bl ] = bounds;\n    const [ dx, dy ] = this.disabled;\n    const obx = !dx && x < bl || !dx && x > br;\n    const oby = !dy && y < bt || !dy && y > bb;\n    return obx && !oby ? 1 : !obx && oby ? 2 : obx && oby ? 3 : 0;\n  }\n\n  refresh() {\n    const params = this.parameters;\n    const paramX = params.x;\n    const paramY = params.y;\n    const container = parseDraggableFunctionParameter(params.container, this);\n    const cp = parseDraggableFunctionParameter(params.containerPadding, this) || 0;\n    const containerPadding = /** @type {[Number, Number, Number, Number]} */(isArr(cp) ? cp : [cp, cp, cp, cp]);\n    const cx = this.x;\n    const cy = this.y;\n    const parsedCursorStyles = parseDraggableFunctionParameter(params.cursor, this);\n    const cursorStyles = { onHover: 'grab', onGrab: 'grabbing' };\n    if (parsedCursorStyles) {\n      const { onHover, onGrab } = /** @type {DraggableCursorParams} */(parsedCursorStyles);\n      if (onHover) cursorStyles.onHover = onHover;\n      if (onGrab) cursorStyles.onGrab = onGrab;\n    }\n    this.containerArray = isArr(container) ? container : null;\n    this.$container = /** @type {HTMLElement} */(container && !this.containerArray ? parseTargets(/** @type {DOMTarget} */(container))[0] : doc.body);\n    this.useWin = this.$container === doc.body;\n    /** @type {Window | HTMLElement} */\n    this.$scrollContainer = this.useWin ? win : this.$container;\n    this.isFinePointer = matchMedia('(pointer:fine)').matches;\n    this.containerPadding = setValue(containerPadding, [0, 0, 0, 0]);\n    this.containerFriction = clamp(setValue(parseDraggableFunctionParameter(params.containerFriction, this), .8), 0, 1);\n    this.releaseContainerFriction = clamp(setValue(parseDraggableFunctionParameter(params.releaseContainerFriction, this), this.containerFriction), 0, 1);\n    this.snapX = parseDraggableFunctionParameter(isObj(paramX) && !isUnd(paramX.snap) ? paramX.snap : params.snap, this);\n    this.snapY = parseDraggableFunctionParameter(isObj(paramY) && !isUnd(paramY.snap) ? paramY.snap : params.snap, this);\n    this.scrollSpeed = setValue(parseDraggableFunctionParameter(params.scrollSpeed, this), 1.5);\n    this.scrollThreshold = setValue(parseDraggableFunctionParameter(params.scrollThreshold, this), 20);\n    this.dragSpeed = setValue(parseDraggableFunctionParameter(params.dragSpeed, this), 1);\n    this.minVelocity = setValue(parseDraggableFunctionParameter(params.minVelocity, this), 0);\n    this.maxVelocity = setValue(parseDraggableFunctionParameter(params.maxVelocity, this), 50);\n    this.velocityMultiplier = setValue(parseDraggableFunctionParameter(params.velocityMultiplier, this), 1);\n    this.cursor = parsedCursorStyles === false ? false : cursorStyles;\n    this.updateBoundingValues();\n\n    // const ob = this.isOutOfBounds(this.containerBounds, this.x, this.y);\n    // if (ob === 1 || ob === 3) this.progressX = px;\n    // if (ob === 2 || ob === 3) this.progressY = py;\n\n    // if (this.initialized && this.contained) {\n    //   if (this.progressX !== px) this.progressX = px;\n    //   if (this.progressY !== py) this.progressY = py;\n    // }\n\n    const [ bt, br, bb, bl ] = this.containerBounds;\n    this.setX(clamp(cx, bl, br), true);\n    this.setY(clamp(cy, bt, bb), true);\n  }\n\n  update() {\n    this.updateScrollCoords();\n    if (this.canScroll) {\n      const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n      const [ sw, sh ] = this.scrollView;\n      const daw = this.dragArea[2];\n      const dah = this.dragArea[3];\n      const csx = this.scroll.x;\n      const csy = this.scroll.y;\n      const nsw = this.$container.scrollWidth;\n      const nsh = this.$container.scrollHeight;\n      const csw = this.useWin ? clamp(nsw, this.window[0], nsw) : nsw;\n      const csh = this.useWin ? clamp(nsh, this.window[1], nsh) : nsh;\n      const swd = sw - csw;\n      const shd = sh - csh;\n      // Handle cases where the scrollarea dimensions changes during drag\n      if (this.dragged && swd > 0) {\n        this.coords[0] -= swd;\n        this.scrollView[0] = csw;\n      }\n      if (this.dragged && shd > 0) {\n        this.coords[1] -= shd;\n        this.scrollView[1] = csh;\n      }\n      // Handle autoscroll when target is at the edges of the scroll bounds\n      const s = this.scrollSpeed * 10;\n      const threshold = this.scrollThreshold;\n      const [ x, y ] = this.coords;\n      const [ st, sr, sb, sl ] = this.scrollBounds;\n      const t = round(clamp((y - st + cpt) / threshold, -1, 0) * s, 0);\n      const r = round(clamp((x - sr - cpr) / threshold, 0, 1) * s, 0);\n      const b = round(clamp((y - sb - cpb) / threshold, 0, 1) * s, 0);\n      const l = round(clamp((x - sl + cpl) / threshold, -1, 0) * s, 0);\n      if (t || b || l || r) {\n        const [nx, ny] = this.disabled;\n        let scrollX = csx;\n        let scrollY = csy;\n        if (!nx) {\n          scrollX = round(clamp(csx + (l || r), 0, sw - daw), 0);\n          this.coords[0] -= csx - scrollX;\n        }\n        if (!ny) {\n          scrollY = round(clamp(csy + (t || b), 0, sh - dah), 0);\n          this.coords[1] -= csy - scrollY;\n        }\n        // Note: Safari mobile requires to use different scroll methods depending if using the window or not\n        if (this.useWin) {\n          this.$scrollContainer.scrollBy(-(csx - scrollX), -(csy - scrollY));\n        } else {\n          this.$scrollContainer.scrollTo(scrollX, scrollY);\n        }\n      }\n    }\n    const [ ct, cr, cb, cl ] = this.containerBounds;\n    const [ px1, py1, px2, py2, px3, py3 ] = this.pointer;\n    this.coords[0] += (px1 - px3) * this.dragSpeed;\n    this.coords[1] += (py1 - py3) * this.dragSpeed;\n    this.pointer[4] = px1;\n    this.pointer[5] = py1;\n    const [ cx, cy ] = this.coords;\n    const [ sx, sy ] = this.snapped;\n    const cf = (1 - this.containerFriction) * this.dragSpeed;\n    this.setX(cx > cr ? cr + (cx - cr) * cf : cx < cl ? cl + (cx - cl) * cf : cx, false);\n    this.setY(cy > cb ? cb + (cy - cb) * cf : cy < ct ? ct + (cy - ct) * cf : cy, false);\n    this.computeVelocity(px1 - px3, py1 - py3);\n    this.angle = atan2(py1 - py2, px1 - px2);\n    const [ nsx, nsy ] = this.snapped;\n    if (nsx !== sx && this.snapX || nsy !== sy && this.snapY) {\n      this.onSnap(this);\n    }\n  }\n\n  stop() {\n    this.updateTicker.pause();\n    this.overshootXTicker.pause();\n    this.overshootYTicker.pause();\n    // Pauses the in bounds onRelease animations\n    for (let prop in this.animate.animations) this.animate.animations[prop].pause();\n    remove(this, null, 'x');\n    remove(this, null, 'y');\n    remove(this, null, 'progressX');\n    remove(this, null, 'progressY');\n    remove(this.scroll); // Removes any active animations on the container scroll\n    remove(this.overshootCoords); // Removes active overshoot animations\n    return this;\n  }\n\n  /**\n   * @param {Number} [duration]\n   * @param {Number} [gap]\n   * @param {EasingParam} [ease]\n   * @return {this}\n   */\n  scrollInView(duration, gap = 0, ease = eases.inOutQuad) {\n    this.updateScrollCoords();\n    const x = this.destX;\n    const y = this.destY;\n    const scroll = this.scroll;\n    const scrollBounds = this.scrollBounds;\n    const canScroll = this.canScroll;\n    if (!this.containerArray && this.isOutOfBounds(scrollBounds, x, y)) {\n      const [ st, sr, sb, sl ] = scrollBounds;\n      const t = round(clamp(y - st, -1e12, 0), 0);\n      const r = round(clamp(x - sr, 0, maxValue), 0);\n      const b = round(clamp(y - sb, 0, maxValue), 0);\n      const l = round(clamp(x - sl, -1e12, 0), 0);\n      new JSAnimation(scroll, {\n        x: round(scroll.x + (l ? l - gap : r ? r + gap : 0), 0),\n        y: round(scroll.y + (t ? t - gap : b ? b + gap : 0), 0),\n        duration: isUnd(duration) ? 350 * globals.timeScale : duration,\n        ease,\n        onUpdate: () => {\n          this.canScroll = false;\n          this.$scrollContainer.scrollTo(scroll.x, scroll.y);\n        }\n      }).init().then(() => {\n        this.canScroll = canScroll;\n      });\n    }\n    return this;\n  }\n\n  handleHover() {\n    if (this.isFinePointer && this.cursor && !this.cursorStyles) {\n      this.cursorStyles = setTargetValues(this.$trigger, {\n        cursor: /** @type {DraggableCursorParams} */(this.cursor).onHover\n      });\n    }\n  }\n\n  /**\n   * @param  {Number} [duration]\n   * @param  {Number} [gap]\n   * @param  {EasingParam} [ease]\n   * @return {this}\n   */\n  animateInView(duration, gap = 0, ease = eases.inOutQuad) {\n    this.stop();\n    this.updateBoundingValues();\n    const x = this.x;\n    const y = this.y;\n    const [ cpt, cpr, cpb, cpl ] = this.containerPadding;\n    const bt = this.scroll.y - this.targetBounds[0] + cpt + gap;\n    const br = this.scroll.x - this.targetBounds[1] - cpr - gap;\n    const bb = this.scroll.y - this.targetBounds[2] - cpb - gap;\n    const bl = this.scroll.x - this.targetBounds[3] + cpl + gap;\n    const ob = this.isOutOfBounds([bt, br, bb, bl], x, y);\n    if (ob) {\n      const [ disabledX, disabledY ] = this.disabled;\n      const destX = clamp(snap(x, this.snapX), bl, br);\n      const destY = clamp(snap(y, this.snapY), bt, bb);\n      const dur = isUnd(duration) ? 350 * globals.timeScale : duration;\n      if (!disabledX && (ob === 1 || ob === 3)) this.animate[this.xProp](destX, dur, ease);\n      if (!disabledY && (ob === 2 || ob === 3)) this.animate[this.yProp](destY, dur, ease);\n    }\n    return this;\n  }\n\n  /**\n   * @param {MouseEvent|TouchEvent} e\n   */\n  handleDown(e) {\n    const $eTarget = /** @type {HTMLElement} */(e.target);\n    if (this.grabbed || /** @type {HTMLInputElement}  */($eTarget).type === 'range') return;\n\n    e.stopPropagation();\n\n    this.grabbed = true;\n    this.released = false;\n    this.stop();\n    this.updateBoundingValues();\n    const touches = /** @type {TouchEvent} */(e).changedTouches;\n    const eventX = touches ? touches[0].clientX : /** @type {MouseEvent} */(e).clientX;\n    const eventY = touches ? touches[0].clientY : /** @type {MouseEvent} */(e).clientY;\n    const { x, y } = this.transforms.normalizePoint(eventX, eventY);\n    const [ ct, cr, cb, cl ] = this.containerBounds;\n    const cf = (1 - this.containerFriction) * this.dragSpeed;\n    const cx = this.x;\n    const cy = this.y;\n    this.coords[0] = this.coords[2] = !cf ? cx : cx > cr ? cr + (cx - cr) / cf : cx < cl ? cl + (cx - cl) / cf : cx;\n    this.coords[1] = this.coords[3] = !cf ? cy : cy > cb ? cb + (cy - cb) / cf : cy < ct ? ct + (cy - ct) / cf : cy;\n    this.pointer[0] = x;\n    this.pointer[1] = y;\n    this.pointer[2] = x;\n    this.pointer[3] = y;\n    this.pointer[4] = x;\n    this.pointer[5] = y;\n    this.pointer[6] = x;\n    this.pointer[7] = y;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.velocity = 0;\n    this.velocityStack[0] = 0;\n    this.velocityStack[1] = 0;\n    this.velocityStack[2] = 0;\n    this.velocityStackIndex = 0;\n    this.angle = 0;\n    if (this.targetStyles) {\n      this.targetStyles.revert();\n      this.targetStyles = null;\n    }\n    const z = /** @type {Number} */(getTargetValue(this.$target, 'zIndex', false));\n    zIndex = (z > zIndex ? z : zIndex) + 1;\n    this.targetStyles = setTargetValues(this.$target, { zIndex });\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n    if (this.cursorStyles) {\n      this.cursorStyles.revert();\n      this.cursorStyles = null;\n    }\n    if (this.isFinePointer && this.cursor) {\n      this.bodyStyles = setTargetValues(doc.body, {\n        cursor: /** @type {DraggableCursorParams} */(this.cursor).onGrab\n      });\n    }\n    this.scrollInView(100, 0, eases.out(3));\n    this.onGrab(this);\n\n    doc.addEventListener('touchmove', this);\n    doc.addEventListener('touchend', this);\n    doc.addEventListener('touchcancel', this);\n    doc.addEventListener('mousemove', this);\n    doc.addEventListener('mouseup', this);\n    doc.addEventListener('selectstart', this);\n  }\n\n  /**\n   * @param {MouseEvent|TouchEvent} e\n   */\n  handleMove(e) {\n    if (!this.grabbed) return;\n    const touches = /** @type {TouchEvent} */(e).changedTouches;\n    const eventX = touches ? touches[0].clientX : /** @type {MouseEvent} */(e).clientX;\n    const eventY = touches ? touches[0].clientY : /** @type {MouseEvent} */(e).clientY;\n    const { x, y } = this.transforms.normalizePoint(eventX, eventY);\n    const movedX = x - this.pointer[6];\n    const movedY = y - this.pointer[7];\n\n    let $parent = /** @type {HTMLElement} */(e.target);\n    let isAtTop = false;\n    let isAtBottom = false;\n    let canTouchScroll = false;\n\n    while (touches && $parent && $parent !== this.$trigger) {\n      const overflowY = getTargetValue($parent, 'overflow-y');\n      if (overflowY !== 'hidden' && overflowY !== 'visible') {\n        const { scrollTop, scrollHeight, clientHeight } = $parent;\n        if (scrollHeight > clientHeight) {\n          canTouchScroll = true;\n          isAtTop = scrollTop <= 3;\n          isAtBottom = scrollTop >= (scrollHeight - clientHeight) - 3;\n          break;\n        }\n      }\n      $parent = /** @type {HTMLElement} */($parent.parentNode);\n    }\n\n    if (canTouchScroll && ((!isAtTop && !isAtBottom) || (isAtTop && movedY < 0) || (isAtBottom && movedY > 0))) {\n\n      this.pointer[0] = x;\n      this.pointer[1] = y;\n      this.pointer[2] = x;\n      this.pointer[3] = y;\n      this.pointer[4] = x;\n      this.pointer[5] = y;\n      this.pointer[6] = x;\n      this.pointer[7] = y;\n\n    } else {\n\n      preventDefault(e);\n\n      // Needed to prevents click on handleUp\n      if (!this.triggerStyles) this.triggerStyles = setTargetValues(this.$trigger, { pointerEvents: 'none' });\n      // Needed to prevent page scroll while dragging on touch devvice\n      this.$trigger.addEventListener('touchstart', preventDefault, { passive: false });\n      this.$trigger.addEventListener('touchmove', preventDefault, { passive: false });\n      this.$trigger.addEventListener('touchend', preventDefault);\n\n\n      if ((!this.disabled[0] && abs(movedX) > 3) || (!this.disabled[1] && abs(movedY) > 3)) {\n\n        this.updateTicker.resume();\n        this.pointer[2] = this.pointer[0];\n        this.pointer[3] = this.pointer[1];\n        this.pointer[0] = x;\n        this.pointer[1] = y;\n        this.dragged = true;\n        this.released = false;\n        this.onDrag(this);\n      }\n    }\n  }\n\n  handleUp() {\n\n    if (!this.grabbed) return;\n\n    this.updateTicker.pause();\n\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n\n    if (this.bodyStyles) {\n      this.bodyStyles.revert();\n      this.bodyStyles = null;\n    }\n\n    const [ disabledX, disabledY ] = this.disabled;\n    const [ px1, py1, px2, py2, px3, py3 ] = this.pointer;\n    const [ ct, cr, cb, cl ] = this.containerBounds;\n    const [ sx, sy ] = this.snapped;\n    const springX = this.releaseXSpring;\n    const springY = this.releaseYSpring;\n    const releaseEase = this.releaseEase;\n    const hasReleaseSpring = this.hasReleaseSpring;\n    const overshootCoords = this.overshootCoords;\n    const cx = this.x;\n    const cy = this.y;\n    const pv = this.computeVelocity(px1 - px3, py1 - py3);\n    const pa = this.angle = atan2(py1 - py2, px1 - px2);\n    const ds = pv * 150;\n    const cf = (1 - this.releaseContainerFriction) * this.dragSpeed;\n    const nx = cx + (cos(pa) * ds);\n    const ny = cy + (sin(pa) * ds);\n    const bx = nx > cr ? cr + (nx - cr) * cf : nx < cl ? cl + (nx - cl) * cf : nx;\n    const by = ny > cb ? cb + (ny - cb) * cf : ny < ct ? ct + (ny - ct) * cf : ny;\n    const dx = this.destX = clamp(round(snap(bx, this.snapX), 5), cl, cr);\n    const dy = this.destY = clamp(round(snap(by, this.snapY), 5), ct, cb);\n    const ob = this.isOutOfBounds(this.containerBounds, nx, ny);\n\n    let durationX = 0;\n    let durationY = 0;\n    let easeX = releaseEase;\n    let easeY = releaseEase;\n    let longestReleaseDuration = 0;\n\n    overshootCoords.x = cx;\n    overshootCoords.y = cy;\n\n    if (!disabledX) {\n      const directionX = dx === cr ? cx > cr ? -1 : 1 : cx < cl ? -1 : 1;\n      const distanceX = round(cx - dx, 0);\n      springX.velocity = disabledY && hasReleaseSpring ? distanceX ? (ds * directionX) / abs(distanceX) : 0 : pv;\n      const { ease, duration, restDuration } = springX;\n      durationX = cx === dx ? 0 : hasReleaseSpring ? duration : duration - (restDuration * globals.timeScale);\n      if (hasReleaseSpring) easeX = ease;\n      if (durationX > longestReleaseDuration) longestReleaseDuration = durationX;\n    }\n\n    if (!disabledY) {\n      const directionY = dy === cb ? cy > cb ? -1 : 1 : cy < ct ? -1 : 1;\n      const distanceY = round(cy - dy, 0);\n      springY.velocity = disabledX && hasReleaseSpring ? distanceY ? (ds * directionY) / abs(distanceY) : 0 : pv;\n      const { ease, duration, restDuration } = springY;\n      durationY = cy === dy ? 0 : hasReleaseSpring ? duration : duration - (restDuration * globals.timeScale);\n      if (hasReleaseSpring) easeY = ease;\n      if (durationY > longestReleaseDuration) longestReleaseDuration = durationY;\n    }\n\n    if (!hasReleaseSpring && ob && cf && (durationX || durationY)) {\n\n        const composition = compositionTypes.blend;\n\n        new JSAnimation(overshootCoords, {\n          x: { to: bx, duration: durationX * .65 },\n          y: { to: by, duration: durationY * .65 },\n          ease: releaseEase,\n          composition,\n        }).init();\n\n        new JSAnimation(overshootCoords, {\n          x: { to: dx, duration: durationX },\n          y: { to: dy, duration: durationY },\n          ease: releaseEase,\n          composition,\n        }).init();\n\n        this.overshootXTicker.stretch(durationX).restart();\n        this.overshootYTicker.stretch(durationY).restart();\n\n    } else {\n\n      if (!disabledX) this.animate[this.xProp](dx, durationX, easeX);\n      if (!disabledY) this.animate[this.yProp](dy, durationY, easeY);\n\n    }\n\n    this.scrollInView(longestReleaseDuration, this.scrollThreshold, releaseEase);\n\n    let hasSnapped = false;\n\n    if (dx !== sx) {\n      this.snapped[0] = dx;\n      if (this.snapX) hasSnapped = true;\n    }\n\n    if (dy !== sy && this.snapY) {\n      this.snapped[1] = dy;\n      if (this.snapY) hasSnapped = true;\n    }\n\n    if (hasSnapped) this.onSnap(this);\n\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = true;\n    this.released = true;\n\n    // It's important to trigger the callback after the release animations to be able to cancel them\n    this.onRelease(this);\n\n    this.$trigger.removeEventListener('touchstart', preventDefault);\n    this.$trigger.removeEventListener('touchmove', preventDefault);\n    this.$trigger.removeEventListener('touchend', preventDefault);\n\n    doc.removeEventListener('touchmove', this);\n    doc.removeEventListener('touchend', this);\n    doc.removeEventListener('touchcancel', this);\n    doc.removeEventListener('mousemove', this);\n    doc.removeEventListener('mouseup', this);\n    doc.removeEventListener('selectstart', this);\n  }\n\n  reset() {\n    this.stop();\n    this.resizeTicker.pause();\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.setX(0, true);\n    this.setY(0, true);\n    this.coords[0] = 0;\n    this.coords[1] = 0;\n    this.pointer[0] = 0;\n    this.pointer[1] = 0;\n    this.pointer[2] = 0;\n    this.pointer[3] = 0;\n    this.pointer[4] = 0;\n    this.pointer[5] = 0;\n    this.pointer[6] = 0;\n    this.pointer[7] = 0;\n    this.velocity = 0;\n    this.velocityStack[0] = 0;\n    this.velocityStack[1] = 0;\n    this.velocityStack[2] = 0;\n    this.velocityStackIndex = 0;\n    this.angle = 0;\n    return this;\n  }\n\n  enable() {\n    if (!this.enabled) {\n      this.enabled = true;\n      this.$target.classList.remove('is-disabled');\n      this.touchActionStyles = setTargetValues(this.$trigger, {\n        touchAction: this.disabled[0] ? 'pan-x' : this.disabled[1] ? 'pan-y' : 'none'\n      });\n      this.$trigger.addEventListener('touchstart', this, { passive: true });\n      this.$trigger.addEventListener('mousedown', this, { passive: true });\n      this.$trigger.addEventListener('mouseenter', this);\n    }\n    return this;\n  }\n\n  disable() {\n    this.enabled = false;\n    this.grabbed = false;\n    this.dragged = false;\n    this.updated = false;\n    this.released = false;\n    this.canScroll = false;\n    this.touchActionStyles.revert();\n    if (this.cursorStyles) {\n      this.cursorStyles.revert();\n      this.cursorStyles = null;\n    }\n    if (this.triggerStyles) {\n      this.triggerStyles.revert();\n      this.triggerStyles = null;\n    }\n    if (this.bodyStyles) {\n      this.bodyStyles.revert();\n      this.bodyStyles = null;\n    }\n    if (this.targetStyles) {\n      this.targetStyles.revert();\n      this.targetStyles = null;\n    }\n    this.stop();\n    this.$target.classList.add('is-disabled');\n    this.$trigger.removeEventListener('touchstart', this);\n    this.$trigger.removeEventListener('mousedown', this);\n    this.$trigger.removeEventListener('mouseenter', this);\n    doc.removeEventListener('touchmove', this);\n    doc.removeEventListener('touchend', this);\n    doc.removeEventListener('touchcancel', this);\n    doc.removeEventListener('mousemove', this);\n    doc.removeEventListener('mouseup', this);\n    doc.removeEventListener('selectstart', this);\n    return this;\n  }\n\n  revert() {\n    this.reset();\n    this.disable();\n    this.$target.classList.remove('is-disabled');\n    this.updateTicker.revert();\n    this.overshootXTicker.revert();\n    this.overshootYTicker.revert();\n    this.resizeTicker.revert();\n    this.animate.revert();\n    return this;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'mousedown':\n        this.handleDown(/** @type {MouseEvent} */(e));\n        break;\n      case 'touchstart':\n        this.handleDown(/** @type {TouchEvent} */(e));\n        break;\n      case 'mousemove':\n        this.handleMove(/** @type {MouseEvent} */(e));\n        break;\n      case 'touchmove':\n        this.handleMove(/** @type {TouchEvent} */(e));\n        break;\n      case 'mouseup':\n        this.handleUp();\n        break;\n      case 'touchend':\n        this.handleUp();\n        break;\n      case 'touchcancel':\n        this.handleUp();\n        break;\n      case 'mouseenter':\n        this.handleHover();\n        break;\n      case 'selectstart':\n        preventDefault(e);\n        break;\n    }\n  }\n}\n\n/**\n * @param {TargetsParam} target\n * @param {DraggableParams} [parameters]\n * @return {Draggable}\n */\nconst createDraggable = (target, parameters) => new Draggable(target, parameters);\n\n\n\n\n/**\n * @typedef {Object} ReactRef\n * @property {HTMLElement|SVGElement|null} [current]\n */\n\n/**\n * @typedef {Object} AngularRef\n * @property {HTMLElement|SVGElement} [nativeElement]\n */\n\n/**\n * @typedef {Object} ScopeParams\n * @property {DOMTargetSelector|ReactRef|AngularRef} [root]\n * @property {DefaultsParams} [defaults]\n * @property {Record<String, String>} [mediaQueries]\n */\n\n/**\n * @callback ScopeCleanup\n * @param {Scope} [scope]\n */\n\n/**\n * @callback ScopeConstructor\n * @param {Scope} [scope]\n * @return {ScopeCleanup|void}\n */\n\n/**\n * @callback ScopeMethod\n * @param {...*} args\n * @return {ScopeCleanup|void}\n */\n\nclass Scope {\n  /** @param {ScopeParams} [parameters] */\n  constructor(parameters = {}) {\n    if (globals.scope) globals.scope.revertibles.push(this);\n    const rootParam = parameters.root;\n    /** @type {Document|DOMTarget} */\n    let root = doc;\n    if (rootParam) {\n      root = /** @type {ReactRef} */(rootParam).current ||\n             /** @type {AngularRef} */(rootParam).nativeElement ||\n             parseTargets(/** @type {DOMTargetSelector} */(rootParam))[0] ||\n             doc;\n    }\n    const scopeDefaults = parameters.defaults;\n    const globalDefault = globals.defaults;\n    const mediaQueries = parameters.mediaQueries;\n    /** @type {DefaultsParams} */\n    this.defaults = scopeDefaults ? mergeObjects(scopeDefaults, globalDefault) : globalDefault;\n    /** @type {Document|DOMTarget} */\n    this.root = root;\n    /** @type {Array<ScopeConstructor>} */\n    this.constructors = [];\n    /** @type {Array<Function>} */\n    this.revertConstructors = [];\n    /** @type {Array<Revertible>} */\n    this.revertibles = [];\n    /** @type {Record<String, Function>} */\n    this.methods = {};\n    /** @type {Record<String, Boolean>} */\n    this.matches = {};\n    /** @type {Record<String, MediaQueryList>} */\n    this.mediaQueryLists = {};\n    /** @type {Record<String, any>} */\n    this.data = {};\n    if (mediaQueries) {\n      for (let mq in mediaQueries) {\n        const _mq = win.matchMedia(mediaQueries[mq]);\n        this.mediaQueryLists[mq] = _mq;\n        _mq.addEventListener('change', this);\n      }\n    }\n  }\n\n  /**\n   * @callback ScoppedCallback\n   * @param {this} scope\n   * @return {any}\n   *\n   * @param {ScoppedCallback} cb\n   * @return {this}\n   */\n  execute(cb) {\n    let activeScope = globals.scope;\n    let activeRoot = globals.root;\n    let activeDefaults = globals.defaults;\n    globals.scope = this;\n    globals.root = this.root;\n    globals.defaults = this.defaults;\n    const mqs = this.mediaQueryLists;\n    for (let mq in mqs) this.matches[mq] = mqs[mq].matches;\n    const returned = cb(this);\n    globals.scope = activeScope;\n    globals.root = activeRoot;\n    globals.defaults = activeDefaults;\n    return returned;\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    this.execute(() => {\n      let i = this.revertibles.length;\n      let y = this.revertConstructors.length;\n      while (i--) this.revertibles[i].revert();\n      while (y--) this.revertConstructors[y](this);\n      this.revertibles.length = 0;\n      this.revertConstructors.length = 0;\n      this.constructors.forEach( constructor => {\n        const revertConstructor = constructor(this);\n        if (revertConstructor) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * @callback contructorCallback\n   * @param {this} self\n   *\n   * @overload\n   * @param {String} a1\n   * @param {ScopeMethod} a2\n   * @return {this}\n   *\n   * @overload\n   * @param {contructorCallback} a1\n   * @return {this}\n   *\n   * @param {String|contructorCallback} a1\n   * @param {ScopeMethod} [a2]\n   */\n  add(a1, a2) {\n    if (isFnc(a1)) {\n      const constructor = /** @type {contructorCallback} */(a1);\n      this.constructors.push(constructor);\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (revertConstructor) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    } else {\n      this.methods[/** @type {String} */(a1)] = (/** @type {any} */...args) => this.execute(() => a2(...args));\n    }\n    return this;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'change':\n        this.refresh();\n        break;\n    }\n  }\n\n  revert() {\n    const revertibles = this.revertibles;\n    const revertConstructors = this.revertConstructors;\n    const mqs = this.mediaQueryLists;\n    let i = revertibles.length;\n    let y = revertConstructors.length;\n    while (i--) revertibles[i].revert();\n    while (y--) revertConstructors[y](this);\n    for (let mq in mqs) mqs[mq].removeEventListener('change', this);\n    revertibles.length = 0;\n    revertConstructors.length = 0;\n    this.constructors.length = 0;\n    this.matches = {};\n    this.methods = {};\n    this.mediaQueryLists = {};\n    this.data = {};\n  }\n}\n\n/**\n * @param {ScopeParams} [params]\n * @return {Scope}\n */\nconst createScope = params => new Scope(params);\n\n/**\n * @typedef {String|Number} ScrollThresholdValue\n */\n\n/**\n * @return {Number}\n */\nconst getMaxViewHeight = () => {\n  const $el = document.createElement('div');\n  doc.body.appendChild($el);\n  $el.style.height = '100lvh';\n  const height = $el.offsetHeight;\n  doc.body.removeChild($el);\n  return height;\n};\n\n/**\n * @template {ScrollThresholdValue|String|Number|Boolean|Function|Object} T\n * @param {T | ((observer: ScrollObserver) => T)} value\n * @param {ScrollObserver} scroller\n * @return {T}\n */\nconst parseScrollObserverFunctionParameter = (value, scroller) => value && isFnc(value) ? /** @type {Function} */(value)(scroller) : value;\n\nconst scrollContainers = new Map();\n\nclass ScrollContainer {\n  /**\n   * @param {HTMLElement} $el\n   */\n  constructor($el) {\n    /** @type {HTMLElement} */\n    this.element = $el;\n    /** @type {Boolean} */\n    this.useWin = this.element === doc.body;\n    /** @type {Number} */\n    this.winWidth = 0;\n    /** @type {Number} */\n    this.winHeight = 0;\n    /** @type {Number} */\n    this.width = 0;\n    /** @type {Number} */\n    this.height = 0;\n    /** @type {Number} */\n    this.left = 0;\n    /** @type {Number} */\n    this.top = 0;\n    /** @type {Number} */\n    this.zIndex = 0;\n    /** @type {Number} */\n    this.scrollX = 0;\n    /** @type {Number} */\n    this.scrollY = 0;\n    /** @type {Number} */\n    this.prevScrollX = 0;\n    /** @type {Number} */\n    this.prevScrollY = 0;\n    /** @type {Number} */\n    this.scrollWidth = 0;\n    /** @type {Number} */\n    this.scrollHeight = 0;\n    /** @type {Number} */\n    this.velocity = 0;\n    /** @type {Boolean} */\n    this.backwardX = false;\n    /** @type {Boolean} */\n    this.backwardY = false;\n    /** @type {Timer} */\n    this.scrollTicker = new Timer({\n      autoplay: false,\n      onBegin: () => this.dataTimer.resume(),\n      onUpdate: () => {\n        const backwards = this.backwardX || this.backwardY;\n        forEachChildren(this, (/** @type {ScrollObserver} */child) => child.handleScroll(), backwards);\n      },\n      onComplete: () => this.dataTimer.pause()\n    }).init();\n    /** @type {Timer} */\n    this.dataTimer = new Timer({\n      autoplay: false,\n      frameRate: 30,\n      onUpdate: self => {\n        const dt = self.deltaTime;\n        const px = this.prevScrollX;\n        const py = this.prevScrollY;\n        const nx = this.scrollX;\n        const ny = this.scrollY;\n        const dx = px - nx;\n        const dy = py - ny;\n        this.prevScrollX = nx;\n        this.prevScrollY = ny;\n        if (dx) this.backwardX = px > nx;\n        if (dy) this.backwardY = py > ny;\n        this.velocity = round(dt > 0 ? Math.sqrt(dx * dx + dy * dy) / dt : 0, 5);\n      }\n    }).init();\n    /** @type {Timer} */\n    this.resizeTicker = new Timer({\n      autoplay: false,\n      duration: 250 * globals.timeScale,\n      onComplete: () => {\n        this.updateWindowBounds();\n        this.refreshScrollObservers();\n        this.handleScroll();\n      }\n    }).init();\n    /** @type {Timer} */\n    this.wakeTicker = new Timer({\n      autoplay: false,\n      duration: 500 * globals.timeScale,\n      onBegin: () => {\n        this.scrollTicker.resume();\n      },\n      onComplete: () => {\n        this.scrollTicker.pause();\n      }\n    }).init();\n    /** @type {ScrollObserver} */\n    this._head = null;\n    /** @type {ScrollObserver} */\n    this._tail = null;\n    this.updateScrollCoords();\n    this.updateWindowBounds();\n    this.updateBounds();\n    this.refreshScrollObservers();\n    this.handleScroll();\n    this.resizeObserver = new ResizeObserver(() => this.resizeTicker.restart());\n    this.resizeObserver.observe(this.element);\n    (this.useWin ? win : this.element).addEventListener('scroll', this, false);\n  }\n\n  updateScrollCoords() {\n    const useWin = this.useWin;\n    const $el = this.element;\n    this.scrollX = round(useWin ? win.scrollX : $el.scrollLeft, 0);\n    this.scrollY = round(useWin ? win.scrollY : $el.scrollTop, 0);\n  }\n\n  updateWindowBounds() {\n    this.winWidth = win.innerWidth;\n    this.winHeight = getMaxViewHeight();\n  }\n\n  updateBounds() {\n    const style = getComputedStyle(this.element);\n    const $el = this.element;\n    this.scrollWidth = $el.scrollWidth + parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    this.scrollHeight = $el.scrollHeight + parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    this.updateWindowBounds();\n    let width, height;\n    if (this.useWin) {\n      width = this.winWidth;\n      height = this.winHeight;\n    } else {\n      const elRect = $el.getBoundingClientRect();\n      width = elRect.width;\n      height = elRect.height;\n      this.top = elRect.top;\n      this.left = elRect.left;\n    }\n    this.width = width;\n    this.height = height;\n  }\n\n  refreshScrollObservers() {\n    forEachChildren(this, (/** @type {ScrollObserver} */child) => {\n      if (child._debug) {\n        child.removeDebug();\n      }\n    });\n    this.updateBounds();\n    forEachChildren(this, (/** @type {ScrollObserver} */child) => {\n      child.refresh();\n      if (child._debug) {\n        child.debug();\n      }\n    });\n  }\n\n  refresh() {\n    this.updateWindowBounds();\n    this.updateBounds();\n    this.refreshScrollObservers();\n    this.handleScroll();\n  }\n\n  handleScroll() {\n    this.updateScrollCoords();\n    this.wakeTicker.restart();\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'scroll':\n        this.handleScroll();\n        break;\n    }\n  }\n\n  revert() {\n    this.scrollTicker.cancel();\n    this.dataTimer.cancel();\n    this.resizeTicker.cancel();\n    this.wakeTicker.cancel();\n    this.resizeObserver.unobserve(this.element);\n    (this.useWin ? win : this.element).removeEventListener('scroll', this);\n    scrollContainers.delete(this.element);\n  }\n}\n\n/**\n * @param {TargetsParam} target\n * @return {ScrollContainer}\n */\nconst registerAndGetScrollContainer = target => {\n  const $el = /** @type {HTMLElement} */(target ? parseTargets(target)[0] || doc.body : doc.body);\n  let scrollContainer = scrollContainers.get($el);\n  if (!scrollContainer) {\n    scrollContainer = new ScrollContainer($el);\n    scrollContainers.set($el, scrollContainer);\n  }\n  return scrollContainer;\n};\n\n/**\n * @param {HTMLElement} $el\n * @param {Number|string} v\n * @param {Number} size\n * @param {Number} [under]\n * @param {Number} [over]\n * @return {Number}\n */\nconst convertValueToPx = ($el, v, size, under, over) => {\n  const clampMin = v === 'min';\n  const clampMax = v === 'max';\n  const value = v === 'top' || v === 'left' || v === 'start' || clampMin ? 0 :\n                v === 'bottom' || v === 'right' || v === 'end' || clampMax ? '100%' :\n                v === 'center' ? '50%' :\n                v;\n  const { n, u } = decomposeRawValue(value, decomposedOriginalValue);\n  let px = n;\n  if (u === '%') {\n    px = (n / 100) * size;\n  } else if (u) {\n    px = convertValueUnit($el, decomposedOriginalValue, 'px', true).n;\n  }\n  if (clampMax && under < 0) px += under;\n  if (clampMin && over > 0) px += over;\n  return px;\n};\n\n/**\n * @param {HTMLElement} $el\n * @param {ScrollThresholdValue} v\n * @param {Number} size\n * @param {Number} [under]\n * @param {Number} [over]\n * @return {Number}\n */\nconst parseBoundValue = ($el, v, size, under, over) => {\n  /** @type {Number} */\n  let value;\n  if (isStr(v)) {\n    const matchedOperator = relativeValuesExecRgx.exec(/** @type {String} */(v));\n    if (matchedOperator) {\n      const splitter = matchedOperator[0];\n      const operator = splitter[0];\n      const splitted = /** @type {String} */(v).split(splitter);\n      const clampMin = splitted[0] === 'min';\n      const clampMax = splitted[0] === 'max';\n      const valueAPx = convertValueToPx($el, splitted[0], size, under, over);\n      const valueBPx = convertValueToPx($el, splitted[1], size, under, over);\n      if (clampMin) {\n        const min = getRelativeValue(convertValueToPx($el, 'min', size), valueBPx, operator);\n        value = min < valueAPx ? valueAPx : min;\n      } else if (clampMax) {\n        const max = getRelativeValue(convertValueToPx($el, 'max', size), valueBPx, operator);\n        value = max > valueAPx ? valueAPx : max;\n      } else {\n        value = getRelativeValue(valueAPx, valueBPx, operator);\n      }\n    } else {\n      value = convertValueToPx($el, v, size, under, over);\n    }\n  } else {\n    value = /** @type {Number} */(v);\n  }\n  return round(value, 0);\n};\n\n/**\n * @param {JSAnimation} linked\n * @return {HTMLElement}\n */\nconst getAnimationDomTarget = linked => {\n  let $linkedTarget;\n  const linkedTargets = linked.targets;\n  for (let i = 0, l = linkedTargets.length; i < l; i++) {\n    const target = linkedTargets[i];\n    if (target[isDomSymbol]) {\n      $linkedTarget = /** @type {HTMLElement} */(target);\n      break;\n    }\n  }\n  return $linkedTarget;\n};\n\nlet scrollerIndex = 0;\n\nconst debugColors = ['#FF4B4B','#FF971B','#FFC730','#F9F640','#7AFF5A','#18FF74','#17E09B','#3CFFEC','#05DBE9','#33B3F1','#638CF9','#C563FE','#FF4FCF','#F93F8A'];\n\n/**\n * @typedef {Object} ScrollThresholdParam\n * @property {ScrollThresholdValue} [target]\n * @property {ScrollThresholdValue} [container]\n */\n\n/**\n * @callback ScrollObserverAxisCallback\n * @param {ScrollObserver} self\n * @return {'x'|'y'}\n */\n\n/**\n * @callback ScrollThresholdCallback\n * @param {ScrollObserver} self\n * @return {ScrollThresholdValue|ScrollThresholdParam}\n */\n\n/**\n * @typedef {Object} ScrollObserverParams\n * @property {Number|String} [id]\n * @property {Boolean|Number|String|EasingParam} [sync]\n * @property {TargetsParam} [container]\n * @property {TargetsParam} [target]\n * @property {'x'|'y'|ScrollObserverAxisCallback|((observer: ScrollObserver) => 'x'|'y'|ScrollObserverAxisCallback)} [axis]\n * @property {ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback|((observer: ScrollObserver) => ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback)} [enter]\n * @property {ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback|((observer: ScrollObserver) => ScrollThresholdValue|ScrollThresholdParam|ScrollThresholdCallback)} [leave]\n * @property {Boolean|((observer: ScrollObserver) => Boolean)} [repeat]\n * @property {Boolean} [debug]\n * @property {Callback<ScrollObserver>} [onEnter]\n * @property {Callback<ScrollObserver>} [onLeave]\n * @property {Callback<ScrollObserver>} [onEnterForward]\n * @property {Callback<ScrollObserver>} [onLeaveForward]\n * @property {Callback<ScrollObserver>} [onEnterBackward]\n * @property {Callback<ScrollObserver>} [onLeaveBackward]\n * @property {Callback<ScrollObserver>} [onUpdate]\n * @property {Callback<ScrollObserver>} [onSyncComplete]\n */\n\nclass ScrollObserver {\n  /**\n   * @param {ScrollObserverParams} parameters\n   */\n  constructor(parameters = {}) {\n    if (globals.scope) globals.scope.revertibles.push(this);\n    const syncMode = setValue(parameters.sync, 'play pause');\n    const ease = syncMode ? parseEasings(/** @type {EasingParam} */(syncMode)) : null;\n    const isLinear = syncMode && (syncMode === 'linear' || syncMode === none);\n    const isEase = syncMode && !(ease === none && !isLinear);\n    const isSmooth = syncMode && (isNum(syncMode) || syncMode === true || isLinear);\n    const isMethods = syncMode && (isStr(syncMode) && !isEase && !isSmooth);\n    const syncMethods = isMethods ? /** @type {String} */(syncMode).split(' ').map(\n      (/** @type {String} */m) => () => {\n        const linked = this.linked;\n        return linked && linked[m] ? linked[m]() : null;\n      }\n    ) : null;\n    const biDirSync = isMethods && syncMethods.length > 2;\n    /** @type {Number} */\n    this.index = scrollerIndex++;\n    /** @type {String|Number} */\n    this.id = !isUnd(parameters.id) ? parameters.id : this.index;\n    /** @type {ScrollContainer} */\n    this.container = registerAndGetScrollContainer(parameters.container);\n    /** @type {HTMLElement} */\n    this.target = null;\n    /** @type {Tickable|WAAPIAnimation} */\n    this.linked = null;\n    /** @type {Boolean} */\n    this.repeat = null;\n    /** @type {Boolean} */\n    this.horizontal = null;\n    /** @type {ScrollThresholdParam|ScrollThresholdValue|ScrollThresholdCallback} */\n    this.enter = null;\n    /** @type {ScrollThresholdParam|ScrollThresholdValue|ScrollThresholdCallback} */\n    this.leave = null;\n    /** @type {Boolean} */\n    this.sync = isEase || isSmooth || !!syncMethods;\n    /** @type {EasingFunction} */\n    this.syncEase = isEase ? ease : null;\n    /** @type {Number} */\n    this.syncSmooth = isSmooth ? syncMode === true || isLinear ? 1 : /** @type {Number} */(syncMode) : null;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnter = syncMethods && !biDirSync && syncMethods[0] ? syncMethods[0] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeave = syncMethods && !biDirSync && syncMethods[1] ? syncMethods[1] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnterForward = syncMethods && biDirSync && syncMethods[0] ? syncMethods[0] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeaveForward = syncMethods && biDirSync && syncMethods[1] ? syncMethods[1] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncEnterBackward = syncMethods && biDirSync && syncMethods[2] ? syncMethods[2] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncLeaveBackward = syncMethods && biDirSync && syncMethods[3] ? syncMethods[3] : noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnter = parameters.onEnter || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeave = parameters.onLeave || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnterForward = parameters.onEnterForward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeaveForward = parameters.onLeaveForward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onEnterBackward = parameters.onEnterBackward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onLeaveBackward = parameters.onLeaveBackward || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onUpdate = parameters.onUpdate || noop;\n    /** @type {Callback<ScrollObserver>} */\n    this.onSyncComplete = parameters.onSyncComplete || noop;\n    /** @type {Boolean} */\n    this.reverted = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.began = false;\n    /** @type {Boolean} */\n    this.isInView = false;\n    /** @type {Boolean} */\n    this.forceEnter = false;\n    /** @type {Boolean} */\n    this.hasEntered = false;\n    /** @type {Array.<Number>} */\n    this.offsets = [];\n    /** @type {Number} */\n    this.offset = 0;\n    /** @type {Number} */\n    this.offsetStart = 0;\n    /** @type {Number} */\n    this.offsetEnd = 0;\n    /** @type {Number} */\n    this.distance = 0;\n    /** @type {Number} */\n    this.prevProgress = 0;\n    /** @type {Array} */\n    this.thresholds = ['start', 'end', 'end', 'start'];\n    /** @type {[Number, Number, Number, Number]} */\n    this.coords = [0, 0, 0, 0];\n    /** @type {JSAnimation} */\n    this.debugStyles = null;\n    /** @type {HTMLElement} */\n    this.$debug = null;\n    /** @type {ScrollObserverParams} */\n    this._params = parameters;\n    /** @type {Boolean} */\n    this._debug = setValue(parameters.debug, false);\n    /** @type {ScrollObserver} */\n    this._next = null;\n    /** @type {ScrollObserver} */\n    this._prev = null;\n    addChild(this.container, this);\n    // Wait for the next frame to add to the container in order to handle calls to link()\n    sync(() => {\n      if (this.reverted) return;\n      if (!this.target) {\n        const target = /** @type {HTMLElement} */(parseTargets(parameters.target)[0]);\n        this.target = target || doc.body;\n        this.refresh();\n      }\n      if (this._debug) this.debug();\n    });\n  }\n\n  /**\n   * @param {Tickable|WAAPIAnimation} linked\n   */\n  link(linked) {\n    if (linked) {\n      // Make sure to pause the linked object in case it's added later\n      linked.pause();\n      this.linked = linked;\n      // Try to use a target of the linked object if no target parameters specified\n      if (!this._params.target) {\n        /** @type {HTMLElement} */\n        let $linkedTarget;\n        if (!isUnd(/** @type {JSAnimation} */(linked).targets)) {\n          $linkedTarget = getAnimationDomTarget(/** @type {JSAnimation} */(linked));\n        } else {\n          forEachChildren(/** @type {Timeline} */(linked), (/** @type {JSAnimation} */child) => {\n            if (child.targets && !$linkedTarget) {\n              $linkedTarget = getAnimationDomTarget(/** @type {JSAnimation} */(child));\n            }\n          });\n        }\n        // Fallback to body if no target found\n        this.target = $linkedTarget || doc.body;\n        this.refresh();\n      }\n    }\n    return this;\n  }\n\n  get velocity() {\n    return this.container.velocity;\n  }\n\n  get backward() {\n    return this.horizontal ? this.container.backwardX : this.container.backwardY;\n  }\n\n  get scroll() {\n    return this.horizontal ? this.container.scrollX : this.container.scrollY;\n  }\n\n  get progress() {\n    const p = (this.scroll - this.offsetStart) / this.distance;\n    return p === Infinity || isNaN(p) ? 0 : round(clamp(p, 0, 1), 6);\n  }\n\n  refresh() {\n    this.reverted = false;\n    const params = this._params;\n    this.repeat = setValue(parseScrollObserverFunctionParameter(params.repeat, this), true);\n    this.horizontal = setValue(parseScrollObserverFunctionParameter(params.axis, this), 'y') === 'x';\n    this.enter = setValue(parseScrollObserverFunctionParameter(params.enter, this), 'end start');\n    this.leave = setValue(parseScrollObserverFunctionParameter(params.leave, this), 'start end');\n    this.updateBounds();\n    this.handleScroll();\n    return this;\n  }\n\n  removeDebug() {\n    if (this.$debug) {\n      this.$debug.parentNode.removeChild(this.$debug);\n      this.$debug = null;\n    }\n    if (this.debugStyles) {\n      this.debugStyles.revert();\n      this.$debug = null;\n    }\n    return this;\n  }\n\n  debug() {\n    this.removeDebug();\n    const container = this.container;\n    const isHori = this.horizontal;\n    const $existingDebug = container.element.querySelector(':scope > .animejs-onscroll-debug');\n    const $debug = doc.createElement('div');\n    const $thresholds = doc.createElement('div');\n    const $triggers = doc.createElement('div');\n    const color = debugColors[this.index % debugColors.length];\n    const useWin = container.useWin;\n    const containerWidth = useWin ? container.winWidth : container.width;\n    const containerHeight = useWin ? container.winHeight : container.height;\n    const scrollWidth = container.scrollWidth;\n    const scrollHeight = container.scrollHeight;\n    const size = this.container.width > 360 ? 320 : 260;\n    const offLeft = isHori ? 0 : 10;\n    const offTop = isHori ? 10 : 0;\n    const half = isHori ? 24 : size / 2;\n    const labelHeight = isHori ? half : 15;\n    const labelWidth = isHori ? 60 : half;\n    const labelSize = isHori ? labelWidth : labelHeight;\n    const repeat = isHori ? 'repeat-x' : 'repeat-y';\n    /**\n     * @param {Number} v\n     * @return {String}\n     */\n    const gradientOffset = v => isHori ? '0px '+(v)+'px' : (v)+'px'+' 2px';\n    /**\n     * @param {String} c\n     * @return {String}\n     */\n    const lineCSS = (c) => `linear-gradient(${isHori ? 90 : 0}deg, ${c} 2px, transparent 1px)`;\n    /**\n     * @param {String} p\n     * @param {Number} l\n     * @param {Number} t\n     * @param {Number} w\n     * @param {Number} h\n     * @return {String}\n     */\n    const baseCSS = (p, l, t, w, h) => `position:${p};left:${l}px;top:${t}px;width:${w}px;height:${h}px;`;\n    $debug.style.cssText = `${baseCSS('absolute', offLeft, offTop, isHori ? scrollWidth : size, isHori ? size : scrollHeight)}\n      pointer-events: none;\n      z-index: ${this.container.zIndex++};\n      display: flex;\n      flex-direction: ${isHori ? 'column' : 'row'};\n      filter: drop-shadow(0px 1px 0px rgba(0,0,0,.75));\n    `;\n    $thresholds.style.cssText = `${baseCSS('sticky', 0, 0, isHori ? containerWidth : half, isHori ? half : containerHeight)}`;\n    if (!$existingDebug) {\n      $thresholds.style.cssText += `background:\n        ${lineCSS('#FFFF')}${gradientOffset(half-10)} / ${isHori ? '100px 100px' : '100px 100px'} ${repeat},\n        ${lineCSS('#FFF8')}${gradientOffset(half-10)} / ${isHori ? '10px 10px' : '10px 10px'} ${repeat};\n      `;\n    }\n    $triggers.style.cssText = `${baseCSS('relative', 0, 0, isHori ? scrollWidth : half, isHori ? half : scrollHeight)}`;\n    if (!$existingDebug) {\n      $triggers.style.cssText += `background:\n        ${lineCSS('#FFFF')}${gradientOffset(0)} / ${isHori ? '100px 10px' : '10px 100px'} ${repeat},\n        ${lineCSS('#FFF8')}${gradientOffset(0)} / ${isHori ? '10px 0px' : '0px 10px'} ${repeat};\n      `;\n    }\n    const labels = [' enter: ', ' leave: '];\n    this.coords.forEach((v, i) => {\n      const isView = i > 1;\n      const value = (isView ? 0 : this.offset) + v;\n      const isTail = i % 2;\n      const isFirst = value < labelSize;\n      const isOver = value > (isView ? isHori ? containerWidth : containerHeight : isHori ? scrollWidth : scrollHeight) - labelSize;\n      const isFlip = (isView ? isTail && !isFirst : !isTail && !isFirst) || isOver;\n      const $label = doc.createElement('div');\n      const $text = doc.createElement('div');\n      const dirProp = isHori ? isFlip ? 'right' : 'left' : isFlip ? 'bottom' : 'top';\n      const flipOffset = isFlip ? (isHori ? labelWidth : labelHeight) + (!isView ? isHori ? -1 : -2 : isHori ? -1 : isOver ? 0 : -2) : !isView ? isHori ? 1 : 0 : isHori ? 1 : 0;\n      // $text.innerHTML = `${!isView ? '' : labels[isTail] + ' '}${this.id}: ${this.thresholds[i]} ${isView ? '' : labels[isTail]}`;\n      $text.innerHTML = `${this.id}${labels[isTail]}${this.thresholds[i]}`;\n      $label.style.cssText = `${baseCSS('absolute', 0, 0, labelWidth, labelHeight)}\n        display: flex;\n        flex-direction: ${isHori ? 'column' : 'row'};\n        justify-content: flex-${isView ? 'start' : 'end'};\n        align-items: flex-${isFlip ? 'end' : 'start'};\n        border-${dirProp}: 2px ${isTail ? 'solid' : 'solid'} ${color};\n      `;\n      $text.style.cssText = `\n        overflow: hidden;\n        max-width: ${(size / 2) - 10}px;\n        height: ${labelHeight};\n        margin-${isHori ? isFlip ? 'right' : 'left' : isFlip ? 'bottom' : 'top'}: -2px;\n        padding: 1px;\n        font-family: ui-monospace, monospace;\n        font-size: 10px;\n        letter-spacing: -.025em;\n        line-height: 9px;\n        font-weight: 600;\n        text-align: ${isHori && isFlip || !isHori && !isView ? 'right' : 'left'};\n        white-space: pre;\n        text-overflow: ellipsis;\n        color: ${isTail ? color : 'rgba(0,0,0,.75)'};\n        background-color: ${isTail ? 'rgba(0,0,0,.65)' : color};\n        border: 2px solid ${isTail ? color : 'transparent'};\n        border-${isHori ? isFlip ? 'top-left' : 'top-right' : isFlip ? 'top-left' : 'bottom-left'}-radius: 5px;\n        border-${isHori ? isFlip ? 'bottom-left' : 'bottom-right' : isFlip ? 'top-right' : 'bottom-right'}-radius: 5px;\n      `;\n      $label.appendChild($text);\n      let position = value - flipOffset + (isHori ? 1 : 0);\n      $label.style[isHori ? 'left' : 'top'] = `${position}px`;\n      // $label.style[isHori ? 'left' : 'top'] = value - flipOffset + (!isFlip && isFirst && !isView ? 1 : isFlip ? 0 : -2) + 'px';\n      (isView ? $thresholds : $triggers).appendChild($label);\n    });\n\n    $debug.appendChild($thresholds);\n    $debug.appendChild($triggers);\n    container.element.appendChild($debug);\n\n    if (!$existingDebug) $debug.classList.add('animejs-onscroll-debug');\n    this.$debug = $debug;\n    const containerPosition = getTargetValue(container.element, 'position');\n    if (containerPosition === 'static') {\n      this.debugStyles = setTargetValues(container.element, { position: 'relative '});\n    }\n\n  }\n\n  updateBounds() {\n    if (this._debug) {\n      this.removeDebug();\n    }\n    let stickys;\n    const $target = this.target;\n    const container = this.container;\n    const isHori = this.horizontal;\n    const linked = this.linked;\n    let linkedTime;\n    let $el = $target;\n    let offsetX = 0;\n    let offsetY = 0;\n    /** @type {Element} */\n    let $offsetParent = $el;\n    if (linked) {\n      linkedTime = linked.currentTime;\n      linked.seek(0, true);\n    }\n    const isContainerStatic = getTargetValue(container.element, 'position') === 'static' ? setTargetValues(container.element, { position: 'relative '}) : false;\n    while ($el && $el !== container.element && $el !== doc.body) {\n      const isSticky = getTargetValue($el, 'position') === 'sticky' ?\n                       setTargetValues($el, { position: 'static' }) :\n                       false;\n      if ($el === $offsetParent) {\n        offsetX += $el.offsetLeft || 0;\n        offsetY += $el.offsetTop || 0;\n        $offsetParent = $el.offsetParent;\n      }\n      $el = /** @type {HTMLElement} */($el.parentElement);\n      if (isSticky) {\n        if (!stickys) stickys = [];\n        stickys.push(isSticky);\n      }\n    }\n    if (isContainerStatic) isContainerStatic.revert();\n    const offset = isHori ? offsetX : offsetY;\n    const targetSize = isHori ? $target.offsetWidth : $target.offsetHeight;\n    const containerSize = isHori ? container.width : container.height;\n    const scrollSize = isHori ? container.scrollWidth : container.scrollHeight;\n    const maxScroll = scrollSize - containerSize;\n    const enter = this.enter;\n    const leave = this.leave;\n\n    /** @type {ScrollThresholdValue} */\n    let enterTarget = 'start';\n    /** @type {ScrollThresholdValue} */\n    let leaveTarget = 'end';\n    /** @type {ScrollThresholdValue} */\n    let enterContainer = 'end';\n    /** @type {ScrollThresholdValue} */\n    let leaveContainer = 'start';\n\n    if (isStr(enter)) {\n      const splitted = /** @type {String} */(enter).split(' ');\n      enterContainer = splitted[0];\n      enterTarget = splitted.length > 1 ? splitted[1] : enterTarget;\n    } else if (isObj(enter)) {\n      const e = /** @type {ScrollThresholdParam} */(enter);\n      if (!isUnd(e.container)) enterContainer = e.container;\n      if (!isUnd(e.target)) enterTarget = e.target;\n    } else if (isNum(enter)) {\n      enterContainer = /** @type {Number} */(enter);\n    }\n\n    if (isStr(leave)) {\n      const splitted = /** @type {String} */(leave).split(' ');\n      leaveContainer = splitted[0];\n      leaveTarget = splitted.length > 1 ? splitted[1] : leaveTarget;\n    } else if (isObj(leave)) {\n      const t = /** @type {ScrollThresholdParam} */(leave);\n      if (!isUnd(t.container)) leaveContainer = t.container;\n      if (!isUnd(t.target)) leaveTarget = t.target;\n    } else if (isNum(leave)) {\n      leaveContainer = /** @type {Number} */(leave);\n    }\n\n    const parsedEnterTarget = parseBoundValue($target, enterTarget, targetSize);\n    const parsedLeaveTarget = parseBoundValue($target, leaveTarget, targetSize);\n    const under = (parsedEnterTarget + offset) - containerSize;\n    const over = (parsedLeaveTarget + offset) - maxScroll;\n    const parsedEnterContainer = parseBoundValue($target, enterContainer, containerSize, under, over);\n    const parsedLeaveContainer = parseBoundValue($target, leaveContainer, containerSize, under, over);\n    const offsetStart = parsedEnterTarget + offset - parsedEnterContainer;\n    const offsetEnd = parsedLeaveTarget + offset - parsedLeaveContainer;\n    const scrollDelta = offsetEnd - offsetStart;\n    this.offsets[0] = offsetX;\n    this.offsets[1] = offsetY;\n    this.offset = offset;\n    this.offsetStart = offsetStart;\n    this.offsetEnd = offsetEnd;\n    this.distance = scrollDelta <= 0 ? 0 : scrollDelta;\n    this.thresholds = [enterTarget, leaveTarget, enterContainer, leaveContainer];\n    this.coords = [parsedEnterTarget, parsedLeaveTarget, parsedEnterContainer, parsedLeaveContainer];\n    if (stickys) {\n      stickys.forEach(sticky => sticky.revert());\n    }\n    if (linked) {\n      linked.seek(linkedTime, true);\n    }\n    if (this._debug) {\n      this.debug();\n    }\n  }\n\n  handleScroll() {\n    const linked = this.linked;\n    const sync = this.sync;\n    const syncEase = this.syncEase;\n    const syncSmooth = this.syncSmooth;\n    const shouldSeek = linked && (syncEase || syncSmooth);\n    const isHori = this.horizontal;\n    const container = this.container;\n    const scroll = this.scroll;\n    const isBefore = scroll <= this.offsetStart;\n    const isAfter = scroll >= this.offsetEnd;\n    const isInView = !isBefore && !isAfter;\n    const isOnTheEdge = scroll === this.offsetStart || scroll === this.offsetEnd;\n    const forceEnter = !this.hasEntered && isOnTheEdge;\n    const $debug = this._debug && this.$debug;\n    let hasUpdated = false;\n    let syncCompleted = false;\n    let p = this.progress;\n\n    if (isBefore && this.began) {\n      this.began = false;\n    }\n\n    if (p > 0 && !this.began) {\n      this.began = true;\n    }\n\n    if (shouldSeek) {\n      const lp = linked.progress;\n      if (syncSmooth && isNum(syncSmooth)) {\n        if (/** @type {Number} */(syncSmooth) < 1) {\n          const step = 0.0001;\n          const snap = lp < p && p === 1 ? step : lp > p && !p ? -1e-4 : 0;\n          p = round(lerp(lp, p, interpolate(.01, .2, /** @type {Number} */(syncSmooth)), false) + snap, 6);\n        }\n      } else if (syncEase) {\n        p = syncEase(p);\n      }\n      hasUpdated = p !== this.prevProgress;\n      syncCompleted = lp === 1;\n      if (hasUpdated && !syncCompleted && (syncSmooth && lp)) {\n        container.wakeTicker.restart();\n      }\n    }\n\n    if ($debug) {\n      const sticky = isHori ? container.scrollY : container.scrollX;\n      $debug.style[isHori ? 'top' : 'left'] = sticky + 10 + 'px';\n    }\n\n    // Trigger enter callbacks if already in view or when entering the view\n    if ((isInView && !this.isInView) || (forceEnter && !this.forceEnter && !this.hasEntered)) {\n      if (isInView) this.isInView = true;\n      if (!this.forceEnter || !this.hasEntered) {\n        if ($debug && isInView) $debug.style.zIndex = `${this.container.zIndex++}`;\n        this.onSyncEnter(this);\n        this.onEnter(this);\n        if (this.backward) {\n          this.onSyncEnterBackward(this);\n          this.onEnterBackward(this);\n        } else {\n          this.onSyncEnterForward(this);\n          this.onEnterForward(this);\n        }\n        this.hasEntered = true;\n        if (forceEnter) this.forceEnter = true;\n      } else if (isInView) {\n        this.forceEnter = false;\n      }\n    }\n\n    if (isInView || !isInView && this.isInView) {\n      hasUpdated = true;\n    }\n\n    if (hasUpdated) {\n      if (shouldSeek) linked.seek(linked.duration * p);\n      this.onUpdate(this);\n    }\n\n    if (!isInView && this.isInView) {\n      this.isInView = false;\n      this.onSyncLeave(this);\n      this.onLeave(this);\n      if (this.backward) {\n        this.onSyncLeaveBackward(this);\n        this.onLeaveBackward(this);\n      } else {\n        this.onSyncLeaveForward(this);\n        this.onLeaveForward(this);\n      }\n      if (sync && !syncSmooth) {\n        syncCompleted = true;\n      }\n    }\n\n    if (p >= 1 && this.began && !this.completed && (sync && syncCompleted || !sync)) {\n      if (sync) {\n        this.onSyncComplete(this);\n      }\n      this.completed = true;\n      if ((!this.repeat && !linked) || (!this.repeat && linked && linked.completed)) {\n        this.revert();\n      }\n    }\n\n    if (p < 1 && this.completed) {\n      this.completed = false;\n    }\n\n    this.prevProgress = p;\n  }\n\n  revert() {\n    if (this.reverted) return;\n    const container = this.container;\n    removeChild(container, this);\n    if (!container._head) {\n      container.revert();\n    }\n    if (this._debug) {\n      this.removeDebug();\n    }\n    this.reverted = true;\n    return this;\n  }\n\n}\n\n/**\n * @param {ScrollObserverParams} [parameters={}]\n * @return {ScrollObserver}\n */\nconst onScroll = (parameters = {}) => new ScrollObserver(parameters);\n\n\n\n\n/**\n * @typedef  {Object} StaggerParameters\n * @property {Number|String} [start]\n * @property {Number|'first'|'center'|'last'} [from]\n * @property {Boolean} [reversed]\n * @property {Array.<Number>} [grid]\n * @property {('x'|'y')} [axis]\n * @property {EasingParam} [ease]\n * @property {TweenModifier} [modifier]\n */\n\n/**\n * @callback StaggerFunction\n * @param {Target} [target]\n * @param {Number} [index]\n * @param {Number} [length]\n * @param {Timeline} [tl]\n * @return {Number|String}\n */\n\n/**\n * @param  {Number|String|[Number|String,Number|String]} val\n * @param  {StaggerParameters} params\n * @return {StaggerFunction}\n */\nconst stagger = (val, params = {}) => {\n  let values = [];\n  let maxValue = 0;\n  const from = params.from;\n  const reversed = params.reversed;\n  const ease = params.ease;\n  const hasEasing = !isUnd(ease);\n  const hasSpring = hasEasing && !isUnd(/** @type {Spring} */(ease).ease);\n  const staggerEase = hasSpring ? /** @type {Spring} */(ease).ease : hasEasing ? parseEasings(ease) : null;\n  const grid = params.grid;\n  const axis = params.axis;\n  const fromFirst = isUnd(from) || from === 0 || from === 'first';\n  const fromCenter = from === 'center';\n  const fromLast = from === 'last';\n  const isRange = isArr(val);\n  const val1 = isRange ? parseNumber(val[0]) : parseNumber(val);\n  const val2 = isRange ? parseNumber(val[1]) : 0;\n  const unitMatch = unitsExecRgx.exec((isRange ? val[1] : val) + emptyString);\n  const start = params.start || 0 + (isRange ? val1 : 0);\n  let fromIndex = fromFirst ? 0 : isNum(from) ? from : 0;\n  return (_, i, t, tl) => {\n    if (fromCenter) fromIndex = (t - 1) / 2;\n    if (fromLast) fromIndex = t - 1;\n    if (!values.length) {\n      for (let index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(abs(fromIndex - index));\n        } else {\n          const fromX = !fromCenter ? fromIndex % grid[0] : (grid[0] - 1) / 2;\n          const fromY = !fromCenter ? floor(fromIndex / grid[0]) : (grid[1] - 1) / 2;\n          const toX = index % grid[0];\n          const toY = floor(index / grid[0]);\n          const distanceX = fromX - toX;\n          const distanceY = fromY - toY;\n          let value = sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') value = -distanceX;\n          if (axis === 'y') value = -distanceY;\n          values.push(value);\n        }\n        maxValue = max(...values);\n      }\n      if (staggerEase) values = values.map(val => staggerEase(val / maxValue) * maxValue);\n      if (reversed) values = values.map(val => axis ? (val < 0) ? val * -1 : -val : abs(maxValue - val));\n    }\n    const spacing = isRange ? (val2 - val1) / maxValue : val1;\n    const offset = tl ? parseTimelinePosition(tl, isUnd(params.start) ? tl.iterationDuration : start) : /** @type {Number} */(start);\n    /** @type {String|Number} */\n    let output = offset + ((spacing * round(values[i], 2)) || 0);\n    if (params.modifier) output = params.modifier(output);\n    if (unitMatch) output = `${output}${unitMatch[2]}`;\n    return output;\n  }\n};\n\nexport { Animatable, Draggable, JSAnimation, Scope, ScrollObserver, Spring, Timeline, Timer, WAAPIAnimation, animate, createAnimatable, createDraggable, createScope, createSpring, createTimeline, createTimer, eases, engine, onScroll, scrollContainers, stagger, svg, utils, waapi };\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}